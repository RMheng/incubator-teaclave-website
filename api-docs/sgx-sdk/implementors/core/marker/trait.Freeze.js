(function() {var implementors = {};
implementors["hashbrown_tstd"] = [{"text":"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/struct.HashMap.html\" title=\"struct hashbrown_tstd::HashMap\">HashMap</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::map::HashMap"]},{"text":"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/struct.HashSet.html\" title=\"struct hashbrown_tstd::HashSet\">HashSet</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::set::HashSet"]},{"text":"impl Freeze for <a class=\"enum\" href=\"hashbrown_tstd/enum.CollectionAllocErr.html\" title=\"enum hashbrown_tstd::CollectionAllocErr\">CollectionAllocErr</a>","synthetic":true,"types":["hashbrown_tstd::CollectionAllocErr"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.Iter.html\" title=\"struct hashbrown_tstd::hash_map::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown_tstd::map::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.IterMut.html\" title=\"struct hashbrown_tstd::hash_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown_tstd::map::IterMut"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.IntoIter.html\" title=\"struct hashbrown_tstd::hash_map::IntoIter\">IntoIter</a>&lt;K, V&gt;","synthetic":true,"types":["hashbrown_tstd::map::IntoIter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.Keys.html\" title=\"struct hashbrown_tstd::hash_map::Keys\">Keys</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown_tstd::map::Keys"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.Values.html\" title=\"struct hashbrown_tstd::hash_map::Values\">Values</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown_tstd::map::Values"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.Drain.html\" title=\"struct hashbrown_tstd::hash_map::Drain\">Drain</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown_tstd::map::Drain"]},{"text":"impl&lt;'a, K, V, F&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.DrainFilter.html\" title=\"struct hashbrown_tstd::hash_map::DrainFilter\">DrainFilter</a>&lt;'a, K, V, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::map::DrainFilter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.ValuesMut.html\" title=\"struct hashbrown_tstd::hash_map::ValuesMut\">ValuesMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown_tstd::map::ValuesMut"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.RawEntryBuilderMut.html\" title=\"struct hashbrown_tstd::hash_map::RawEntryBuilderMut\">RawEntryBuilderMut</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["hashbrown_tstd::map::RawEntryBuilderMut"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.RawOccupiedEntryMut.html\" title=\"struct hashbrown_tstd::hash_map::RawOccupiedEntryMut\">RawOccupiedEntryMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown_tstd::map::RawOccupiedEntryMut"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.RawVacantEntryMut.html\" title=\"struct hashbrown_tstd::hash_map::RawVacantEntryMut\">RawVacantEntryMut</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["hashbrown_tstd::map::RawVacantEntryMut"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.RawEntryBuilder.html\" title=\"struct hashbrown_tstd::hash_map::RawEntryBuilder\">RawEntryBuilder</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["hashbrown_tstd::map::RawEntryBuilder"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.OccupiedEntry.html\" title=\"struct hashbrown_tstd::hash_map::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::map::OccupiedEntry"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.VacantEntry.html\" title=\"struct hashbrown_tstd::hash_map::VacantEntry\">VacantEntry</a>&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::map::VacantEntry"]},{"text":"impl Freeze for <a class=\"enum\" href=\"hashbrown_tstd/hash_map/enum.DefaultHashBuilder.html\" title=\"enum hashbrown_tstd::hash_map::DefaultHashBuilder\">DefaultHashBuilder</a>","synthetic":true,"types":["hashbrown_tstd::map::DefaultHashBuilder"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"enum\" href=\"hashbrown_tstd/hash_map/enum.RawEntryMut.html\" title=\"enum hashbrown_tstd::hash_map::RawEntryMut\">RawEntryMut</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["hashbrown_tstd::map::RawEntryMut"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"enum\" href=\"hashbrown_tstd/hash_map/enum.Entry.html\" title=\"enum hashbrown_tstd::hash_map::Entry\">Entry</a>&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::map::Entry"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.RustcOccupiedEntry.html\" title=\"struct hashbrown_tstd::hash_map::RustcOccupiedEntry\">RustcOccupiedEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::rustc_entry::RustcOccupiedEntry"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.RustcVacantEntry.html\" title=\"struct hashbrown_tstd::hash_map::RustcVacantEntry\">RustcVacantEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::rustc_entry::RustcVacantEntry"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"enum\" href=\"hashbrown_tstd/hash_map/enum.RustcEntry.html\" title=\"enum hashbrown_tstd::hash_map::RustcEntry\">RustcEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::rustc_entry::RustcEntry"]},{"text":"impl&lt;'a, K&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_set/struct.Iter.html\" title=\"struct hashbrown_tstd::hash_set::Iter\">Iter</a>&lt;'a, K&gt;","synthetic":true,"types":["hashbrown_tstd::set::Iter"]},{"text":"impl&lt;K&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_set/struct.IntoIter.html\" title=\"struct hashbrown_tstd::hash_set::IntoIter\">IntoIter</a>&lt;K&gt;","synthetic":true,"types":["hashbrown_tstd::set::IntoIter"]},{"text":"impl&lt;'a, K&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_set/struct.Drain.html\" title=\"struct hashbrown_tstd::hash_set::Drain\">Drain</a>&lt;'a, K&gt;","synthetic":true,"types":["hashbrown_tstd::set::Drain"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_set/struct.Intersection.html\" title=\"struct hashbrown_tstd::hash_set::Intersection\">Intersection</a>&lt;'a, T, S&gt;","synthetic":true,"types":["hashbrown_tstd::set::Intersection"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_set/struct.Difference.html\" title=\"struct hashbrown_tstd::hash_set::Difference\">Difference</a>&lt;'a, T, S&gt;","synthetic":true,"types":["hashbrown_tstd::set::Difference"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_set/struct.SymmetricDifference.html\" title=\"struct hashbrown_tstd::hash_set::SymmetricDifference\">SymmetricDifference</a>&lt;'a, T, S&gt;","synthetic":true,"types":["hashbrown_tstd::set::SymmetricDifference"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_set/struct.Union.html\" title=\"struct hashbrown_tstd::hash_set::Union\">Union</a>&lt;'a, T, S&gt;","synthetic":true,"types":["hashbrown_tstd::set::Union"]}];
implementors["sgx_alloc"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_alloc/struct.System.html\" title=\"struct sgx_alloc::System\">System</a>","synthetic":true,"types":["sgx_alloc::system::System"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_alloc/alignalloc/struct.AlignReq.html\" title=\"struct sgx_alloc::alignalloc::AlignReq\">AlignReq</a>","synthetic":true,"types":["sgx_alloc::alignalloc::AlignReq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_alloc/alignalloc/struct.AlignAlloc.html\" title=\"struct sgx_alloc::alignalloc::AlignAlloc\">AlignAlloc</a>","synthetic":true,"types":["sgx_alloc::alignalloc::AlignAlloc"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_alloc/alignalloc/struct.AlighAllocErr.html\" title=\"struct sgx_alloc::alignalloc::AlighAllocErr\">AlighAllocErr</a>","synthetic":true,"types":["sgx_alloc::alignalloc::AlighAllocErr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_alloc/alignalloc/struct.AlignLayoutErr.html\" title=\"struct sgx_alloc::alignalloc::AlignLayoutErr\">AlignLayoutErr</a>","synthetic":true,"types":["sgx_alloc::alignalloc::AlignLayoutErr"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"sgx_alloc/alignbox/struct.AlignBox.html\" title=\"struct sgx_alloc::alignbox::AlignBox\">AlignBox</a>&lt;T&gt;","synthetic":true,"types":["sgx_alloc::alignbox::AlignBox"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_alloc/rsrvmem/struct.RsrvMemAlloc.html\" title=\"struct sgx_alloc::rsrvmem::RsrvMemAlloc\">RsrvMemAlloc</a>","synthetic":true,"types":["sgx_alloc::rsrvmem::RsrvMemAlloc"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_alloc/rsrvmem/struct.RsrvMemAllocErr.html\" title=\"struct sgx_alloc::rsrvmem::RsrvMemAllocErr\">RsrvMemAllocErr</a>","synthetic":true,"types":["sgx_alloc::rsrvmem::RsrvMemAllocErr"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_alloc/rsrvmem/enum.ProtectAttr.html\" title=\"enum sgx_alloc::rsrvmem::ProtectAttr\">ProtectAttr</a>","synthetic":true,"types":["sgx_alloc::rsrvmem::ProtectAttr"]}];
implementors["sgx_backtrace_sys"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_backtrace_sys/enum.backtrace_state.html\" title=\"enum sgx_backtrace_sys::backtrace_state\">backtrace_state</a>","synthetic":true,"types":["sgx_backtrace_sys::bindings::backtrace_state"]}];
implementors["sgx_demangle"] = [{"text":"impl&lt;'a&gt; Freeze for Demangle&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for TryDemangleError","synthetic":true,"types":[]}];
implementors["sgx_libc"] = [{"text":"impl Freeze for DIR","synthetic":true,"types":[]},{"text":"impl Freeze for stat","synthetic":true,"types":[]},{"text":"impl Freeze for stat64","synthetic":true,"types":[]},{"text":"impl Freeze for timeval","synthetic":true,"types":[]},{"text":"impl Freeze for timespec","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_in","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_in6","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_un","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_storage","synthetic":true,"types":[]},{"text":"impl Freeze for addrinfo","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_nl","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_ll","synthetic":true,"types":[]},{"text":"impl Freeze for fd_set","synthetic":true,"types":[]},{"text":"impl Freeze for tm","synthetic":true,"types":[]},{"text":"impl Freeze for epoll_event","synthetic":true,"types":[]},{"text":"impl Freeze for in_addr","synthetic":true,"types":[]},{"text":"impl Freeze for in6_addr","synthetic":true,"types":[]},{"text":"impl Freeze for ip_mreq","synthetic":true,"types":[]},{"text":"impl Freeze for ipv6_mreq","synthetic":true,"types":[]},{"text":"impl Freeze for hostent","synthetic":true,"types":[]},{"text":"impl Freeze for iovec","synthetic":true,"types":[]},{"text":"impl Freeze for pollfd","synthetic":true,"types":[]},{"text":"impl Freeze for winsize","synthetic":true,"types":[]},{"text":"impl Freeze for linger","synthetic":true,"types":[]},{"text":"impl Freeze for sigval","synthetic":true,"types":[]},{"text":"impl Freeze for msghdr","synthetic":true,"types":[]},{"text":"impl Freeze for cmsghdr","synthetic":true,"types":[]},{"text":"impl Freeze for dirent","synthetic":true,"types":[]},{"text":"impl Freeze for dirent64","synthetic":true,"types":[]},{"text":"impl Freeze for passwd","synthetic":true,"types":[]},{"text":"impl Freeze for cpu_set_t","synthetic":true,"types":[]},{"text":"impl Freeze for ucred","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_once_t","synthetic":true,"types":[]},{"text":"impl Freeze for sigset_t","synthetic":true,"types":[]},{"text":"impl Freeze for sigaction","synthetic":true,"types":[]},{"text":"impl Freeze for siginfo_t","synthetic":true,"types":[]}];
implementors["sgx_tprotected_fs"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tprotected_fs/struct.SgxFileStream.html\" title=\"struct sgx_tprotected_fs::SgxFileStream\">SgxFileStream</a>","synthetic":true,"types":["sgx_tprotected_fs::fs::SgxFileStream"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_tprotected_fs/enum.SeekFrom.html\" title=\"enum sgx_tprotected_fs::SeekFrom\">SeekFrom</a>","synthetic":true,"types":["sgx_tprotected_fs::fs::SeekFrom"]}];
implementors["sgx_trts"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_trts/enclave/struct.global_data_t.html\" title=\"struct sgx_trts::enclave::global_data_t\">global_data_t</a>","synthetic":true,"types":["sgx_trts::enclave::global_data_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_trts/enclave/struct.thread_data_t.html\" title=\"struct sgx_trts::enclave::thread_data_t\">thread_data_t</a>","synthetic":true,"types":["sgx_trts::enclave::thread_data_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_trts/enclave/struct.SgxGlobalData.html\" title=\"struct sgx_trts::enclave::SgxGlobalData\">SgxGlobalData</a>","synthetic":true,"types":["sgx_trts::enclave::SgxGlobalData"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_trts/enclave/struct.SgxThreadData.html\" title=\"struct sgx_trts::enclave::SgxThreadData\">SgxThreadData</a>","synthetic":true,"types":["sgx_trts::enclave::SgxThreadData"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_trts/enclave/enum.SgxThreadPolicy.html\" title=\"enum sgx_trts::enclave::SgxThreadPolicy\">SgxThreadPolicy</a>","synthetic":true,"types":["sgx_trts::enclave::SgxThreadPolicy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_trts/c_str/struct.CString.html\" title=\"struct sgx_trts::c_str::CString\">CString</a>","synthetic":true,"types":["sgx_trts::c_str::CString"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_trts/c_str/struct.CStr.html\" title=\"struct sgx_trts::c_str::CStr\">CStr</a>","synthetic":true,"types":["sgx_trts::c_str::CStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_trts/c_str/struct.NulError.html\" title=\"struct sgx_trts::c_str::NulError\">NulError</a>","synthetic":true,"types":["sgx_trts::c_str::NulError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_trts/c_str/struct.FromBytesWithNulError.html\" title=\"struct sgx_trts::c_str::FromBytesWithNulError\">FromBytesWithNulError</a>","synthetic":true,"types":["sgx_trts::c_str::FromBytesWithNulError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_trts/c_str/struct.IntoStringError.html\" title=\"struct sgx_trts::c_str::IntoStringError\">IntoStringError</a>","synthetic":true,"types":["sgx_trts::c_str::IntoStringError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_trts/cpu_feature/enum.Feature.html\" title=\"enum sgx_trts::cpu_feature::Feature\">Feature</a>","synthetic":true,"types":["sgx_trts::cpu_feature::Feature"]}];
implementors["sgx_tstd"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/thread/struct.LocalKey.html\" title=\"struct sgx_tstd::thread::LocalKey\">LocalKey</a>&lt;T&gt;","synthetic":true,"types":["sgx_tstd::thread::local::LocalKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/thread/struct.AccessError.html\" title=\"struct sgx_tstd::thread::AccessError\">AccessError</a>","synthetic":true,"types":["sgx_tstd::thread::local::AccessError"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"sgx_tstd/thread/struct.__StaticLocalKeyInner.html\" title=\"struct sgx_tstd::thread::__StaticLocalKeyInner\">Key</a>&lt;T&gt;","synthetic":true,"types":["sgx_tstd::thread::local::statik::Key"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/thread/struct.ThreadId.html\" title=\"struct sgx_tstd::thread::ThreadId\">ThreadId</a>","synthetic":true,"types":["sgx_tstd::thread::ThreadId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/thread/struct.SgxThread.html\" title=\"struct sgx_tstd::thread::SgxThread\">SgxThread</a>","synthetic":true,"types":["sgx_tstd::thread::SgxThread"]},{"text":"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/struct.HashMap.html\" title=\"struct sgx_tstd::collections::HashMap\">HashMap</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::collections::hash::map::HashMap"]},{"text":"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/struct.HashSet.html\" title=\"struct sgx_tstd::collections::HashSet\">HashSet</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::collections::hash::set::HashSet"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.Iter.html\" title=\"struct sgx_tstd::collections::hash_map::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::map::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.IterMut.html\" title=\"struct sgx_tstd::collections::hash_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::map::IterMut"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.IntoIter.html\" title=\"struct sgx_tstd::collections::hash_map::IntoIter\">IntoIter</a>&lt;K, V&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::map::IntoIter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.Keys.html\" title=\"struct sgx_tstd::collections::hash_map::Keys\">Keys</a>&lt;'a, K, V&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::map::Keys"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.Values.html\" title=\"struct sgx_tstd::collections::hash_map::Values\">Values</a>&lt;'a, K, V&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::map::Values"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.Drain.html\" title=\"struct sgx_tstd::collections::hash_map::Drain\">Drain</a>&lt;'a, K, V&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::map::Drain"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.ValuesMut.html\" title=\"struct sgx_tstd::collections::hash_map::ValuesMut\">ValuesMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::map::ValuesMut"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.RawEntryBuilderMut.html\" title=\"struct sgx_tstd::collections::hash_map::RawEntryBuilderMut\">RawEntryBuilderMut</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::map::RawEntryBuilderMut"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.RawOccupiedEntryMut.html\" title=\"struct sgx_tstd::collections::hash_map::RawOccupiedEntryMut\">RawOccupiedEntryMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::map::RawOccupiedEntryMut"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.RawVacantEntryMut.html\" title=\"struct sgx_tstd::collections::hash_map::RawVacantEntryMut\">RawVacantEntryMut</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::map::RawVacantEntryMut"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.RawEntryBuilder.html\" title=\"struct sgx_tstd::collections::hash_map::RawEntryBuilder\">RawEntryBuilder</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::map::RawEntryBuilder"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.OccupiedEntry.html\" title=\"struct sgx_tstd::collections::hash_map::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::collections::hash::map::OccupiedEntry"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.VacantEntry.html\" title=\"struct sgx_tstd::collections::hash_map::VacantEntry\">VacantEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::collections::hash::map::VacantEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.RandomState.html\" title=\"struct sgx_tstd::collections::hash_map::RandomState\">RandomState</a>","synthetic":true,"types":["sgx_tstd::collections::hash::map::RandomState"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.DefaultHasher.html\" title=\"struct sgx_tstd::collections::hash_map::DefaultHasher\">DefaultHasher</a>","synthetic":true,"types":["sgx_tstd::collections::hash::map::DefaultHasher"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"enum\" href=\"sgx_tstd/collections/hash_map/enum.RawEntryMut.html\" title=\"enum sgx_tstd::collections::hash_map::RawEntryMut\">RawEntryMut</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::map::RawEntryMut"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"enum\" href=\"sgx_tstd/collections/hash_map/enum.Entry.html\" title=\"enum sgx_tstd::collections::hash_map::Entry\">Entry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::collections::hash::map::Entry"]},{"text":"impl&lt;'a, K&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_set/struct.Iter.html\" title=\"struct sgx_tstd::collections::hash_set::Iter\">Iter</a>&lt;'a, K&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::set::Iter"]},{"text":"impl&lt;K&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_set/struct.IntoIter.html\" title=\"struct sgx_tstd::collections::hash_set::IntoIter\">IntoIter</a>&lt;K&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::set::IntoIter"]},{"text":"impl&lt;'a, K&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_set/struct.Drain.html\" title=\"struct sgx_tstd::collections::hash_set::Drain\">Drain</a>&lt;'a, K&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::set::Drain"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_set/struct.Intersection.html\" title=\"struct sgx_tstd::collections::hash_set::Intersection\">Intersection</a>&lt;'a, T, S&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::set::Intersection"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_set/struct.Difference.html\" title=\"struct sgx_tstd::collections::hash_set::Difference\">Difference</a>&lt;'a, T, S&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::set::Difference"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_set/struct.SymmetricDifference.html\" title=\"struct sgx_tstd::collections::hash_set::SymmetricDifference\">SymmetricDifference</a>&lt;'a, T, S&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::set::SymmetricDifference"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_set/struct.Union.html\" title=\"struct sgx_tstd::collections::hash_set::Union\">Union</a>&lt;'a, T, S&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::set::Union"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/env/struct.Vars.html\" title=\"struct sgx_tstd::env::Vars\">Vars</a>","synthetic":true,"types":["sgx_tstd::env::Vars"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/env/struct.VarsOs.html\" title=\"struct sgx_tstd::env::VarsOs\">VarsOs</a>","synthetic":true,"types":["sgx_tstd::env::VarsOs"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/env/struct.SplitPaths.html\" title=\"struct sgx_tstd::env::SplitPaths\">SplitPaths</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::env::SplitPaths"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/env/struct.JoinPathsError.html\" title=\"struct sgx_tstd::env::JoinPathsError\">JoinPathsError</a>","synthetic":true,"types":["sgx_tstd::env::JoinPathsError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_tstd/env/enum.VarError.html\" title=\"enum sgx_tstd::env::VarError\">VarError</a>","synthetic":true,"types":["sgx_tstd::env::VarError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/error/struct.Chain.html\" title=\"struct sgx_tstd::error::Chain\">Chain</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::error::Chain"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/error/struct.ErrorIter.html\" title=\"struct sgx_tstd::error::ErrorIter\">ErrorIter</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::error::ErrorIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/ffi/struct.OsString.html\" title=\"struct sgx_tstd::ffi::OsString\">OsString</a>","synthetic":true,"types":["sgx_tstd::ffi::os_str::OsString"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/ffi/struct.OsStr.html\" title=\"struct sgx_tstd::ffi::OsStr\">OsStr</a>","synthetic":true,"types":["sgx_tstd::ffi::os_str::OsStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/sgxfs/struct.SgxFile.html\" title=\"struct sgx_tstd::sgxfs::SgxFile\">SgxFile</a>","synthetic":true,"types":["sgx_tstd::sgxfs::SgxFile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/sgxfs/struct.OpenOptions.html\" title=\"struct sgx_tstd::sgxfs::OpenOptions\">OpenOptions</a>","synthetic":true,"types":["sgx_tstd::sgxfs::OpenOptions"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.IntoInnerError.html\" title=\"struct sgx_tstd::io::IntoInnerError\">IntoInnerError</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::io::buffered::IntoInnerError"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.BufReader.html\" title=\"struct sgx_tstd::io::BufReader\">BufReader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::io::buffered::BufReader"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.BufWriter.html\" title=\"struct sgx_tstd::io::BufWriter\">BufWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::io::buffered::BufWriter"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.LineWriter.html\" title=\"struct sgx_tstd::io::LineWriter\">LineWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::io::buffered::LineWriter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Cursor.html\" title=\"struct sgx_tstd::io::Cursor\">Cursor</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::io::cursor::Cursor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Error.html\" title=\"struct sgx_tstd::io::Error\">Error</a>","synthetic":true,"types":["sgx_tstd::io::error::Error"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Lazy.html\" title=\"struct sgx_tstd::io::Lazy\">Lazy</a>&lt;T&gt;","synthetic":true,"types":["sgx_tstd::io::lazy::Lazy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Stderr.html\" title=\"struct sgx_tstd::io::Stderr\">Stderr</a>","synthetic":true,"types":["sgx_tstd::io::stdio::Stderr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Stdin.html\" title=\"struct sgx_tstd::io::Stdin\">Stdin</a>","synthetic":true,"types":["sgx_tstd::io::stdio::Stdin"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Stdout.html\" title=\"struct sgx_tstd::io::Stdout\">Stdout</a>","synthetic":true,"types":["sgx_tstd::io::stdio::Stdout"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.StderrLock.html\" title=\"struct sgx_tstd::io::StderrLock\">StderrLock</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::io::stdio::StderrLock"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.StdinLock.html\" title=\"struct sgx_tstd::io::StdinLock\">StdinLock</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::io::stdio::StdinLock"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.StdoutLock.html\" title=\"struct sgx_tstd::io::StdoutLock\">StdoutLock</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::io::stdio::StdoutLock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Empty.html\" title=\"struct sgx_tstd::io::Empty\">Empty</a>","synthetic":true,"types":["sgx_tstd::io::util::Empty"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Repeat.html\" title=\"struct sgx_tstd::io::Repeat\">Repeat</a>","synthetic":true,"types":["sgx_tstd::io::util::Repeat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Sink.html\" title=\"struct sgx_tstd::io::Sink\">Sink</a>","synthetic":true,"types":["sgx_tstd::io::util::Sink"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.IoSliceMut.html\" title=\"struct sgx_tstd::io::IoSliceMut\">IoSliceMut</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::io::IoSliceMut"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.IoSlice.html\" title=\"struct sgx_tstd::io::IoSlice\">IoSlice</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::io::IoSlice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Initializer.html\" title=\"struct sgx_tstd::io::Initializer\">Initializer</a>","synthetic":true,"types":["sgx_tstd::io::Initializer"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Chain.html\" title=\"struct sgx_tstd::io::Chain\">Chain</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::io::Chain"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Take.html\" title=\"struct sgx_tstd::io::Take\">Take</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::io::Take"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Bytes.html\" title=\"struct sgx_tstd::io::Bytes\">Bytes</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::io::Bytes"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Split.html\" title=\"struct sgx_tstd::io::Split\">Split</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::io::Split"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Lines.html\" title=\"struct sgx_tstd::io::Lines\">Lines</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::io::Lines"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_tstd/io/enum.ErrorKind.html\" title=\"enum sgx_tstd::io::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["sgx_tstd::io::error::ErrorKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_tstd/io/enum.SeekFrom.html\" title=\"enum sgx_tstd::io::SeekFrom\">SeekFrom</a>","synthetic":true,"types":["sgx_tstd::io::SeekFrom"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/net/struct.Ipv4Addr.html\" title=\"struct sgx_tstd::net::Ipv4Addr\">Ipv4Addr</a>","synthetic":true,"types":["sgx_tstd::net::ip::Ipv4Addr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/net/struct.Ipv6Addr.html\" title=\"struct sgx_tstd::net::Ipv6Addr\">Ipv6Addr</a>","synthetic":true,"types":["sgx_tstd::net::ip::Ipv6Addr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/net/struct.SocketAddrV4.html\" title=\"struct sgx_tstd::net::SocketAddrV4\">SocketAddrV4</a>","synthetic":true,"types":["sgx_tstd::net::addr::SocketAddrV4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/net/struct.SocketAddrV6.html\" title=\"struct sgx_tstd::net::SocketAddrV6\">SocketAddrV6</a>","synthetic":true,"types":["sgx_tstd::net::addr::SocketAddrV6"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/net/struct.AddrParseError.html\" title=\"struct sgx_tstd::net::AddrParseError\">AddrParseError</a>","synthetic":true,"types":["sgx_tstd::net::parser::AddrParseError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_tstd/net/enum.IpAddr.html\" title=\"enum sgx_tstd::net::IpAddr\">IpAddr</a>","synthetic":true,"types":["sgx_tstd::net::ip::IpAddr"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_tstd/net/enum.Ipv6MulticastScope.html\" title=\"enum sgx_tstd::net::Ipv6MulticastScope\">Ipv6MulticastScope</a>","synthetic":true,"types":["sgx_tstd::net::ip::Ipv6MulticastScope"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_tstd/net/enum.SocketAddr.html\" title=\"enum sgx_tstd::net::SocketAddr\">SocketAddr</a>","synthetic":true,"types":["sgx_tstd::net::addr::SocketAddr"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_tstd/net/enum.Shutdown.html\" title=\"enum sgx_tstd::net::Shutdown\">Shutdown</a>","synthetic":true,"types":["sgx_tstd::net::Shutdown"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/os/raw/struct.stat.html\" title=\"struct sgx_tstd::os::raw::stat\">stat</a>","synthetic":true,"types":["sgx_tstd::os::raw::arch::stat"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/panic/struct.AssertUnwindSafe.html\" title=\"struct sgx_tstd::panic::AssertUnwindSafe\">AssertUnwindSafe</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::panic::AssertUnwindSafe"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/path/struct.PrefixComponent.html\" title=\"struct sgx_tstd::path::PrefixComponent\">PrefixComponent</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::path::PrefixComponent"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/path/struct.Components.html\" title=\"struct sgx_tstd::path::Components\">Components</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::path::Components"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/path/struct.Iter.html\" title=\"struct sgx_tstd::path::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::path::Iter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/path/struct.Ancestors.html\" title=\"struct sgx_tstd::path::Ancestors\">Ancestors</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::path::Ancestors"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/path/struct.PathBuf.html\" title=\"struct sgx_tstd::path::PathBuf\">PathBuf</a>","synthetic":true,"types":["sgx_tstd::path::PathBuf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/path/struct.Path.html\" title=\"struct sgx_tstd::path::Path\">Path</a>","synthetic":true,"types":["sgx_tstd::path::Path"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/path/struct.StripPrefixError.html\" title=\"struct sgx_tstd::path::StripPrefixError\">StripPrefixError</a>","synthetic":true,"types":["sgx_tstd::path::StripPrefixError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/path/struct.Display.html\" title=\"struct sgx_tstd::path::Display\">Display</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::path::Display"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"sgx_tstd/path/enum.Prefix.html\" title=\"enum sgx_tstd::path::Prefix\">Prefix</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::path::Prefix"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"sgx_tstd/path/enum.Component.html\" title=\"enum sgx_tstd::path::Component\">Component</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::path::Component"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.Barrier.html\" title=\"struct sgx_tstd::sync::Barrier\">Barrier</a>","synthetic":true,"types":["sgx_tstd::sync::barrier::Barrier"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.BarrierWaitResult.html\" title=\"struct sgx_tstd::sync::BarrierWaitResult\">BarrierWaitResult</a>","synthetic":true,"types":["sgx_tstd::sync::barrier::BarrierWaitResult"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxCondvar.html\" title=\"struct sgx_tstd::sync::SgxCondvar\">SgxCondvar</a>","synthetic":true,"types":["sgx_tstd::sync::condvar::SgxCondvar"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxThreadCondvar.html\" title=\"struct sgx_tstd::sync::SgxThreadCondvar\">SgxThreadCondvar</a>","synthetic":true,"types":["sgx_tstd::sync::condvar::SgxThreadCondvar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.WaitTimeoutResult.html\" title=\"struct sgx_tstd::sync::WaitTimeoutResult\">WaitTimeoutResult</a>","synthetic":true,"types":["sgx_tstd::sync::condvar::WaitTimeoutResult"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxMutex.html\" title=\"struct sgx_tstd::sync::SgxMutex\">SgxMutex</a>&lt;T&gt;","synthetic":true,"types":["sgx_tstd::sync::mutex::SgxMutex"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"sgx_tstd/marker/trait.Sized.html\" title=\"trait sgx_tstd::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxMutexGuard.html\" title=\"struct sgx_tstd::sync::SgxMutexGuard\">SgxMutexGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["sgx_tstd::sync::mutex::SgxMutexGuard"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxThreadMutex.html\" title=\"struct sgx_tstd::sync::SgxThreadMutex\">SgxThreadMutex</a>","synthetic":true,"types":["sgx_tstd::sync::mutex::SgxThreadMutex"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxReentrantMutex.html\" title=\"struct sgx_tstd::sync::SgxReentrantMutex\">SgxReentrantMutex</a>&lt;T&gt;","synthetic":true,"types":["sgx_tstd::sync::remutex::SgxReentrantMutex"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxReentrantMutexGuard.html\" title=\"struct sgx_tstd::sync::SgxReentrantMutexGuard\">SgxReentrantMutexGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["sgx_tstd::sync::remutex::SgxReentrantMutexGuard"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxReentrantThreadMutex.html\" title=\"struct sgx_tstd::sync::SgxReentrantThreadMutex\">SgxReentrantThreadMutex</a>","synthetic":true,"types":["sgx_tstd::sync::remutex::SgxReentrantThreadMutex"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.Once.html\" title=\"struct sgx_tstd::sync::Once\">Once</a>","synthetic":true,"types":["sgx_tstd::sync::once::Once"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.OnceState.html\" title=\"struct sgx_tstd::sync::OnceState\">OnceState</a>","synthetic":true,"types":["sgx_tstd::sync::once::OnceState"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxRwLock.html\" title=\"struct sgx_tstd::sync::SgxRwLock\">SgxRwLock</a>&lt;T&gt;","synthetic":true,"types":["sgx_tstd::sync::rwlock::SgxRwLock"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"sgx_tstd/marker/trait.Sized.html\" title=\"trait sgx_tstd::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxRwLockReadGuard.html\" title=\"struct sgx_tstd::sync::SgxRwLockReadGuard\">SgxRwLockReadGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["sgx_tstd::sync::rwlock::SgxRwLockReadGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"sgx_tstd/marker/trait.Sized.html\" title=\"trait sgx_tstd::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxRwLockWriteGuard.html\" title=\"struct sgx_tstd::sync::SgxRwLockWriteGuard\">SgxRwLockWriteGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["sgx_tstd::sync::rwlock::SgxRwLockWriteGuard"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxThreadRwLock.html\" title=\"struct sgx_tstd::sync::SgxThreadRwLock\">SgxThreadRwLock</a>","synthetic":true,"types":["sgx_tstd::sync::rwlock::SgxThreadRwLock"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxSpinlock.html\" title=\"struct sgx_tstd::sync::SgxSpinlock\">SgxSpinlock</a>","synthetic":true,"types":["sgx_tstd::sync::spinlock::SgxSpinlock"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxSpinlockGuard.html\" title=\"struct sgx_tstd::sync::SgxSpinlockGuard\">SgxSpinlockGuard</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::sync::spinlock::SgxSpinlockGuard"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxThreadSpinlock.html\" title=\"struct sgx_tstd::sync::SgxThreadSpinlock\">SgxThreadSpinlock</a>","synthetic":true,"types":["sgx_tstd::sync::spinlock::SgxThreadSpinlock"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.PoisonError.html\" title=\"struct sgx_tstd::sync::PoisonError\">PoisonError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::sys_common::poison::PoisonError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"sgx_tstd/sync/enum.TryLockError.html\" title=\"enum sgx_tstd::sync::TryLockError\">TryLockError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::sys_common::poison::TryLockError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/time/struct.Instant.html\" title=\"struct sgx_tstd::time::Instant\">Instant</a>","synthetic":true,"types":["sgx_tstd::time::Instant"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/time/struct.SystemTime.html\" title=\"struct sgx_tstd::time::SystemTime\">SystemTime</a>","synthetic":true,"types":["sgx_tstd::time::SystemTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/time/struct.SystemTimeError.html\" title=\"struct sgx_tstd::time::SystemTimeError\">SystemTimeError</a>","synthetic":true,"types":["sgx_tstd::time::SystemTimeError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/untrusted/fs/struct.File.html\" title=\"struct sgx_tstd::untrusted::fs::File\">File</a>","synthetic":true,"types":["sgx_tstd::fs::File"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/untrusted/fs/struct.Metadata.html\" title=\"struct sgx_tstd::untrusted::fs::Metadata\">Metadata</a>","synthetic":true,"types":["sgx_tstd::fs::Metadata"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/untrusted/fs/struct.ReadDir.html\" title=\"struct sgx_tstd::untrusted::fs::ReadDir\">ReadDir</a>","synthetic":true,"types":["sgx_tstd::fs::ReadDir"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/untrusted/fs/struct.DirEntry.html\" title=\"struct sgx_tstd::untrusted::fs::DirEntry\">DirEntry</a>","synthetic":true,"types":["sgx_tstd::fs::DirEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/untrusted/fs/struct.OpenOptions.html\" title=\"struct sgx_tstd::untrusted::fs::OpenOptions\">OpenOptions</a>","synthetic":true,"types":["sgx_tstd::fs::OpenOptions"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/untrusted/fs/struct.Permissions.html\" title=\"struct sgx_tstd::untrusted::fs::Permissions\">Permissions</a>","synthetic":true,"types":["sgx_tstd::fs::Permissions"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/untrusted/fs/struct.FileType.html\" title=\"struct sgx_tstd::untrusted::fs::FileType\">FileType</a>","synthetic":true,"types":["sgx_tstd::fs::FileType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/untrusted/fs/struct.DirBuilder.html\" title=\"struct sgx_tstd::untrusted::fs::DirBuilder\">DirBuilder</a>","synthetic":true,"types":["sgx_tstd::fs::DirBuilder"]}];
implementors["sgx_types"] = [{"text":"impl Freeze for sgx_attributes_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_misc_attribute_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_dh_msg1_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_dh_msg2_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_dh_msg3_body_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_dh_msg3_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_dh_session_enclave_identity_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_dh_session_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_dh_session_role_t","synthetic":true,"types":[]},{"text":"impl Freeze for ecc_param_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_cpu_svn_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_key_id_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_key_request_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_ra_key_type_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_ra_msg1_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_ra_msg2_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_ps_sec_prop_desc_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_ra_msg3_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_spid_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_basename_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_quote_nonce_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_update_info_bit_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_quote_sign_type_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_quote_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_platform_info_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_att_key_id_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_ql_att_key_id_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_att_key_id_ext_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_qe_report_info_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_measurement_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_report_data_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_target_info_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_report_body_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_report_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_ec256_dh_shared_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_ec256_private_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_ec256_public_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_ec256_signature_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_rsa3072_public_key_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_rsa3072_key_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_rsa3072_signature_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_generic_ecresult_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_rsa_result_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_rsa_key_type_t","synthetic":true,"types":[]},{"text":"impl Freeze for rsa_params_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_thread_queue_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_thread_mutex_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_thread_mutex_attr_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_thread_cond_attr_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_thread_cond_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_exception_vector_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_exception_type_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_cpu_context_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_exception_info_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_aes_gcm_data_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_sealed_data_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_ps_cap_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_kss_config_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_device_status_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_uswitchless_worker_type_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_uswitchless_worker_event_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_uswitchless_worker_stats_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_uswitchless_config_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_ql_request_policy_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_pce_info_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_ql_qe3_id_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_ql_config_version_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_ql_pck_cert_id_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_ql_config_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_ql_qve_collateral_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_ql_attestation_algorithm_id_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_ql_cert_key_type_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_ql_ppid_rsa3072_encrypted_cert_info_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_ql_auth_data_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_ql_certification_data_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_ql_ecdsa_sig_data_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_quote_header_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_quote3_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_ql_qe_report_info_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_ql_path_type_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_ql_qv_supplemental_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_ql_qv_result_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_qv_path_type_t","synthetic":true,"types":[]},{"text":"impl Freeze for align_req_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_align_key_128bit_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_align_mac_128bit_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_align_key_256bit_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_align_mac_256bit_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_align_ec256_dh_shared_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_align_ec256_private_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_status_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_pce_error_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_quote3_error_t","synthetic":true,"types":[]},{"text":"impl Freeze for sgx_qcnl_error_t","synthetic":true,"types":[]},{"text":"impl Freeze for tcs_t","synthetic":true,"types":[]},{"text":"impl Freeze for css_header_t","synthetic":true,"types":[]},{"text":"impl Freeze for css_key_t","synthetic":true,"types":[]},{"text":"impl Freeze for css_body_t","synthetic":true,"types":[]},{"text":"impl Freeze for css_buffer_t","synthetic":true,"types":[]},{"text":"impl Freeze for enclave_css_t","synthetic":true,"types":[]},{"text":"impl Freeze for data_directory_t","synthetic":true,"types":[]},{"text":"impl Freeze for dir_index_t","synthetic":true,"types":[]},{"text":"impl Freeze for layout_entry_t","synthetic":true,"types":[]},{"text":"impl Freeze for layout_group_t","synthetic":true,"types":[]},{"text":"impl Freeze for layout_t","synthetic":true,"types":[]},{"text":"impl Freeze for patch_entry_t","synthetic":true,"types":[]},{"text":"impl Freeze for metadata_t","synthetic":true,"types":[]}];
implementors["sgx_unwind"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_unwind/struct._Unwind_Exception.html\" title=\"struct sgx_unwind::_Unwind_Exception\">_Unwind_Exception</a>","synthetic":true,"types":["sgx_unwind::libunwind::_Unwind_Exception"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_unwind/enum._Unwind_Reason_Code.html\" title=\"enum sgx_unwind::_Unwind_Reason_Code\">_Unwind_Reason_Code</a>","synthetic":true,"types":["sgx_unwind::libunwind::_Unwind_Reason_Code"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_unwind/enum._Unwind_Context.html\" title=\"enum sgx_unwind::_Unwind_Context\">_Unwind_Context</a>","synthetic":true,"types":["sgx_unwind::libunwind::_Unwind_Context"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_unwind/enum._Unwind_Action.html\" title=\"enum sgx_unwind::_Unwind_Action\">_Unwind_Action</a>","synthetic":true,"types":["sgx_unwind::libunwind::_Unwind_Action"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()