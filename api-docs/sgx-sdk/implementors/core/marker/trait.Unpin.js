(function() {var implementors = {};
implementors["hashbrown_tstd"] = [{"text":"impl&lt;K, V, S&gt; Unpin for HashMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Unpin for HashSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for TryReserveError","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Keys&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Values&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Drain&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, F&gt; Unpin for DrainFilter&lt;'a, K, V, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for ValuesMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for RawEntryBuilderMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for RawOccupiedEntryMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for RawVacantEntryMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for RawEntryBuilder&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for OccupiedEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for VacantEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for DefaultHashBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for RawEntryMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for Entry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for RustcOccupiedEntry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for RustcVacantEntry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for RustcEntry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K&gt; Unpin for Iter&lt;'a, K&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Unpin for IntoIter&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K&gt; Unpin for Drain&lt;'a, K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, F&gt; Unpin for DrainFilter&lt;'a, K, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for Intersection&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for Difference&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for SymmetricDifference&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for Union&lt;'a, T, S&gt;","synthetic":true,"types":[]}];
implementors["sgx_alloc"] = [{"text":"impl Unpin for System","synthetic":true,"types":[]},{"text":"impl Unpin for AlignReq","synthetic":true,"types":[]},{"text":"impl Unpin for AlignAlloc","synthetic":true,"types":[]},{"text":"impl Unpin for AlighAllocErr","synthetic":true,"types":[]},{"text":"impl Unpin for AlignLayoutErr","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for AlignBox&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RsrvMemAlloc","synthetic":true,"types":[]},{"text":"impl Unpin for RsrvMemAllocErr","synthetic":true,"types":[]},{"text":"impl Unpin for ProtectAttr","synthetic":true,"types":[]}];
implementors["sgx_backtrace_sys"] = [{"text":"impl Unpin for backtrace_state","synthetic":true,"types":[]}];
implementors["sgx_demangle"] = [{"text":"impl&lt;'a&gt; Unpin for Demangle&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for TryDemangleError","synthetic":true,"types":[]}];
implementors["sgx_libc"] = [{"text":"impl Unpin for stat","synthetic":true,"types":[]},{"text":"impl Unpin for stat64","synthetic":true,"types":[]},{"text":"impl Unpin for timeval","synthetic":true,"types":[]},{"text":"impl Unpin for timespec","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_in","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_in6","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_un","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_storage","synthetic":true,"types":[]},{"text":"impl Unpin for addrinfo","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_nl","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_ll","synthetic":true,"types":[]},{"text":"impl Unpin for fd_set","synthetic":true,"types":[]},{"text":"impl Unpin for tm","synthetic":true,"types":[]},{"text":"impl Unpin for epoll_event","synthetic":true,"types":[]},{"text":"impl Unpin for in_addr","synthetic":true,"types":[]},{"text":"impl Unpin for in6_addr","synthetic":true,"types":[]},{"text":"impl Unpin for ip_mreq","synthetic":true,"types":[]},{"text":"impl Unpin for ipv6_mreq","synthetic":true,"types":[]},{"text":"impl Unpin for hostent","synthetic":true,"types":[]},{"text":"impl Unpin for iovec","synthetic":true,"types":[]},{"text":"impl Unpin for pollfd","synthetic":true,"types":[]},{"text":"impl Unpin for winsize","synthetic":true,"types":[]},{"text":"impl Unpin for linger","synthetic":true,"types":[]},{"text":"impl Unpin for sigval","synthetic":true,"types":[]},{"text":"impl Unpin for msghdr","synthetic":true,"types":[]},{"text":"impl Unpin for cmsghdr","synthetic":true,"types":[]},{"text":"impl Unpin for dirent","synthetic":true,"types":[]},{"text":"impl Unpin for dirent64","synthetic":true,"types":[]},{"text":"impl Unpin for passwd","synthetic":true,"types":[]},{"text":"impl Unpin for cpu_set_t","synthetic":true,"types":[]},{"text":"impl Unpin for ucred","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_once_t","synthetic":true,"types":[]},{"text":"impl Unpin for sigset_t","synthetic":true,"types":[]},{"text":"impl Unpin for sigaction","synthetic":true,"types":[]},{"text":"impl Unpin for siginfo_t","synthetic":true,"types":[]},{"text":"impl Unpin for DIR","synthetic":true,"types":[]}];
implementors["sgx_tprotected_fs"] = [{"text":"impl Unpin for SgxFileStream","synthetic":true,"types":[]},{"text":"impl Unpin for SeekFrom","synthetic":true,"types":[]}];
implementors["sgx_trts"] = [{"text":"impl Unpin for CString","synthetic":true,"types":[]},{"text":"impl Unpin for CStr","synthetic":true,"types":[]},{"text":"impl Unpin for NulError","synthetic":true,"types":[]},{"text":"impl Unpin for FromBytesWithNulError","synthetic":true,"types":[]},{"text":"impl Unpin for IntoStringError","synthetic":true,"types":[]},{"text":"impl Unpin for Feature","synthetic":true,"types":[]},{"text":"impl Unpin for global_data_t","synthetic":true,"types":[]},{"text":"impl Unpin for thread_data_t","synthetic":true,"types":[]},{"text":"impl Unpin for SgxGlobalData","synthetic":true,"types":[]},{"text":"impl Unpin for SgxThreadData","synthetic":true,"types":[]},{"text":"impl Unpin for SgxThreadPolicy","synthetic":true,"types":[]}];
implementors["sgx_types"] = [{"text":"impl Unpin for sgx_attributes_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_misc_attribute_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_dh_msg1_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_dh_msg2_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_dh_msg3_body_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_dh_msg3_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_dh_session_enclave_identity_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_dh_session_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ecc_param_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_cpu_svn_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_key_id_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_key_request_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ra_msg1_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ra_msg2_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ps_sec_prop_desc_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ra_msg3_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_spid_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_basename_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_quote_nonce_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_update_info_bit_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_quote_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_platform_info_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_att_key_id_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ql_att_key_id_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_att_key_id_ext_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_qe_report_info_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_measurement_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_report_data_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_target_info_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_report_body_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_report_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ec256_dh_shared_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ec256_private_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ec256_public_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ec256_signature_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_rsa3072_public_key_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_rsa3072_key_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_rsa3072_signature_t","synthetic":true,"types":[]},{"text":"impl Unpin for rsa_params_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_thread_queue_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_thread_mutex_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_thread_rwlock_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_thread_mutex_attr_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_thread_rwlockattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_thread_cond_attr_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_thread_cond_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_cpu_context_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_exception_info_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_aes_gcm_data_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_sealed_data_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ps_cap_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_kss_config_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_uswitchless_worker_stats_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_uswitchless_config_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_pce_info_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ql_qe3_id_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ql_pck_cert_id_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ql_config_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ql_qve_collateral_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ql_ppid_rsa3072_encrypted_cert_info_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ql_auth_data_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ql_certification_data_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ql_ecdsa_sig_data_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_quote_header_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_quote3_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ql_qe_report_info_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ql_qv_supplemental_t","synthetic":true,"types":[]},{"text":"impl Unpin for align_req_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_align_key_128bit_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_align_mac_128bit_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_align_key_256bit_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_align_mac_256bit_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_align_ec256_dh_shared_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_align_ec256_private_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_dh_session_role_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ra_key_type_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_quote_sign_type_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_generic_ecresult_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_rsa_result_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_rsa_key_type_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_exception_vector_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_exception_type_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_device_status_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_uswitchless_worker_type_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_uswitchless_worker_event_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ql_request_policy_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ql_config_version_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ql_attestation_algorithm_id_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ql_cert_key_type_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ql_path_type_t","synthetic":true,"types":[]},{"text":"impl Unpin for pck_cert_flag_enum_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_qv_path_type_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_status_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_pce_error_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_quote3_error_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_qcnl_error_t","synthetic":true,"types":[]},{"text":"impl Unpin for sgx_ql_qv_result_t","synthetic":true,"types":[]},{"text":"impl Unpin for tcs_t","synthetic":true,"types":[]},{"text":"impl Unpin for css_header_t","synthetic":true,"types":[]},{"text":"impl Unpin for css_key_t","synthetic":true,"types":[]},{"text":"impl Unpin for css_body_t","synthetic":true,"types":[]},{"text":"impl Unpin for css_buffer_t","synthetic":true,"types":[]},{"text":"impl Unpin for enclave_css_t","synthetic":true,"types":[]},{"text":"impl Unpin for data_directory_t","synthetic":true,"types":[]},{"text":"impl Unpin for layout_entry_t","synthetic":true,"types":[]},{"text":"impl Unpin for layout_group_t","synthetic":true,"types":[]},{"text":"impl Unpin for patch_entry_t","synthetic":true,"types":[]},{"text":"impl Unpin for metadata_t","synthetic":true,"types":[]},{"text":"impl Unpin for layout_t","synthetic":true,"types":[]},{"text":"impl Unpin for dir_index_t","synthetic":true,"types":[]}];
implementors["sgx_unwind"] = [{"text":"impl Unpin for _Unwind_Exception","synthetic":true,"types":[]},{"text":"impl Unpin for _Unwind_Reason_Code","synthetic":true,"types":[]},{"text":"impl Unpin for _Unwind_Context","synthetic":true,"types":[]},{"text":"impl Unpin for _Unwind_Action","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()