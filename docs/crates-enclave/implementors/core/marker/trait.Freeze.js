(function() {var implementors = {};
implementors["aho_corasick"] = [{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.AhoCorasick.html\" title=\"struct aho_corasick::AhoCorasick\">AhoCorasick</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["aho_corasick::ahocorasick::AhoCorasick"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/struct.AhoCorasickBuilder.html\" title=\"struct aho_corasick::AhoCorasickBuilder\">AhoCorasickBuilder</a>","synthetic":true,"types":["aho_corasick::ahocorasick::AhoCorasickBuilder"]},{"text":"impl&lt;'a, 'b, S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.FindIter.html\" title=\"struct aho_corasick::FindIter\">FindIter</a>&lt;'a, 'b, S&gt;","synthetic":true,"types":["aho_corasick::ahocorasick::FindIter"]},{"text":"impl&lt;'a, 'b, S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.FindOverlappingIter.html\" title=\"struct aho_corasick::FindOverlappingIter\">FindOverlappingIter</a>&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["aho_corasick::ahocorasick::FindOverlappingIter"]},{"text":"impl&lt;'a, R, S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.StreamFindIter.html\" title=\"struct aho_corasick::StreamFindIter\">StreamFindIter</a>&lt;'a, R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["aho_corasick::ahocorasick::StreamFindIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/struct.Error.html\" title=\"struct aho_corasick::Error\">Error</a>","synthetic":true,"types":["aho_corasick::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/struct.Match.html\" title=\"struct aho_corasick::Match\">Match</a>","synthetic":true,"types":["aho_corasick::Match"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aho_corasick/enum.MatchKind.html\" title=\"enum aho_corasick::MatchKind\">MatchKind</a>","synthetic":true,"types":["aho_corasick::ahocorasick::MatchKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aho_corasick/enum.ErrorKind.html\" title=\"enum aho_corasick::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["aho_corasick::error::ErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.Builder.html\" title=\"struct aho_corasick::packed::Builder\">Builder</a>","synthetic":true,"types":["aho_corasick::packed::api::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.Config.html\" title=\"struct aho_corasick::packed::Config\">Config</a>","synthetic":true,"types":["aho_corasick::packed::api::Config"]},{"text":"impl&lt;'s, 'h&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.FindIter.html\" title=\"struct aho_corasick::packed::FindIter\">FindIter</a>&lt;'s, 'h&gt;","synthetic":true,"types":["aho_corasick::packed::api::FindIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.Searcher.html\" title=\"struct aho_corasick::packed::Searcher\">Searcher</a>","synthetic":true,"types":["aho_corasick::packed::api::Searcher"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aho_corasick/packed/enum.MatchKind.html\" title=\"enum aho_corasick::packed::MatchKind\">MatchKind</a>","synthetic":true,"types":["aho_corasick::packed::api::MatchKind"]}];
implementors["anyhow"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>","synthetic":true,"types":["anyhow::Error"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"anyhow/struct.Chain.html\" title=\"struct anyhow::Chain\">Chain</a>&lt;'a&gt;","synthetic":true,"types":["anyhow::Chain"]}];
implementors["base64"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"base64/struct.Config.html\" title=\"struct base64::Config\">Config</a>","synthetic":true,"types":["base64::Config"]},{"text":"impl Freeze for <a class=\"enum\" href=\"base64/enum.DecodeError.html\" title=\"enum base64::DecodeError\">DecodeError</a>","synthetic":true,"types":["base64::decode::DecodeError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"base64/enum.CharacterSet.html\" title=\"enum base64::CharacterSet\">CharacterSet</a>","synthetic":true,"types":["base64::CharacterSet"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"base64/display/struct.Base64Display.html\" title=\"struct base64::display::Base64Display\">Base64Display</a>&lt;'a&gt;","synthetic":true,"types":["base64::display::Base64Display"]},{"text":"impl&lt;'a, W&gt; Freeze for <a class=\"struct\" href=\"base64/write/struct.EncoderWriter.html\" title=\"struct base64::write::EncoderWriter\">EncoderWriter</a>&lt;'a, W&gt;","synthetic":true,"types":["base64::write::encoder::EncoderWriter"]}];
implementors["bit_vec"] = [{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bit_vec/struct.BitVec.html\" title=\"struct bit_vec::BitVec\">BitVec</a>&lt;B&gt;","synthetic":true,"types":["bit_vec::BitVec"]},{"text":"impl&lt;'a, B&gt; Freeze for <a class=\"struct\" href=\"bit_vec/struct.Iter.html\" title=\"struct bit_vec::Iter\">Iter</a>&lt;'a, B&gt;","synthetic":true,"types":["bit_vec::Iter"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bit_vec/struct.IntoIter.html\" title=\"struct bit_vec::IntoIter\">IntoIter</a>&lt;B&gt;","synthetic":true,"types":["bit_vec::IntoIter"]},{"text":"impl&lt;'a, B&gt; Freeze for <a class=\"struct\" href=\"bit_vec/struct.Blocks.html\" title=\"struct bit_vec::Blocks\">Blocks</a>&lt;'a, B&gt;","synthetic":true,"types":["bit_vec::Blocks"]}];
implementors["byteorder"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a>","synthetic":true,"types":["byteorder::BigEndian"]},{"text":"impl Freeze for <a class=\"enum\" href=\"byteorder/enum.LittleEndian.html\" title=\"enum byteorder::LittleEndian\">LittleEndian</a>","synthetic":true,"types":["byteorder::LittleEndian"]}];
implementors["bytes"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"bytes/struct.BytesMut.html\" title=\"struct bytes::BytesMut\">BytesMut</a>","synthetic":true,"types":["bytes::bytes_mut::BytesMut"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"bytes/struct.Bytes.html\" title=\"struct bytes::Bytes\">Bytes</a>","synthetic":true,"types":["bytes::bytes::Bytes"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.IoSliceMut.html\" title=\"struct bytes::buf::IoSliceMut\">IoSliceMut</a>&lt;'a&gt;","synthetic":true,"types":["bytes::buf::buf_mut::IoSliceMut"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.IntoIter.html\" title=\"struct bytes::buf::IntoIter\">IntoIter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::iter::IntoIter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/ext/struct.Limit.html\" title=\"struct bytes::buf::ext::Limit\">Limit</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::ext::limit::Limit"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/ext/struct.Take.html\" title=\"struct bytes::buf::ext::Take\">Take</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::ext::take::Take"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/ext/struct.Chain.html\" title=\"struct bytes::buf::ext::Chain\">Chain</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::ext::chain::Chain"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/ext/struct.Reader.html\" title=\"struct bytes::buf::ext::Reader\">Reader</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::ext::reader::Reader"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/ext/struct.Writer.html\" title=\"struct bytes::buf::ext::Writer\">Writer</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::ext::writer::Writer"]}];
implementors["c2_chacha"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"c2_chacha/guts/struct.ChaCha.html\" title=\"struct c2_chacha::guts::ChaCha\">ChaCha</a>","synthetic":true,"types":["c2_chacha::guts::ChaCha"]},{"text":"impl&lt;V&gt; Freeze for <a class=\"struct\" href=\"c2_chacha/guts/struct.State.html\" title=\"struct c2_chacha::guts::State\">State</a>&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":["c2_chacha::guts::State"]}];
implementors["chrono"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/struct.Duration.html\" title=\"struct chrono::Duration\">Duration</a>","synthetic":true,"types":["chrono::oldtime::Duration"]},{"text":"impl&lt;Tz&gt; Freeze for <a class=\"struct\" href=\"chrono/struct.Date.html\" title=\"struct chrono::Date\">Date</a>&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>&gt;::<a class=\"type\" href=\"chrono/offset/trait.TimeZone.html#associatedtype.Offset\" title=\"type chrono::offset::TimeZone::Offset\">Offset</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["chrono::date::Date"]},{"text":"impl&lt;Tz&gt; Freeze for <a class=\"struct\" href=\"chrono/struct.DateTime.html\" title=\"struct chrono::DateTime\">DateTime</a>&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>&gt;::<a class=\"type\" href=\"chrono/offset/trait.TimeZone.html#associatedtype.Offset\" title=\"type chrono::offset::TimeZone::Offset\">Offset</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["chrono::datetime::DateTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/struct.ParseWeekdayError.html\" title=\"struct chrono::ParseWeekdayError\">ParseWeekdayError</a>","synthetic":true,"types":["chrono::ParseWeekdayError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/enum.SecondsFormat.html\" title=\"enum chrono::SecondsFormat\">SecondsFormat</a>","synthetic":true,"types":["chrono::datetime::SecondsFormat"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/enum.Weekday.html\" title=\"enum chrono::Weekday\">Weekday</a>","synthetic":true,"types":["chrono::Weekday"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/offset/struct.FixedOffset.html\" title=\"struct chrono::offset::FixedOffset\">FixedOffset</a>","synthetic":true,"types":["chrono::offset::fixed::FixedOffset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/offset/struct.Utc.html\" title=\"struct chrono::offset::Utc\">Utc</a>","synthetic":true,"types":["chrono::offset::utc::Utc"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"chrono/offset/enum.LocalResult.html\" title=\"enum chrono::offset::LocalResult\">LocalResult</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["chrono::offset::LocalResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/naive/struct.NaiveDate.html\" title=\"struct chrono::naive::NaiveDate\">NaiveDate</a>","synthetic":true,"types":["chrono::naive::date::NaiveDate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/naive/struct.IsoWeek.html\" title=\"struct chrono::naive::IsoWeek\">IsoWeek</a>","synthetic":true,"types":["chrono::naive::isoweek::IsoWeek"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/naive/struct.NaiveTime.html\" title=\"struct chrono::naive::NaiveTime\">NaiveTime</a>","synthetic":true,"types":["chrono::naive::time::NaiveTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/naive/struct.NaiveDateTime.html\" title=\"struct chrono::naive::NaiveDateTime\">NaiveDateTime</a>","synthetic":true,"types":["chrono::naive::datetime::NaiveDateTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/format/struct.Parsed.html\" title=\"struct chrono::format::Parsed\">Parsed</a>","synthetic":true,"types":["chrono::format::parsed::Parsed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/format/struct.InternalNumeric.html\" title=\"struct chrono::format::InternalNumeric\">InternalNumeric</a>","synthetic":true,"types":["chrono::format::InternalNumeric"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/format/struct.InternalFixed.html\" title=\"struct chrono::format::InternalFixed\">InternalFixed</a>","synthetic":true,"types":["chrono::format::InternalFixed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/format/struct.ParseError.html\" title=\"struct chrono::format::ParseError\">ParseError</a>","synthetic":true,"types":["chrono::format::ParseError"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"chrono/format/struct.DelayedFormat.html\" title=\"struct chrono::format::DelayedFormat\">DelayedFormat</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["chrono::format::DelayedFormat"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/format/enum.Pad.html\" title=\"enum chrono::format::Pad\">Pad</a>","synthetic":true,"types":["chrono::format::Pad"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/format/enum.Numeric.html\" title=\"enum chrono::format::Numeric\">Numeric</a>","synthetic":true,"types":["chrono::format::Numeric"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/format/enum.Fixed.html\" title=\"enum chrono::format::Fixed\">Fixed</a>","synthetic":true,"types":["chrono::format::Fixed"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"chrono/format/enum.Item.html\" title=\"enum chrono::format::Item\">Item</a>&lt;'a&gt;","synthetic":true,"types":["chrono::format::Item"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"chrono/format/strftime/struct.StrftimeItems.html\" title=\"struct chrono::format::strftime::StrftimeItems\">StrftimeItems</a>&lt;'a&gt;","synthetic":true,"types":["chrono::format::strftime::StrftimeItems"]}];
implementors["crc"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"crc/enum.CalcType.html\" title=\"enum crc::CalcType\">CalcType</a>","synthetic":true,"types":["crc::CalcType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crc/crc16/struct.Digest.html\" title=\"struct crc::crc16::Digest\">Digest</a>","synthetic":true,"types":["crc::crc16::Digest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crc/crc32/struct.Digest.html\" title=\"struct crc::crc32::Digest\">Digest</a>","synthetic":true,"types":["crc::crc32::Digest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crc/crc64/struct.Digest.html\" title=\"struct crc::crc64::Digest\">Digest</a>","synthetic":true,"types":["crc::crc64::Digest"]}];
implementors["either"] = [{"text":"impl&lt;L, R&gt; Freeze for <a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["either::Either"]}];
implementors["env_logger"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"env_logger/struct.Env.html\" title=\"struct env_logger::Env\">Env</a>&lt;'a&gt;","synthetic":true,"types":["env_logger::Env"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"env_logger/struct.Logger.html\" title=\"struct env_logger::Logger\">Logger</a>","synthetic":true,"types":["env_logger::Logger"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"env_logger/struct.Builder.html\" title=\"struct env_logger::Builder\">Builder</a>","synthetic":true,"types":["env_logger::Builder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"env_logger/enum.Target.html\" title=\"enum env_logger::Target\">Target</a>","synthetic":true,"types":["env_logger::fmt::writer::Target"]},{"text":"impl Freeze for <a class=\"enum\" href=\"env_logger/enum.WriteStyle.html\" title=\"enum env_logger::WriteStyle\">WriteStyle</a>","synthetic":true,"types":["env_logger::fmt::writer::WriteStyle"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"env_logger/filter/struct.Filter.html\" title=\"struct env_logger::filter::Filter\">Filter</a>","synthetic":true,"types":["env_logger::filter::Filter"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"env_logger/filter/struct.Builder.html\" title=\"struct env_logger::filter::Builder\">Builder</a>","synthetic":true,"types":["env_logger::filter::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"env_logger/fmt/struct.Timestamp.html\" title=\"struct env_logger::fmt::Timestamp\">Timestamp</a>","synthetic":true,"types":["env_logger::fmt::humantime::imp::Timestamp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"env_logger/fmt/struct.Style.html\" title=\"struct env_logger::fmt::Style\">Style</a>","synthetic":true,"types":["env_logger::fmt::writer::termcolor::imp::Style"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"env_logger/fmt/struct.StyledValue.html\" title=\"struct env_logger::fmt::StyledValue\">StyledValue</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["env_logger::fmt::writer::termcolor::imp::StyledValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"env_logger/fmt/struct.Formatter.html\" title=\"struct env_logger::fmt::Formatter\">Formatter</a>","synthetic":true,"types":["env_logger::fmt::Formatter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"env_logger/fmt/enum.Color.html\" title=\"enum env_logger::fmt::Color\">Color</a>","synthetic":true,"types":["env_logger::fmt::writer::termcolor::imp::Color"]},{"text":"impl Freeze for <a class=\"enum\" href=\"env_logger/fmt/enum.TimestampPrecision.html\" title=\"enum env_logger::fmt::TimestampPrecision\">TimestampPrecision</a>","synthetic":true,"types":["env_logger::fmt::TimestampPrecision"]}];
implementors["fnv"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"fnv/struct.FnvHasher.html\" title=\"struct fnv::FnvHasher\">FnvHasher</a>","synthetic":true,"types":["fnv::FnvHasher"]}];
implementors["gbdt"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"gbdt/binary_tree/struct.BinaryTreeNode.html\" title=\"struct gbdt::binary_tree::BinaryTreeNode\">BinaryTreeNode</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["gbdt::binary_tree::BinaryTreeNode"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"gbdt/binary_tree/struct.BinaryTree.html\" title=\"struct gbdt::binary_tree::BinaryTree\">BinaryTree</a>&lt;T&gt;","synthetic":true,"types":["gbdt::binary_tree::BinaryTree"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gbdt/config/struct.Config.html\" title=\"struct gbdt::config::Config\">Config</a>","synthetic":true,"types":["gbdt::config::Config"]},{"text":"impl Freeze for <a class=\"enum\" href=\"gbdt/config/enum.Loss.html\" title=\"enum gbdt::config::Loss\">Loss</a>","synthetic":true,"types":["gbdt::config::Loss"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gbdt/decision_tree/struct.Data.html\" title=\"struct gbdt::decision_tree::Data\">Data</a>","synthetic":true,"types":["gbdt::decision_tree::Data"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gbdt/decision_tree/struct.TrainingCache.html\" title=\"struct gbdt::decision_tree::TrainingCache\">TrainingCache</a>","synthetic":true,"types":["gbdt::decision_tree::TrainingCache"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gbdt/decision_tree/struct.DecisionTree.html\" title=\"struct gbdt::decision_tree::DecisionTree\">DecisionTree</a>","synthetic":true,"types":["gbdt::decision_tree::DecisionTree"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gbdt/gradient_boost/struct.GBDT.html\" title=\"struct gbdt::gradient_boost::GBDT\">GBDT</a>","synthetic":true,"types":["gbdt::gradient_boost::GBDT"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gbdt/input/struct.InputFormat.html\" title=\"struct gbdt::input::InputFormat\">InputFormat</a>","synthetic":true,"types":["gbdt::input::InputFormat"]},{"text":"impl Freeze for <a class=\"enum\" href=\"gbdt/input/enum.FileFormat.html\" title=\"enum gbdt::input::FileFormat\">FileFormat</a>","synthetic":true,"types":["gbdt::input::FileFormat"]}];
implementors["generic_array"] = [{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;T&gt;&gt;::<a class=\"type\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T, N&gt; Freeze for <a class=\"struct\" href=\"generic_array/iter/struct.GenericArrayIter.html\" title=\"struct generic_array::iter::GenericArrayIter\">GenericArrayIter</a>&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;T&gt;&gt;::<a class=\"type\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["generic_array::iter::GenericArrayIter"]}];
implementors["getrandom"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"getrandom/struct.Error.html\" title=\"struct getrandom::Error\">Error</a>","synthetic":true,"types":["getrandom::error::Error"]}];
implementors["hashbrown"] = [{"text":"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown/struct.HashMap.html\" title=\"struct hashbrown::HashMap\">HashMap</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::HashMap"]},{"text":"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown/struct.HashSet.html\" title=\"struct hashbrown::HashSet\">HashSet</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::set::HashSet"]},{"text":"impl Freeze for <a class=\"enum\" href=\"hashbrown/enum.CollectionAllocErr.html\" title=\"enum hashbrown::CollectionAllocErr\">CollectionAllocErr</a>","synthetic":true,"types":["hashbrown::CollectionAllocErr"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Iter.html\" title=\"struct hashbrown::hash_map::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown::map::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.IterMut.html\" title=\"struct hashbrown::hash_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown::map::IterMut"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.IntoIter.html\" title=\"struct hashbrown::hash_map::IntoIter\">IntoIter</a>&lt;K, V&gt;","synthetic":true,"types":["hashbrown::map::IntoIter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Keys.html\" title=\"struct hashbrown::hash_map::Keys\">Keys</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown::map::Keys"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Values.html\" title=\"struct hashbrown::hash_map::Values\">Values</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown::map::Values"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Drain.html\" title=\"struct hashbrown::hash_map::Drain\">Drain</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown::map::Drain"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.ValuesMut.html\" title=\"struct hashbrown::hash_map::ValuesMut\">ValuesMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown::map::ValuesMut"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawEntryBuilderMut.html\" title=\"struct hashbrown::hash_map::RawEntryBuilderMut\">RawEntryBuilderMut</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["hashbrown::map::RawEntryBuilderMut"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawOccupiedEntryMut.html\" title=\"struct hashbrown::hash_map::RawOccupiedEntryMut\">RawOccupiedEntryMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown::map::RawOccupiedEntryMut"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawVacantEntryMut.html\" title=\"struct hashbrown::hash_map::RawVacantEntryMut\">RawVacantEntryMut</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["hashbrown::map::RawVacantEntryMut"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawEntryBuilder.html\" title=\"struct hashbrown::hash_map::RawEntryBuilder\">RawEntryBuilder</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["hashbrown::map::RawEntryBuilder"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.OccupiedEntry.html\" title=\"struct hashbrown::hash_map::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::OccupiedEntry"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.VacantEntry.html\" title=\"struct hashbrown::hash_map::VacantEntry\">VacantEntry</a>&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::VacantEntry"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"enum\" href=\"hashbrown/hash_map/enum.RawEntryMut.html\" title=\"enum hashbrown::hash_map::RawEntryMut\">RawEntryMut</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["hashbrown::map::RawEntryMut"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"enum\" href=\"hashbrown/hash_map/enum.Entry.html\" title=\"enum hashbrown::hash_map::Entry\">Entry</a>&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::Entry"]},{"text":"impl&lt;'a, K&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Iter.html\" title=\"struct hashbrown::hash_set::Iter\">Iter</a>&lt;'a, K&gt;","synthetic":true,"types":["hashbrown::set::Iter"]},{"text":"impl&lt;K&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.IntoIter.html\" title=\"struct hashbrown::hash_set::IntoIter\">IntoIter</a>&lt;K&gt;","synthetic":true,"types":["hashbrown::set::IntoIter"]},{"text":"impl&lt;'a, K&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Drain.html\" title=\"struct hashbrown::hash_set::Drain\">Drain</a>&lt;'a, K&gt;","synthetic":true,"types":["hashbrown::set::Drain"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Intersection.html\" title=\"struct hashbrown::hash_set::Intersection\">Intersection</a>&lt;'a, T, S&gt;","synthetic":true,"types":["hashbrown::set::Intersection"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Difference.html\" title=\"struct hashbrown::hash_set::Difference\">Difference</a>&lt;'a, T, S&gt;","synthetic":true,"types":["hashbrown::set::Difference"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.SymmetricDifference.html\" title=\"struct hashbrown::hash_set::SymmetricDifference\">SymmetricDifference</a>&lt;'a, T, S&gt;","synthetic":true,"types":["hashbrown::set::SymmetricDifference"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Union.html\" title=\"struct hashbrown::hash_set::Union\">Union</a>&lt;'a, T, S&gt;","synthetic":true,"types":["hashbrown::set::Union"]}];
implementors["hashbrown_tstd"] = [{"text":"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/struct.HashMap.html\" title=\"struct hashbrown_tstd::HashMap\">HashMap</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::map::HashMap"]},{"text":"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/struct.HashSet.html\" title=\"struct hashbrown_tstd::HashSet\">HashSet</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::set::HashSet"]},{"text":"impl Freeze for <a class=\"enum\" href=\"hashbrown_tstd/enum.CollectionAllocErr.html\" title=\"enum hashbrown_tstd::CollectionAllocErr\">CollectionAllocErr</a>","synthetic":true,"types":["hashbrown_tstd::CollectionAllocErr"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.Iter.html\" title=\"struct hashbrown_tstd::hash_map::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown_tstd::map::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.IterMut.html\" title=\"struct hashbrown_tstd::hash_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown_tstd::map::IterMut"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.IntoIter.html\" title=\"struct hashbrown_tstd::hash_map::IntoIter\">IntoIter</a>&lt;K, V&gt;","synthetic":true,"types":["hashbrown_tstd::map::IntoIter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.Keys.html\" title=\"struct hashbrown_tstd::hash_map::Keys\">Keys</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown_tstd::map::Keys"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.Values.html\" title=\"struct hashbrown_tstd::hash_map::Values\">Values</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown_tstd::map::Values"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.Drain.html\" title=\"struct hashbrown_tstd::hash_map::Drain\">Drain</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown_tstd::map::Drain"]},{"text":"impl&lt;'a, K, V, F&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.DrainFilter.html\" title=\"struct hashbrown_tstd::hash_map::DrainFilter\">DrainFilter</a>&lt;'a, K, V, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::map::DrainFilter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.ValuesMut.html\" title=\"struct hashbrown_tstd::hash_map::ValuesMut\">ValuesMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown_tstd::map::ValuesMut"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.RawEntryBuilderMut.html\" title=\"struct hashbrown_tstd::hash_map::RawEntryBuilderMut\">RawEntryBuilderMut</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["hashbrown_tstd::map::RawEntryBuilderMut"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.RawOccupiedEntryMut.html\" title=\"struct hashbrown_tstd::hash_map::RawOccupiedEntryMut\">RawOccupiedEntryMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown_tstd::map::RawOccupiedEntryMut"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.RawVacantEntryMut.html\" title=\"struct hashbrown_tstd::hash_map::RawVacantEntryMut\">RawVacantEntryMut</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["hashbrown_tstd::map::RawVacantEntryMut"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.RawEntryBuilder.html\" title=\"struct hashbrown_tstd::hash_map::RawEntryBuilder\">RawEntryBuilder</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["hashbrown_tstd::map::RawEntryBuilder"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.OccupiedEntry.html\" title=\"struct hashbrown_tstd::hash_map::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::map::OccupiedEntry"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.VacantEntry.html\" title=\"struct hashbrown_tstd::hash_map::VacantEntry\">VacantEntry</a>&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::map::VacantEntry"]},{"text":"impl Freeze for <a class=\"enum\" href=\"hashbrown_tstd/hash_map/enum.DefaultHashBuilder.html\" title=\"enum hashbrown_tstd::hash_map::DefaultHashBuilder\">DefaultHashBuilder</a>","synthetic":true,"types":["hashbrown_tstd::map::DefaultHashBuilder"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"enum\" href=\"hashbrown_tstd/hash_map/enum.RawEntryMut.html\" title=\"enum hashbrown_tstd::hash_map::RawEntryMut\">RawEntryMut</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["hashbrown_tstd::map::RawEntryMut"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"enum\" href=\"hashbrown_tstd/hash_map/enum.Entry.html\" title=\"enum hashbrown_tstd::hash_map::Entry\">Entry</a>&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::map::Entry"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.RustcOccupiedEntry.html\" title=\"struct hashbrown_tstd::hash_map::RustcOccupiedEntry\">RustcOccupiedEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::rustc_entry::RustcOccupiedEntry"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.RustcVacantEntry.html\" title=\"struct hashbrown_tstd::hash_map::RustcVacantEntry\">RustcVacantEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::rustc_entry::RustcVacantEntry"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"enum\" href=\"hashbrown_tstd/hash_map/enum.RustcEntry.html\" title=\"enum hashbrown_tstd::hash_map::RustcEntry\">RustcEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::rustc_entry::RustcEntry"]},{"text":"impl&lt;'a, K&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_set/struct.Iter.html\" title=\"struct hashbrown_tstd::hash_set::Iter\">Iter</a>&lt;'a, K&gt;","synthetic":true,"types":["hashbrown_tstd::set::Iter"]},{"text":"impl&lt;K&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_set/struct.IntoIter.html\" title=\"struct hashbrown_tstd::hash_set::IntoIter\">IntoIter</a>&lt;K&gt;","synthetic":true,"types":["hashbrown_tstd::set::IntoIter"]},{"text":"impl&lt;'a, K&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_set/struct.Drain.html\" title=\"struct hashbrown_tstd::hash_set::Drain\">Drain</a>&lt;'a, K&gt;","synthetic":true,"types":["hashbrown_tstd::set::Drain"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_set/struct.Intersection.html\" title=\"struct hashbrown_tstd::hash_set::Intersection\">Intersection</a>&lt;'a, T, S&gt;","synthetic":true,"types":["hashbrown_tstd::set::Intersection"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_set/struct.Difference.html\" title=\"struct hashbrown_tstd::hash_set::Difference\">Difference</a>&lt;'a, T, S&gt;","synthetic":true,"types":["hashbrown_tstd::set::Difference"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_set/struct.SymmetricDifference.html\" title=\"struct hashbrown_tstd::hash_set::SymmetricDifference\">SymmetricDifference</a>&lt;'a, T, S&gt;","synthetic":true,"types":["hashbrown_tstd::set::SymmetricDifference"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_set/struct.Union.html\" title=\"struct hashbrown_tstd::hash_set::Union\">Union</a>&lt;'a, T, S&gt;","synthetic":true,"types":["hashbrown_tstd::set::Union"]}];
implementors["hex"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"hex/enum.FromHexError.html\" title=\"enum hex::FromHexError\">FromHexError</a>","synthetic":true,"types":["hex::FromHexError"]}];
implementors["http"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"http/struct.Error.html\" title=\"struct http::Error\">Error</a>","synthetic":true,"types":["http::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/struct.Extensions.html\" title=\"struct http::Extensions\">Extensions</a>","synthetic":true,"types":["http::extensions::Extensions"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.Drain.html\" title=\"struct http::header::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::Drain"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.GetAll.html\" title=\"struct http::header::GetAll\">GetAll</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::GetAll"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.HeaderMap.html\" title=\"struct http::header::HeaderMap\">HeaderMap</a>&lt;T&gt;","synthetic":true,"types":["http::header::map::HeaderMap"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.IntoIter.html\" title=\"struct http::header::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["http::header::map::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.Iter.html\" title=\"struct http::header::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.IterMut.html\" title=\"struct http::header::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::IterMut"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.Keys.html\" title=\"struct http::header::Keys\">Keys</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::Keys"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.OccupiedEntry.html\" title=\"struct http::header::OccupiedEntry\">OccupiedEntry</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::OccupiedEntry"]},{"text":"impl&lt;'a, T&gt; !Freeze for <a class=\"struct\" href=\"http/header/struct.VacantEntry.html\" title=\"struct http::header::VacantEntry\">VacantEntry</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::VacantEntry"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.ValueDrain.html\" title=\"struct http::header::ValueDrain\">ValueDrain</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["http::header::map::ValueDrain"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.ValueIter.html\" title=\"struct http::header::ValueIter\">ValueIter</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::ValueIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.ValueIterMut.html\" title=\"struct http::header::ValueIterMut\">ValueIterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::ValueIterMut"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.Values.html\" title=\"struct http::header::Values\">Values</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::Values"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.ValuesMut.html\" title=\"struct http::header::ValuesMut\">ValuesMut</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::ValuesMut"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/header/struct.HeaderName.html\" title=\"struct http::header::HeaderName\">HeaderName</a>","synthetic":true,"types":["http::header::name::HeaderName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/header/struct.InvalidHeaderName.html\" title=\"struct http::header::InvalidHeaderName\">InvalidHeaderName</a>","synthetic":true,"types":["http::header::name::InvalidHeaderName"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/header/struct.HeaderValue.html\" title=\"struct http::header::HeaderValue\">HeaderValue</a>","synthetic":true,"types":["http::header::value::HeaderValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/header/struct.InvalidHeaderValue.html\" title=\"struct http::header::InvalidHeaderValue\">InvalidHeaderValue</a>","synthetic":true,"types":["http::header::value::InvalidHeaderValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/header/struct.ToStrError.html\" title=\"struct http::header::ToStrError\">ToStrError</a>","synthetic":true,"types":["http::header::value::ToStrError"]},{"text":"impl&lt;'a, T&gt; !Freeze for <a class=\"enum\" href=\"http/header/enum.Entry.html\" title=\"enum http::header::Entry\">Entry</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::Entry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/method/struct.Method.html\" title=\"struct http::method::Method\">Method</a>","synthetic":true,"types":["http::method::Method"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/method/struct.InvalidMethod.html\" title=\"struct http::method::InvalidMethod\">InvalidMethod</a>","synthetic":true,"types":["http::method::InvalidMethod"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;T&gt;","synthetic":true,"types":["http::request::Request"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/request/struct.Parts.html\" title=\"struct http::request::Parts\">Parts</a>","synthetic":true,"types":["http::request::Parts"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/request/struct.Builder.html\" title=\"struct http::request::Builder\">Builder</a>","synthetic":true,"types":["http::request::Builder"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["http::response::Response"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/response/struct.Parts.html\" title=\"struct http::response::Parts\">Parts</a>","synthetic":true,"types":["http::response::Parts"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/response/struct.Builder.html\" title=\"struct http::response::Builder\">Builder</a>","synthetic":true,"types":["http::response::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/status/struct.StatusCode.html\" title=\"struct http::status::StatusCode\">StatusCode</a>","synthetic":true,"types":["http::status::StatusCode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/status/struct.InvalidStatusCode.html\" title=\"struct http::status::InvalidStatusCode\">InvalidStatusCode</a>","synthetic":true,"types":["http::status::InvalidStatusCode"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/uri/struct.Authority.html\" title=\"struct http::uri::Authority\">Authority</a>","synthetic":true,"types":["http::uri::authority::Authority"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/uri/struct.Builder.html\" title=\"struct http::uri::Builder\">Builder</a>","synthetic":true,"types":["http::uri::builder::Builder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/uri/struct.PathAndQuery.html\" title=\"struct http::uri::PathAndQuery\">PathAndQuery</a>","synthetic":true,"types":["http::uri::path::PathAndQuery"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"http/uri/struct.Port.html\" title=\"struct http::uri::Port\">Port</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["http::uri::port::Port"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/uri/struct.Scheme.html\" title=\"struct http::uri::Scheme\">Scheme</a>","synthetic":true,"types":["http::uri::scheme::Scheme"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/uri/struct.Uri.html\" title=\"struct http::uri::Uri\">Uri</a>","synthetic":true,"types":["http::uri::Uri"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/uri/struct.Parts.html\" title=\"struct http::uri::Parts\">Parts</a>","synthetic":true,"types":["http::uri::Parts"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/uri/struct.InvalidUri.html\" title=\"struct http::uri::InvalidUri\">InvalidUri</a>","synthetic":true,"types":["http::uri::InvalidUri"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/uri/struct.InvalidUriParts.html\" title=\"struct http::uri::InvalidUriParts\">InvalidUriParts</a>","synthetic":true,"types":["http::uri::InvalidUriParts"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/version/struct.Version.html\" title=\"struct http::version::Version\">Version</a>","synthetic":true,"types":["http::version::Version"]}];
implementors["httparse"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"httparse/struct.InvalidChunkSize.html\" title=\"struct httparse::InvalidChunkSize\">InvalidChunkSize</a>","synthetic":true,"types":["httparse::InvalidChunkSize"]},{"text":"impl&lt;'headers, 'buf&gt; Freeze for <a class=\"struct\" href=\"httparse/struct.Request.html\" title=\"struct httparse::Request\">Request</a>&lt;'headers, 'buf&gt;","synthetic":true,"types":["httparse::Request"]},{"text":"impl&lt;'headers, 'buf&gt; Freeze for <a class=\"struct\" href=\"httparse/struct.Response.html\" title=\"struct httparse::Response\">Response</a>&lt;'headers, 'buf&gt;","synthetic":true,"types":["httparse::Response"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"httparse/struct.Header.html\" title=\"struct httparse::Header\">Header</a>&lt;'a&gt;","synthetic":true,"types":["httparse::Header"]},{"text":"impl Freeze for <a class=\"enum\" href=\"httparse/enum.Error.html\" title=\"enum httparse::Error\">Error</a>","synthetic":true,"types":["httparse::Error"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"httparse/enum.Status.html\" title=\"enum httparse::Status\">Status</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["httparse::Status"]}];
implementors["humantime"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"humantime/struct.FormattedDuration.html\" title=\"struct humantime::FormattedDuration\">FormattedDuration</a>","synthetic":true,"types":["humantime::duration::FormattedDuration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"humantime/struct.Duration.html\" title=\"struct humantime::Duration\">Duration</a>","synthetic":true,"types":["humantime::wrapper::Duration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"humantime/struct.Timestamp.html\" title=\"struct humantime::Timestamp\">Timestamp</a>","synthetic":true,"types":["humantime::wrapper::Timestamp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"humantime/struct.Rfc3339Timestamp.html\" title=\"struct humantime::Rfc3339Timestamp\">Rfc3339Timestamp</a>","synthetic":true,"types":["humantime::date::Rfc3339Timestamp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"humantime/enum.DurationError.html\" title=\"enum humantime::DurationError\">Error</a>","synthetic":true,"types":["humantime::duration::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"humantime/enum.TimestampError.html\" title=\"enum humantime::TimestampError\">Error</a>","synthetic":true,"types":["humantime::date::Error"]}];
implementors["idna"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"idna/struct.Config.html\" title=\"struct idna::Config\">Config</a>","synthetic":true,"types":["idna::uts46::Config"]},{"text":"impl Freeze for <a class=\"struct\" href=\"idna/struct.Errors.html\" title=\"struct idna::Errors\">Errors</a>","synthetic":true,"types":["idna::uts46::Errors"]}];
implementors["itertools"] = [{"text":"impl&lt;I, J&gt; Freeze for <a class=\"enum\" href=\"itertools/enum.Diff.html\" title=\"enum itertools::Diff\">Diff</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;J as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::diff::Diff"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"itertools/enum.MinMaxResult.html\" title=\"enum itertools::MinMaxResult\">MinMaxResult</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::minmax::MinMaxResult"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"itertools/enum.Position.html\" title=\"enum itertools::Position\">Position</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::with_position::Position"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"enum\" href=\"itertools/enum.EitherOrBoth.html\" title=\"enum itertools::EitherOrBoth\">EitherOrBoth</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::either_or_both::EitherOrBoth"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"itertools/enum.FoldWhile.html\" title=\"enum itertools::FoldWhile\">FoldWhile</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::FoldWhile"]},{"text":"impl&lt;I, Pred&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.DedupBy.html\" title=\"struct itertools::structs::DedupBy\">DedupBy</a>&lt;I, Pred&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Pred: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::DedupBy"]},{"text":"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Interleave.html\" title=\"struct itertools::structs::Interleave\">Interleave</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::Interleave"]},{"text":"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.InterleaveShortest.html\" title=\"struct itertools::structs::InterleaveShortest\">InterleaveShortest</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::InterleaveShortest"]},{"text":"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Product.html\" title=\"struct itertools::structs::Product\">Product</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::Product"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.PutBack.html\" title=\"struct itertools::structs::PutBack\">PutBack</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::PutBack"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Batching.html\" title=\"struct itertools::structs::Batching\">Batching</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::Batching"]},{"text":"impl&lt;I, R&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.MapInto.html\" title=\"struct itertools::structs::MapInto\">MapInto</a>&lt;I, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::MapInto"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.MapResults.html\" title=\"struct itertools::structs::MapResults\">MapResults</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::MapResults"]},{"text":"impl&lt;I, J, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.MergeBy.html\" title=\"struct itertools::structs::MergeBy\">MergeBy</a>&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::MergeBy"]},{"text":"impl&lt;'a, I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.TakeWhileRef.html\" title=\"struct itertools::structs::TakeWhileRef\">TakeWhileRef</a>&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::TakeWhileRef"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.WhileSome.html\" title=\"struct itertools::structs::WhileSome\">WhileSome</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::WhileSome"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Coalesce.html\" title=\"struct itertools::structs::Coalesce\">Coalesce</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::Coalesce"]},{"text":"impl&lt;I, T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.TupleCombinations.html\" title=\"struct itertools::structs::TupleCombinations\">TupleCombinations</a>&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as HasCombination&lt;I&gt;&gt;::Combination: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::TupleCombinations"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Positions.html\" title=\"struct itertools::structs::Positions\">Positions</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::Positions"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Update.html\" title=\"struct itertools::structs::Update\">Update</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::Update"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Step.html\" title=\"struct itertools::structs::Step\">Step</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::Step"]},{"text":"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.ConsTuples.html\" title=\"struct itertools::structs::ConsTuples\">ConsTuples</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::cons_tuples_impl::ConsTuples"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.ExactlyOneError.html\" title=\"struct itertools::structs::ExactlyOneError\">ExactlyOneError</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::exactly_one_err::ExactlyOneError"]},{"text":"impl&lt;'a, I&gt; !Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Format.html\" title=\"struct itertools::structs::Format\">Format</a>&lt;'a, I&gt;","synthetic":true,"types":["itertools::format::Format"]},{"text":"impl&lt;'a, I, F&gt; !Freeze for <a class=\"struct\" href=\"itertools/structs/struct.FormatWith.html\" title=\"struct itertools::structs::FormatWith\">FormatWith</a>&lt;'a, I, F&gt;","synthetic":true,"types":["itertools::format::FormatWith"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Intersperse.html\" title=\"struct itertools::structs::Intersperse\">Intersperse</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::intersperse::Intersperse"]},{"text":"impl&lt;I, J, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.MergeJoinBy.html\" title=\"struct itertools::structs::MergeJoinBy\">MergeJoinBy</a>&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;J as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::merge_join::MergeJoinBy"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.PadUsing.html\" title=\"struct itertools::structs::PadUsing\">PadUsing</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::pad_tail::PadUsing"]},{"text":"impl&lt;'a, I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.PeekingTakeWhile.html\" title=\"struct itertools::structs::PeekingTakeWhile\">PeekingTakeWhile</a>&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::peeking_take_while::PeekingTakeWhile"]},{"text":"impl&lt;'a, I, E&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.ProcessResults.html\" title=\"struct itertools::structs::ProcessResults\">ProcessResults</a>&lt;'a, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::process_results_impl::ProcessResults"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.RepeatN.html\" title=\"struct itertools::structs::RepeatN\">RepeatN</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::repeatn::RepeatN"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.RepeatCall.html\" title=\"struct itertools::structs::RepeatCall\">RepeatCall</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::sources::RepeatCall"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Unfold.html\" title=\"struct itertools::structs::Unfold\">Unfold</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::sources::Unfold"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Iterate.html\" title=\"struct itertools::structs::Iterate\">Iterate</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::sources::Iterate"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.TupleBuffer.html\" title=\"struct itertools::structs::TupleBuffer\">TupleBuffer</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as TupleCollect&gt;::Buffer: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::tuple_impl::TupleBuffer"]},{"text":"impl&lt;I, T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.TupleWindows.html\" title=\"struct itertools::structs::TupleWindows\">TupleWindows</a>&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::tuple_impl::TupleWindows"]},{"text":"impl&lt;I, T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Tuples.html\" title=\"struct itertools::structs::Tuples\">Tuples</a>&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as TupleCollect&gt;::Buffer: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::tuple_impl::Tuples"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.WithPosition.html\" title=\"struct itertools::structs::WithPosition\">WithPosition</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::with_position::WithPosition"]},{"text":"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.ZipEq.html\" title=\"struct itertools::structs::ZipEq\">ZipEq</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::zip_eq_impl::ZipEq"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.ZipLongest.html\" title=\"struct itertools::structs::ZipLongest\">ZipLongest</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::zip_longest::ZipLongest"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Zip.html\" title=\"struct itertools::structs::Zip\">Zip</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::ziptuple::Zip"]}];
implementors["itoa"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"itoa/struct.Buffer.html\" title=\"struct itoa::Buffer\">Buffer</a>","synthetic":true,"types":["itoa::Buffer"]}];
implementors["jsonwebtoken"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"jsonwebtoken/struct.Header.html\" title=\"struct jsonwebtoken::Header\">Header</a>","synthetic":true,"types":["jsonwebtoken::header::Header"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"jsonwebtoken/struct.TokenData.html\" title=\"struct jsonwebtoken::TokenData\">TokenData</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["jsonwebtoken::serialization::TokenData"]},{"text":"impl Freeze for <a class=\"struct\" href=\"jsonwebtoken/struct.Validation.html\" title=\"struct jsonwebtoken::Validation\">Validation</a>","synthetic":true,"types":["jsonwebtoken::validation::Validation"]},{"text":"impl Freeze for <a class=\"enum\" href=\"jsonwebtoken/enum.Algorithm.html\" title=\"enum jsonwebtoken::Algorithm\">Algorithm</a>","synthetic":true,"types":["jsonwebtoken::crypto::Algorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"jsonwebtoken/errors/struct.Error.html\" title=\"struct jsonwebtoken::errors::Error\">Error</a>","synthetic":true,"types":["jsonwebtoken::errors::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"jsonwebtoken/errors/enum.ErrorKind.html\" title=\"enum jsonwebtoken::errors::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["jsonwebtoken::errors::ErrorKind"]}];
implementors["libc"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.group.html\" title=\"struct libc::group\">group</a>","synthetic":true,"types":["libc::unix::group"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.utimbuf.html\" title=\"struct libc::utimbuf\">utimbuf</a>","synthetic":true,"types":["libc::unix::utimbuf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.timeval.html\" title=\"struct libc::timeval\">timeval</a>","synthetic":true,"types":["libc::unix::timeval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.timespec.html\" title=\"struct libc::timespec\">timespec</a>","synthetic":true,"types":["libc::unix::timespec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rlimit.html\" title=\"struct libc::rlimit\">rlimit</a>","synthetic":true,"types":["libc::unix::rlimit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rusage.html\" title=\"struct libc::rusage\">rusage</a>","synthetic":true,"types":["libc::unix::rusage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ipv6_mreq.html\" title=\"struct libc::ipv6_mreq\">ipv6_mreq</a>","synthetic":true,"types":["libc::unix::ipv6_mreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.hostent.html\" title=\"struct libc::hostent\">hostent</a>","synthetic":true,"types":["libc::unix::hostent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.iovec.html\" title=\"struct libc::iovec\">iovec</a>","synthetic":true,"types":["libc::unix::iovec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pollfd.html\" title=\"struct libc::pollfd\">pollfd</a>","synthetic":true,"types":["libc::unix::pollfd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.winsize.html\" title=\"struct libc::winsize\">winsize</a>","synthetic":true,"types":["libc::unix::winsize"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.linger.html\" title=\"struct libc::linger\">linger</a>","synthetic":true,"types":["libc::unix::linger"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigval.html\" title=\"struct libc::sigval\">sigval</a>","synthetic":true,"types":["libc::unix::sigval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.itimerval.html\" title=\"struct libc::itimerval\">itimerval</a>","synthetic":true,"types":["libc::unix::itimerval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.tms.html\" title=\"struct libc::tms\">tms</a>","synthetic":true,"types":["libc::unix::tms"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.servent.html\" title=\"struct libc::servent\">servent</a>","synthetic":true,"types":["libc::unix::servent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.protoent.html\" title=\"struct libc::protoent\">protoent</a>","synthetic":true,"types":["libc::unix::protoent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in_addr.html\" title=\"struct libc::in_addr\">in_addr</a>","synthetic":true,"types":["libc::unix::linux_like::in_addr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ip_mreq.html\" title=\"struct libc::ip_mreq\">ip_mreq</a>","synthetic":true,"types":["libc::unix::linux_like::ip_mreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ip_mreq_source.html\" title=\"struct libc::ip_mreq_source\">ip_mreq_source</a>","synthetic":true,"types":["libc::unix::linux_like::ip_mreq_source"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr.html\" title=\"struct libc::sockaddr\">sockaddr</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_in.html\" title=\"struct libc::sockaddr_in\">sockaddr_in</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_in"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_in6.html\" title=\"struct libc::sockaddr_in6\">sockaddr_in6</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_in6"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.addrinfo.html\" title=\"struct libc::addrinfo\">addrinfo</a>","synthetic":true,"types":["libc::unix::linux_like::addrinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_ll.html\" title=\"struct libc::sockaddr_ll\">sockaddr_ll</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_ll"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fd_set.html\" title=\"struct libc::fd_set\">fd_set</a>","synthetic":true,"types":["libc::unix::linux_like::fd_set"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.tm.html\" title=\"struct libc::tm\">tm</a>","synthetic":true,"types":["libc::unix::linux_like::tm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sched_param.html\" title=\"struct libc::sched_param\">sched_param</a>","synthetic":true,"types":["libc::unix::linux_like::sched_param"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Dl_info.html\" title=\"struct libc::Dl_info\">Dl_info</a>","synthetic":true,"types":["libc::unix::linux_like::Dl_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.lconv.html\" title=\"struct libc::lconv\">lconv</a>","synthetic":true,"types":["libc::unix::linux_like::lconv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in_pktinfo.html\" title=\"struct libc::in_pktinfo\">in_pktinfo</a>","synthetic":true,"types":["libc::unix::linux_like::in_pktinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ifaddrs.html\" title=\"struct libc::ifaddrs\">ifaddrs</a>","synthetic":true,"types":["libc::unix::linux_like::ifaddrs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_rtmsg.html\" title=\"struct libc::in6_rtmsg\">in6_rtmsg</a>","synthetic":true,"types":["libc::unix::linux_like::in6_rtmsg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arpreq.html\" title=\"struct libc::arpreq\">arpreq</a>","synthetic":true,"types":["libc::unix::linux_like::arpreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arpreq_old.html\" title=\"struct libc::arpreq_old\">arpreq_old</a>","synthetic":true,"types":["libc::unix::linux_like::arpreq_old"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arphdr.html\" title=\"struct libc::arphdr\">arphdr</a>","synthetic":true,"types":["libc::unix::linux_like::arphdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mmsghdr.html\" title=\"struct libc::mmsghdr\">mmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::mmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.epoll_event.html\" title=\"struct libc::epoll_event\">epoll_event</a>","synthetic":true,"types":["libc::unix::linux_like::epoll_event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_un.html\" title=\"struct libc::sockaddr_un\">sockaddr_un</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_un"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_storage.html\" title=\"struct libc::sockaddr_storage\">sockaddr_storage</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_storage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.utsname.html\" title=\"struct libc::utsname\">utsname</a>","synthetic":true,"types":["libc::unix::linux_like::utsname"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigevent.html\" title=\"struct libc::sigevent\">sigevent</a>","synthetic":true,"types":["libc::unix::linux_like::sigevent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rlimit64.html\" title=\"struct libc::rlimit64\">rlimit64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::rlimit64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.glob_t.html\" title=\"struct libc::glob_t\">glob_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::glob_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.passwd.html\" title=\"struct libc::passwd\">passwd</a>","synthetic":true,"types":["libc::unix::linux_like::linux::passwd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.spwd.html\" title=\"struct libc::spwd\">spwd</a>","synthetic":true,"types":["libc::unix::linux_like::linux::spwd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dqblk.html\" title=\"struct libc::dqblk\">dqblk</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dqblk"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.signalfd_siginfo.html\" title=\"struct libc::signalfd_siginfo\">signalfd_siginfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::signalfd_siginfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.itimerspec.html\" title=\"struct libc::itimerspec\">itimerspec</a>","synthetic":true,"types":["libc::unix::linux_like::linux::itimerspec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fsid_t.html\" title=\"struct libc::fsid_t\">fsid_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::fsid_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.packet_mreq.html\" title=\"struct libc::packet_mreq\">packet_mreq</a>","synthetic":true,"types":["libc::unix::linux_like::linux::packet_mreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.cpu_set_t.html\" title=\"struct libc::cpu_set_t\">cpu_set_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::cpu_set_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.if_nameindex.html\" title=\"struct libc::if_nameindex\">if_nameindex</a>","synthetic":true,"types":["libc::unix::linux_like::linux::if_nameindex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.msginfo.html\" title=\"struct libc::msginfo\">msginfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::msginfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sembuf.html\" title=\"struct libc::sembuf\">sembuf</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sembuf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_event.html\" title=\"struct libc::input_event\">input_event</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_id.html\" title=\"struct libc::input_id\">input_id</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_id"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_absinfo.html\" title=\"struct libc::input_absinfo\">input_absinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_absinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_keymap_entry.html\" title=\"struct libc::input_keymap_entry\">input_keymap_entry</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_keymap_entry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_mask.html\" title=\"struct libc::input_mask\">input_mask</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_mask"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_replay.html\" title=\"struct libc::ff_replay\">ff_replay</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_replay"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_trigger.html\" title=\"struct libc::ff_trigger\">ff_trigger</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_trigger"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_envelope.html\" title=\"struct libc::ff_envelope\">ff_envelope</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_envelope"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_constant_effect.html\" title=\"struct libc::ff_constant_effect\">ff_constant_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_constant_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_ramp_effect.html\" title=\"struct libc::ff_ramp_effect\">ff_ramp_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_ramp_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_condition_effect.html\" title=\"struct libc::ff_condition_effect\">ff_condition_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_condition_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_periodic_effect.html\" title=\"struct libc::ff_periodic_effect\">ff_periodic_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_periodic_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_rumble_effect.html\" title=\"struct libc::ff_rumble_effect\">ff_rumble_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_rumble_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_effect.html\" title=\"struct libc::ff_effect\">ff_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dl_phdr_info.html\" title=\"struct libc::dl_phdr_info\">dl_phdr_info</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dl_phdr_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Ehdr.html\" title=\"struct libc::Elf32_Ehdr\">Elf32_Ehdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Ehdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Ehdr.html\" title=\"struct libc::Elf64_Ehdr\">Elf64_Ehdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Ehdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Sym.html\" title=\"struct libc::Elf32_Sym\">Elf32_Sym</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Sym"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Sym.html\" title=\"struct libc::Elf64_Sym\">Elf64_Sym</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Sym"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Phdr.html\" title=\"struct libc::Elf32_Phdr\">Elf32_Phdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Phdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Phdr.html\" title=\"struct libc::Elf64_Phdr\">Elf64_Phdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Phdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Shdr.html\" title=\"struct libc::Elf32_Shdr\">Elf32_Shdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Shdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Shdr.html\" title=\"struct libc::Elf64_Shdr\">Elf64_Shdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Shdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Chdr.html\" title=\"struct libc::Elf32_Chdr\">Elf32_Chdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Chdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Chdr.html\" title=\"struct libc::Elf64_Chdr\">Elf64_Chdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Chdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ucred.html\" title=\"struct libc::ucred\">ucred</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ucred"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mntent.html\" title=\"struct libc::mntent\">mntent</a>","synthetic":true,"types":["libc::unix::linux_like::linux::mntent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.posix_spawn_file_actions_t.html\" title=\"struct libc::posix_spawn_file_actions_t\">posix_spawn_file_actions_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::posix_spawn_file_actions_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.posix_spawnattr_t.html\" title=\"struct libc::posix_spawnattr_t\">posix_spawnattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::posix_spawnattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.genlmsghdr.html\" title=\"struct libc::genlmsghdr\">genlmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::genlmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_pktinfo.html\" title=\"struct libc::in6_pktinfo\">in6_pktinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::in6_pktinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arpd_request.html\" title=\"struct libc::arpd_request\">arpd_request</a>","synthetic":true,"types":["libc::unix::linux_like::linux::arpd_request"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.inotify_event.html\" title=\"struct libc::inotify_event\">inotify_event</a>","synthetic":true,"types":["libc::unix::linux_like::linux::inotify_event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fanotify_response.html\" title=\"struct libc::fanotify_response\">fanotify_response</a>","synthetic":true,"types":["libc::unix::linux_like::linux::fanotify_response"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_vm.html\" title=\"struct libc::sockaddr_vm\">sockaddr_vm</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sockaddr_vm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.regmatch_t.html\" title=\"struct libc::regmatch_t\">regmatch_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::regmatch_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sock_extended_err.html\" title=\"struct libc::sock_extended_err\">sock_extended_err</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sock_extended_err"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_nl.html\" title=\"struct libc::sockaddr_nl\">sockaddr_nl</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sockaddr_nl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dirent.html\" title=\"struct libc::dirent\">dirent</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dirent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dirent64.html\" title=\"struct libc::dirent64\">dirent64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dirent64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_alg.html\" title=\"struct libc::sockaddr_alg\">sockaddr_alg</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sockaddr_alg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.af_alg_iv.html\" title=\"struct libc::af_alg_iv\">af_alg_iv</a>","synthetic":true,"types":["libc::unix::linux_like::linux::af_alg_iv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mq_attr.html\" title=\"struct libc::mq_attr\">mq_attr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::mq_attr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statx.html\" title=\"struct libc::statx\">statx</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::statx"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statx_timestamp.html\" title=\"struct libc::statx_timestamp\">statx_timestamp</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::statx_timestamp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.aiocb.html\" title=\"struct libc::aiocb\">aiocb</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::aiocb"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__exit_status.html\" title=\"struct libc::__exit_status\">__exit_status</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::__exit_status"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__timeval.html\" title=\"struct libc::__timeval\">__timeval</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::__timeval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.glob64_t.html\" title=\"struct libc::glob64_t\">glob64_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::glob64_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.msghdr.html\" title=\"struct libc::msghdr\">msghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::msghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.cmsghdr.html\" title=\"struct libc::cmsghdr\">cmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::cmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.termios.html\" title=\"struct libc::termios\">termios</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::termios"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mallinfo.html\" title=\"struct libc::mallinfo\">mallinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::mallinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nlmsghdr.html\" title=\"struct libc::nlmsghdr\">nlmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nlmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nlmsgerr.html\" title=\"struct libc::nlmsgerr\">nlmsgerr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nlmsgerr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nl_pktinfo.html\" title=\"struct libc::nl_pktinfo\">nl_pktinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nl_pktinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nl_mmap_req.html\" title=\"struct libc::nl_mmap_req\">nl_mmap_req</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nl_mmap_req"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nl_mmap_hdr.html\" title=\"struct libc::nl_mmap_hdr\">nl_mmap_hdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nl_mmap_hdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nlattr.html\" title=\"struct libc::nlattr\">nlattr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nlattr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rtentry.html\" title=\"struct libc::rtentry\">rtentry</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::rtentry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.timex.html\" title=\"struct libc::timex\">timex</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::timex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ntptimeval.html\" title=\"struct libc::ntptimeval\">ntptimeval</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::ntptimeval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.regex_t.html\" title=\"struct libc::regex_t\">regex_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::regex_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.utmpx.html\" title=\"struct libc::utmpx\">utmpx</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::utmpx"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigset_t.html\" title=\"struct libc::sigset_t\">sigset_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::sigset_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sysinfo.html\" title=\"struct libc::sysinfo\">sysinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::sysinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.msqid_ds.html\" title=\"struct libc::msqid_ds\">msqid_ds</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::msqid_ds"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigaction.html\" title=\"struct libc::sigaction\">sigaction</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::sigaction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statfs.html\" title=\"struct libc::statfs\">statfs</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::statfs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.flock.html\" title=\"struct libc::flock\">flock</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::flock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.flock64.html\" title=\"struct libc::flock64\">flock64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::flock64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.siginfo_t.html\" title=\"struct libc::siginfo_t\">siginfo_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::siginfo_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.stack_t.html\" title=\"struct libc::stack_t\">stack_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::stack_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.stat.html\" title=\"struct libc::stat\">stat</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::stat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.stat64.html\" title=\"struct libc::stat64\">stat64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::stat64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statfs64.html\" title=\"struct libc::statfs64\">statfs64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::statfs64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statvfs64.html\" title=\"struct libc::statvfs64\">statvfs64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::statvfs64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_attr_t.html\" title=\"struct libc::pthread_attr_t\">pthread_attr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::pthread_attr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct._libc_fpxreg.html\" title=\"struct libc::_libc_fpxreg\">_libc_fpxreg</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::_libc_fpxreg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct._libc_xmmreg.html\" title=\"struct libc::_libc_xmmreg\">_libc_xmmreg</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::_libc_xmmreg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct._libc_fpstate.html\" title=\"struct libc::_libc_fpstate\">_libc_fpstate</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::_libc_fpstate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.user_regs_struct.html\" title=\"struct libc::user_regs_struct\">user_regs_struct</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::user_regs_struct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.user.html\" title=\"struct libc::user\">user</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::user"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mcontext_t.html\" title=\"struct libc::mcontext_t\">mcontext_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::mcontext_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ipc_perm.html\" title=\"struct libc::ipc_perm\">ipc_perm</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::ipc_perm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.shmid_ds.html\" title=\"struct libc::shmid_ds\">shmid_ds</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::shmid_ds"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.termios2.html\" title=\"struct libc::termios2\">termios2</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::termios2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ip_mreqn.html\" title=\"struct libc::ip_mreqn\">ip_mreqn</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::ip_mreqn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.user_fpregs_struct.html\" title=\"struct libc::user_fpregs_struct\">user_fpregs_struct</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::user_fpregs_struct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ucontext_t.html\" title=\"struct libc::ucontext_t\">ucontext_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::ucontext_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statvfs.html\" title=\"struct libc::statvfs\">statvfs</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::not_x32::statvfs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.max_align_t.html\" title=\"struct libc::max_align_t\">max_align_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::align::max_align_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sem_t.html\" title=\"struct libc::sem_t\">sem_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::align::sem_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_mutexattr_t.html\" title=\"struct libc::pthread_mutexattr_t\">pthread_mutexattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_mutexattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_rwlockattr_t.html\" title=\"struct libc::pthread_rwlockattr_t\">pthread_rwlockattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_rwlockattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_condattr_t.html\" title=\"struct libc::pthread_condattr_t\">pthread_condattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_condattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fanotify_event_metadata.html\" title=\"struct libc::fanotify_event_metadata\">fanotify_event_metadata</a>","synthetic":true,"types":["libc::unix::linux_like::linux::fanotify_event_metadata"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_cond_t.html\" title=\"struct libc::pthread_cond_t\">pthread_cond_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_cond_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_mutex_t.html\" title=\"struct libc::pthread_mutex_t\">pthread_mutex_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_mutex_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_rwlock_t.html\" title=\"struct libc::pthread_rwlock_t\">pthread_rwlock_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_rwlock_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_addr.html\" title=\"struct libc::in6_addr\">in6_addr</a>","synthetic":true,"types":["libc::unix::align::in6_addr"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.DIR.html\" title=\"enum libc::DIR\">DIR</a>","synthetic":true,"types":["libc::unix::DIR"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.FILE.html\" title=\"enum libc::FILE\">FILE</a>","synthetic":true,"types":["libc::unix::FILE"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.fpos_t.html\" title=\"enum libc::fpos_t\">fpos_t</a>","synthetic":true,"types":["libc::unix::fpos_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.timezone.html\" title=\"enum libc::timezone\">timezone</a>","synthetic":true,"types":["libc::unix::linux_like::timezone"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.fpos64_t.html\" title=\"enum libc::fpos64_t\">fpos64_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::fpos64_t"]}];
implementors["log"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.Record.html\" title=\"struct log::Record\">Record</a>&lt;'a&gt;","synthetic":true,"types":["log::Record"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.RecordBuilder.html\" title=\"struct log::RecordBuilder\">RecordBuilder</a>&lt;'a&gt;","synthetic":true,"types":["log::RecordBuilder"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.Metadata.html\" title=\"struct log::Metadata\">Metadata</a>&lt;'a&gt;","synthetic":true,"types":["log::Metadata"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.MetadataBuilder.html\" title=\"struct log::MetadataBuilder\">MetadataBuilder</a>&lt;'a&gt;","synthetic":true,"types":["log::MetadataBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"log/struct.SetLoggerError.html\" title=\"struct log::SetLoggerError\">SetLoggerError</a>","synthetic":true,"types":["log::SetLoggerError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"log/struct.ParseLevelError.html\" title=\"struct log::ParseLevelError\">ParseLevelError</a>","synthetic":true,"types":["log::ParseLevelError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"log/enum.Level.html\" title=\"enum log::Level\">Level</a>","synthetic":true,"types":["log::Level"]},{"text":"impl Freeze for <a class=\"enum\" href=\"log/enum.LevelFilter.html\" title=\"enum log::LevelFilter\">LevelFilter</a>","synthetic":true,"types":["log::LevelFilter"]}];
implementors["memchr"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"memchr/struct.Memchr.html\" title=\"struct memchr::Memchr\">Memchr</a>&lt;'a&gt;","synthetic":true,"types":["memchr::iter::Memchr"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"memchr/struct.Memchr2.html\" title=\"struct memchr::Memchr2\">Memchr2</a>&lt;'a&gt;","synthetic":true,"types":["memchr::iter::Memchr2"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"memchr/struct.Memchr3.html\" title=\"struct memchr::Memchr3\">Memchr3</a>&lt;'a&gt;","synthetic":true,"types":["memchr::iter::Memchr3"]}];
implementors["num_bigint"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"num_bigint/struct.ParseBigIntError.html\" title=\"struct num_bigint::ParseBigIntError\">ParseBigIntError</a>","synthetic":true,"types":["num_bigint::ParseBigIntError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"num_bigint/struct.BigUint.html\" title=\"struct num_bigint::BigUint\">BigUint</a>","synthetic":true,"types":["num_bigint::biguint::BigUint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"num_bigint/struct.BigInt.html\" title=\"struct num_bigint::BigInt\">BigInt</a>","synthetic":true,"types":["num_bigint::bigint::BigInt"]},{"text":"impl Freeze for <a class=\"enum\" href=\"num_bigint/enum.Sign.html\" title=\"enum num_bigint::Sign\">Sign</a>","synthetic":true,"types":["num_bigint::bigint::Sign"]}];
implementors["num_complex"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["num_complex::Complex"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"num_complex/struct.ParseComplexError.html\" title=\"struct num_complex::ParseComplexError\">ParseComplexError</a>&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["num_complex::ParseComplexError"]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"num_integer/struct.ExtendedGcd.html\" title=\"struct num_integer::ExtendedGcd\">ExtendedGcd</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["num_integer::ExtendedGcd"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"num_integer/struct.IterBinomial.html\" title=\"struct num_integer::IterBinomial\">IterBinomial</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["num_integer::IterBinomial"]}];
implementors["num_iter"] = [{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"num_iter/struct.Range.html\" title=\"struct num_iter::Range\">Range</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["num_iter::Range"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"num_iter/struct.RangeInclusive.html\" title=\"struct num_iter::RangeInclusive\">RangeInclusive</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["num_iter::RangeInclusive"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"num_iter/struct.RangeStep.html\" title=\"struct num_iter::RangeStep\">RangeStep</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["num_iter::RangeStep"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"num_iter/struct.RangeStepInclusive.html\" title=\"struct num_iter::RangeStepInclusive\">RangeStepInclusive</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["num_iter::RangeStepInclusive"]}];
implementors["num_rational"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["num_rational::Ratio"]},{"text":"impl Freeze for <a class=\"struct\" href=\"num_rational/struct.ParseRatioError.html\" title=\"struct num_rational::ParseRatioError\">ParseRatioError</a>","synthetic":true,"types":["num_rational::ParseRatioError"]}];
implementors["num_traits"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"num_traits/struct.ParseFloatError.html\" title=\"struct num_traits::ParseFloatError\">ParseFloatError</a>","synthetic":true,"types":["num_traits::ParseFloatError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"num_traits/enum.FloatErrorKind.html\" title=\"enum num_traits::FloatErrorKind\">FloatErrorKind</a>","synthetic":true,"types":["num_traits::FloatErrorKind"]}];
implementors["percent_encoding"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"percent_encoding/struct.AsciiSet.html\" title=\"struct percent_encoding::AsciiSet\">AsciiSet</a>","synthetic":true,"types":["percent_encoding::AsciiSet"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"percent_encoding/struct.PercentEncode.html\" title=\"struct percent_encoding::PercentEncode\">PercentEncode</a>&lt;'a&gt;","synthetic":true,"types":["percent_encoding::PercentEncode"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"percent_encoding/struct.PercentDecode.html\" title=\"struct percent_encoding::PercentDecode\">PercentDecode</a>&lt;'a&gt;","synthetic":true,"types":["percent_encoding::PercentDecode"]}];
implementors["ppv_lite86"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesS3.html\" title=\"struct ppv_lite86::x86_64::YesS3\">YesS3</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesS3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoS3.html\" title=\"struct ppv_lite86::x86_64::NoS3\">NoS3</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoS3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesS4.html\" title=\"struct ppv_lite86::x86_64::YesS4\">YesS4</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesS4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoS4.html\" title=\"struct ppv_lite86::x86_64::NoS4\">NoS4</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoS4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesA1.html\" title=\"struct ppv_lite86::x86_64::YesA1\">YesA1</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesA1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoA1.html\" title=\"struct ppv_lite86::x86_64::NoA1\">NoA1</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoA1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesA2.html\" title=\"struct ppv_lite86::x86_64::YesA2\">YesA2</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesA2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoA2.html\" title=\"struct ppv_lite86::x86_64::NoA2\">NoA2</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoA2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesNI.html\" title=\"struct ppv_lite86::x86_64::YesNI\">YesNI</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesNI"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoNI.html\" title=\"struct ppv_lite86::x86_64::NoNI\">NoNI</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoNI"]},{"text":"impl&lt;S3, S4, NI&gt; Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.SseMachine.html\" title=\"struct ppv_lite86::x86_64::SseMachine\">SseMachine</a>&lt;S3, S4, NI&gt;","synthetic":true,"types":["ppv_lite86::x86_64::SseMachine"]},{"text":"impl&lt;NI&gt; Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.Avx2Machine.html\" title=\"struct ppv_lite86::x86_64::Avx2Machine\">Avx2Machine</a>&lt;NI&gt;","synthetic":true,"types":["ppv_lite86::x86_64::Avx2Machine"]},{"text":"impl Freeze for <a class=\"union\" href=\"ppv_lite86/x86_64/union.vec128_storage.html\" title=\"union ppv_lite86::x86_64::vec128_storage\">vec128_storage</a>","synthetic":true,"types":["ppv_lite86::x86_64::vec128_storage"]},{"text":"impl Freeze for <a class=\"union\" href=\"ppv_lite86/x86_64/union.vec256_storage.html\" title=\"union ppv_lite86::x86_64::vec256_storage\">vec256_storage</a>","synthetic":true,"types":["ppv_lite86::x86_64::vec256_storage"]},{"text":"impl Freeze for <a class=\"union\" href=\"ppv_lite86/x86_64/union.vec512_storage.html\" title=\"union ppv_lite86::x86_64::vec512_storage\">vec512_storage</a>","synthetic":true,"types":["ppv_lite86::x86_64::vec512_storage"]}];
implementors["proc_macro2"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.TokenStream.html\" title=\"struct proc_macro2::TokenStream\">TokenStream</a>","synthetic":true,"types":["proc_macro2::TokenStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.LexError.html\" title=\"struct proc_macro2::LexError\">LexError</a>","synthetic":true,"types":["proc_macro2::LexError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Span.html\" title=\"struct proc_macro2::Span\">Span</a>","synthetic":true,"types":["proc_macro2::Span"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Group.html\" title=\"struct proc_macro2::Group\">Group</a>","synthetic":true,"types":["proc_macro2::Group"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Punct.html\" title=\"struct proc_macro2::Punct\">Punct</a>","synthetic":true,"types":["proc_macro2::Punct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Ident.html\" title=\"struct proc_macro2::Ident\">Ident</a>","synthetic":true,"types":["proc_macro2::Ident"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Literal.html\" title=\"struct proc_macro2::Literal\">Literal</a>","synthetic":true,"types":["proc_macro2::Literal"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.TokenTree.html\" title=\"enum proc_macro2::TokenTree\">TokenTree</a>","synthetic":true,"types":["proc_macro2::TokenTree"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.Delimiter.html\" title=\"enum proc_macro2::Delimiter\">Delimiter</a>","synthetic":true,"types":["proc_macro2::Delimiter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.Spacing.html\" title=\"enum proc_macro2::Spacing\">Spacing</a>","synthetic":true,"types":["proc_macro2::Spacing"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/token_stream/struct.IntoIter.html\" title=\"struct proc_macro2::token_stream::IntoIter\">IntoIter</a>","synthetic":true,"types":["proc_macro2::token_stream::IntoIter"]}];
implementors["prost"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"prost/struct.DecodeError.html\" title=\"struct prost::DecodeError\">DecodeError</a>","synthetic":true,"types":["prost::error::DecodeError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"prost/struct.EncodeError.html\" title=\"struct prost::EncodeError\">EncodeError</a>","synthetic":true,"types":["prost::error::EncodeError"]}];
implementors["protected_fs"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"protected_fs/struct.ProtectedFile.html\" title=\"struct protected_fs::ProtectedFile\">ProtectedFile</a>","synthetic":true,"types":["protected_fs::protected_fs::ProtectedFile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"protected_fs/struct.OpenOptions.html\" title=\"struct protected_fs::OpenOptions\">OpenOptions</a>","synthetic":true,"types":["protected_fs::protected_fs::OpenOptions"]}];
implementors["quick_error"] = [{"text":"impl&lt;X, E&gt; Freeze for <a class=\"struct\" href=\"quick_error/struct.Context.html\" title=\"struct quick_error::Context\">Context</a>&lt;X, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["quick_error::Context"]}];
implementors["rand"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Bernoulli.html\" title=\"struct rand::distributions::Bernoulli\">Bernoulli</a>","synthetic":true,"types":["rand::distributions::bernoulli::Bernoulli"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Open01.html\" title=\"struct rand::distributions::Open01\">Open01</a>","synthetic":true,"types":["rand::distributions::float::Open01"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.OpenClosed01.html\" title=\"struct rand::distributions::OpenClosed01\">OpenClosed01</a>","synthetic":true,"types":["rand::distributions::float::OpenClosed01"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Alphanumeric.html\" title=\"struct rand::distributions::Alphanumeric\">Alphanumeric</a>","synthetic":true,"types":["rand::distributions::other::Alphanumeric"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.Uniform.html\" title=\"struct rand::distributions::uniform::Uniform\">Uniform</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as <a class=\"trait\" href=\"rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a>&gt;::<a class=\"type\" href=\"rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" title=\"type rand::distributions::uniform::SampleUniform::Sampler\">Sampler</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::uniform::Uniform"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Binomial.html\" title=\"struct rand::distributions::Binomial\">Binomial</a>","synthetic":true,"types":["rand::distributions::binomial::Binomial"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Cauchy.html\" title=\"struct rand::distributions::Cauchy\">Cauchy</a>","synthetic":true,"types":["rand::distributions::cauchy::Cauchy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Dirichlet.html\" title=\"struct rand::distributions::Dirichlet\">Dirichlet</a>","synthetic":true,"types":["rand::distributions::dirichlet::Dirichlet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Exp.html\" title=\"struct rand::distributions::Exp\">Exp</a>","synthetic":true,"types":["rand::distributions::exponential::Exp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Exp1.html\" title=\"struct rand::distributions::Exp1\">Exp1</a>","synthetic":true,"types":["rand::distributions::exponential::Exp1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Beta.html\" title=\"struct rand::distributions::Beta\">Beta</a>","synthetic":true,"types":["rand::distributions::gamma::Beta"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.ChiSquared.html\" title=\"struct rand::distributions::ChiSquared\">ChiSquared</a>","synthetic":true,"types":["rand::distributions::gamma::ChiSquared"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.FisherF.html\" title=\"struct rand::distributions::FisherF\">FisherF</a>","synthetic":true,"types":["rand::distributions::gamma::FisherF"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Gamma.html\" title=\"struct rand::distributions::Gamma\">Gamma</a>","synthetic":true,"types":["rand::distributions::gamma::Gamma"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.StudentT.html\" title=\"struct rand::distributions::StudentT\">StudentT</a>","synthetic":true,"types":["rand::distributions::gamma::StudentT"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.LogNormal.html\" title=\"struct rand::distributions::LogNormal\">LogNormal</a>","synthetic":true,"types":["rand::distributions::normal::LogNormal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Normal.html\" title=\"struct rand::distributions::Normal\">Normal</a>","synthetic":true,"types":["rand::distributions::normal::Normal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.StandardNormal.html\" title=\"struct rand::distributions::StandardNormal\">StandardNormal</a>","synthetic":true,"types":["rand::distributions::normal::StandardNormal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Pareto.html\" title=\"struct rand::distributions::Pareto\">Pareto</a>","synthetic":true,"types":["rand::distributions::pareto::Pareto"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Poisson.html\" title=\"struct rand::distributions::Poisson\">Poisson</a>","synthetic":true,"types":["rand::distributions::poisson::Poisson"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Triangular.html\" title=\"struct rand::distributions::Triangular\">Triangular</a>","synthetic":true,"types":["rand::distributions::triangular::Triangular"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.UnitCircle.html\" title=\"struct rand::distributions::UnitCircle\">UnitCircle</a>","synthetic":true,"types":["rand::distributions::unit_circle::UnitCircle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.UnitSphereSurface.html\" title=\"struct rand::distributions::UnitSphereSurface\">UnitSphereSurface</a>","synthetic":true,"types":["rand::distributions::unit_sphere::UnitSphereSurface"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Weibull.html\" title=\"struct rand::distributions::Weibull\">Weibull</a>","synthetic":true,"types":["rand::distributions::weibull::Weibull"]},{"text":"impl&lt;D, R, T&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/struct.DistIter.html\" title=\"struct rand::distributions::DistIter\">DistIter</a>&lt;D, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::DistIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Standard.html\" title=\"struct rand::distributions::Standard\">Standard</a>","synthetic":true,"types":["rand::distributions::Standard"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/distributions/enum.BernoulliError.html\" title=\"enum rand::distributions::BernoulliError\">BernoulliError</a>","synthetic":true,"types":["rand::distributions::bernoulli::BernoulliError"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.UniformInt.html\" title=\"struct rand::distributions::uniform::UniformInt\">UniformInt</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::uniform::UniformInt"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.UniformFloat.html\" title=\"struct rand::distributions::uniform::UniformFloat\">UniformFloat</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::uniform::UniformFloat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.UniformDuration.html\" title=\"struct rand::distributions::uniform::UniformDuration\">UniformDuration</a>","synthetic":true,"types":["rand::distributions::uniform::UniformDuration"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/weighted/struct.WeightedIndex.html\" title=\"struct rand::distributions::weighted::WeightedIndex\">WeightedIndex</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as <a class=\"trait\" href=\"rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a>&gt;::<a class=\"type\" href=\"rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" title=\"type rand::distributions::uniform::SampleUniform::Sampler\">Sampler</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::weighted::WeightedIndex"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/distributions/weighted/enum.WeightedError.html\" title=\"enum rand::distributions::weighted::WeightedError\">WeightedError</a>","synthetic":true,"types":["rand::distributions::weighted::WeightedError"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/weighted/alias_method/struct.WeightedIndex.html\" title=\"struct rand::distributions::weighted::alias_method::WeightedIndex\">WeightedIndex</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as <a class=\"trait\" href=\"rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a>&gt;::<a class=\"type\" href=\"rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" title=\"type rand::distributions::uniform::SampleUniform::Sampler\">Sampler</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::weighted::alias_method::WeightedIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/struct.EntropyRng.html\" title=\"struct rand::rngs::EntropyRng\">EntropyRng</a>","synthetic":true,"types":["rand::rngs::entropy::EntropyRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/struct.StdRng.html\" title=\"struct rand::rngs::StdRng\">StdRng</a>","synthetic":true,"types":["rand::rngs::std::StdRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/struct.ThreadRng.html\" title=\"struct rand::rngs::ThreadRng\">ThreadRng</a>","synthetic":true,"types":["rand::rngs::thread::ThreadRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/adapter/struct.ReadError.html\" title=\"struct rand::rngs::adapter::ReadError\">ReadError</a>","synthetic":true,"types":["rand::rngs::adapter::read::ReadError"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"rand/rngs/adapter/struct.ReadRng.html\" title=\"struct rand::rngs::adapter::ReadRng\">ReadRng</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::rngs::adapter::read::ReadRng"]},{"text":"impl&lt;R, Rsdr&gt; Freeze for <a class=\"struct\" href=\"rand/rngs/adapter/struct.ReseedingRng.html\" title=\"struct rand::rngs::adapter::ReseedingRng\">ReseedingRng</a>&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"rand_core/block/trait.BlockRngCore.html\" title=\"trait rand_core::block::BlockRngCore\">BlockRngCore</a>&gt;::<a class=\"type\" href=\"rand_core/block/trait.BlockRngCore.html#associatedtype.Results\" title=\"type rand_core::block::BlockRngCore::Results\">Results</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::rngs::adapter::reseeding::ReseedingRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/mock/struct.StepRng.html\" title=\"struct rand::rngs::mock::StepRng\">StepRng</a>","synthetic":true,"types":["rand::rngs::mock::StepRng"]},{"text":"impl&lt;'a, S:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, T&gt; Freeze for <a class=\"struct\" href=\"rand/seq/struct.SliceChooseIter.html\" title=\"struct rand::seq::SliceChooseIter\">SliceChooseIter</a>&lt;'a, S, T&gt;","synthetic":true,"types":["rand::seq::SliceChooseIter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/seq/index/enum.IndexVec.html\" title=\"enum rand::seq::index::IndexVec\">IndexVec</a>","synthetic":true,"types":["rand::seq::index::IndexVec"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"rand/seq/index/enum.IndexVecIter.html\" title=\"enum rand::seq::index::IndexVecIter\">IndexVecIter</a>&lt;'a&gt;","synthetic":true,"types":["rand::seq::index::IndexVecIter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/seq/index/enum.IndexVecIntoIter.html\" title=\"enum rand::seq::index::IndexVecIntoIter\">IndexVecIntoIter</a>","synthetic":true,"types":["rand::seq::index::IndexVecIntoIter"]}];
implementors["rand_chacha"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha12Core.html\" title=\"struct rand_chacha::ChaCha12Core\">ChaCha12Core</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha12Core"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha12Rng.html\" title=\"struct rand_chacha::ChaCha12Rng\">ChaCha12Rng</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha12Rng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha20Core.html\" title=\"struct rand_chacha::ChaCha20Core\">ChaCha20Core</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha20Core"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha20Rng.html\" title=\"struct rand_chacha::ChaCha20Rng\">ChaCha20Rng</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha20Rng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha8Core.html\" title=\"struct rand_chacha::ChaCha8Core\">ChaCha8Core</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha8Core"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha8Rng.html\" title=\"struct rand_chacha::ChaCha8Rng\">ChaCha8Rng</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha8Rng"]}];
implementors["rand_core"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rand_core/struct.Error.html\" title=\"struct rand_core::Error\">Error</a>","synthetic":true,"types":["rand_core::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_core/struct.OsRng.html\" title=\"struct rand_core::OsRng\">OsRng</a>","synthetic":true,"types":["rand_core::os::OsRng"]},{"text":"impl&lt;R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"rand_core/block/struct.BlockRng.html\" title=\"struct rand_core::block::BlockRng\">BlockRng</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"rand_core/block/trait.BlockRngCore.html\" title=\"trait rand_core::block::BlockRngCore\">BlockRngCore</a>&gt;::<a class=\"type\" href=\"rand_core/block/trait.BlockRngCore.html#associatedtype.Results\" title=\"type rand_core::block::BlockRngCore::Results\">Results</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_core::block::BlockRng"]},{"text":"impl&lt;R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"rand_core/block/struct.BlockRng64.html\" title=\"struct rand_core::block::BlockRng64\">BlockRng64</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"rand_core/block/trait.BlockRngCore.html\" title=\"trait rand_core::block::BlockRngCore\">BlockRngCore</a>&gt;::<a class=\"type\" href=\"rand_core/block/trait.BlockRngCore.html#associatedtype.Results\" title=\"type rand_core::block::BlockRngCore::Results\">Results</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_core::block::BlockRng64"]}];
implementors["rdrand"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rdrand/struct.RdRand.html\" title=\"struct rdrand::RdRand\">RdRand</a>","synthetic":true,"types":["rdrand::RdRand"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rdrand/struct.RdSeed.html\" title=\"struct rdrand::RdSeed\">RdSeed</a>","synthetic":true,"types":["rdrand::RdSeed"]}];
implementors["regex"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.RegexSetBuilder.html\" title=\"struct regex::RegexSetBuilder\">RegexSetBuilder</a>","synthetic":true,"types":["regex::re_builder::set_unicode::RegexSetBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.RegexBuilder.html\" title=\"struct regex::RegexBuilder\">RegexBuilder</a>","synthetic":true,"types":["regex::re_builder::unicode::RegexBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"regex/struct.RegexSet.html\" title=\"struct regex::RegexSet\">RegexSet</a>","synthetic":true,"types":["regex::re_set::unicode::RegexSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.SetMatches.html\" title=\"struct regex::SetMatches\">SetMatches</a>","synthetic":true,"types":["regex::re_set::unicode::SetMatches"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.SetMatchesIntoIter.html\" title=\"struct regex::SetMatchesIntoIter\">SetMatchesIntoIter</a>","synthetic":true,"types":["regex::re_set::unicode::SetMatchesIntoIter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex/struct.SetMatchesIter.html\" title=\"struct regex::SetMatchesIter\">SetMatchesIter</a>&lt;'a&gt;","synthetic":true,"types":["regex::re_set::unicode::SetMatchesIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.CaptureLocations.html\" title=\"struct regex::CaptureLocations\">CaptureLocations</a>","synthetic":true,"types":["regex::re_unicode::CaptureLocations"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.CaptureMatches.html\" title=\"struct regex::CaptureMatches\">CaptureMatches</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_unicode::CaptureMatches"]},{"text":"impl&lt;'r&gt; Freeze for <a class=\"struct\" href=\"regex/struct.CaptureNames.html\" title=\"struct regex::CaptureNames\">CaptureNames</a>&lt;'r&gt;","synthetic":true,"types":["regex::re_unicode::CaptureNames"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Captures.html\" title=\"struct regex::Captures\">Captures</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_unicode::Captures"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Match.html\" title=\"struct regex::Match\">Match</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_unicode::Match"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Matches.html\" title=\"struct regex::Matches\">Matches</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_unicode::Matches"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/struct.NoExpand.html\" title=\"struct regex::NoExpand\">NoExpand</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_unicode::NoExpand"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"regex/struct.Regex.html\" title=\"struct regex::Regex\">Regex</a>","synthetic":true,"types":["regex::re_unicode::Regex"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"regex/struct.ReplacerRef.html\" title=\"struct regex::ReplacerRef\">ReplacerRef</a>&lt;'a, R&gt;","synthetic":true,"types":["regex::re_unicode::ReplacerRef"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Split.html\" title=\"struct regex::Split\">Split</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_unicode::Split"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.SplitN.html\" title=\"struct regex::SplitN\">SplitN</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_unicode::SplitN"]},{"text":"impl&lt;'c, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.SubCaptureMatches.html\" title=\"struct regex::SubCaptureMatches\">SubCaptureMatches</a>&lt;'c, 't&gt;","synthetic":true,"types":["regex::re_unicode::SubCaptureMatches"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex/enum.Error.html\" title=\"enum regex::Error\">Error</a>","synthetic":true,"types":["regex::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.RegexBuilder.html\" title=\"struct regex::bytes::RegexBuilder\">RegexBuilder</a>","synthetic":true,"types":["regex::re_builder::bytes::RegexBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.RegexSetBuilder.html\" title=\"struct regex::bytes::RegexSetBuilder\">RegexSetBuilder</a>","synthetic":true,"types":["regex::re_builder::set_bytes::RegexSetBuilder"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Match.html\" title=\"struct regex::bytes::Match\">Match</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_bytes::Match"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Regex.html\" title=\"struct regex::bytes::Regex\">Regex</a>","synthetic":true,"types":["regex::re_bytes::Regex"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Matches.html\" title=\"struct regex::bytes::Matches\">Matches</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_bytes::Matches"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.CaptureMatches.html\" title=\"struct regex::bytes::CaptureMatches\">CaptureMatches</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_bytes::CaptureMatches"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Split.html\" title=\"struct regex::bytes::Split\">Split</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_bytes::Split"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SplitN.html\" title=\"struct regex::bytes::SplitN\">SplitN</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_bytes::SplitN"]},{"text":"impl&lt;'r&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.CaptureNames.html\" title=\"struct regex::bytes::CaptureNames\">CaptureNames</a>&lt;'r&gt;","synthetic":true,"types":["regex::re_bytes::CaptureNames"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.CaptureLocations.html\" title=\"struct regex::bytes::CaptureLocations\">CaptureLocations</a>","synthetic":true,"types":["regex::re_bytes::CaptureLocations"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Captures.html\" title=\"struct regex::bytes::Captures\">Captures</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_bytes::Captures"]},{"text":"impl&lt;'c, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SubCaptureMatches.html\" title=\"struct regex::bytes::SubCaptureMatches\">SubCaptureMatches</a>&lt;'c, 't&gt;","synthetic":true,"types":["regex::re_bytes::SubCaptureMatches"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.ReplacerRef.html\" title=\"struct regex::bytes::ReplacerRef\">ReplacerRef</a>&lt;'a, R&gt;","synthetic":true,"types":["regex::re_bytes::ReplacerRef"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.NoExpand.html\" title=\"struct regex::bytes::NoExpand\">NoExpand</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_bytes::NoExpand"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"regex/bytes/struct.RegexSet.html\" title=\"struct regex::bytes::RegexSet\">RegexSet</a>","synthetic":true,"types":["regex::re_set::bytes::RegexSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SetMatches.html\" title=\"struct regex::bytes::SetMatches\">SetMatches</a>","synthetic":true,"types":["regex::re_set::bytes::SetMatches"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SetMatchesIntoIter.html\" title=\"struct regex::bytes::SetMatchesIntoIter\">SetMatchesIntoIter</a>","synthetic":true,"types":["regex::re_set::bytes::SetMatchesIntoIter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SetMatchesIter.html\" title=\"struct regex::bytes::SetMatchesIter\">SetMatchesIter</a>&lt;'a&gt;","synthetic":true,"types":["regex::re_set::bytes::SetMatchesIter"]}];
implementors["regex_syntax"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"regex_syntax/struct.Parser.html\" title=\"struct regex_syntax::Parser\">Parser</a>","synthetic":true,"types":["regex_syntax::parser::Parser"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/struct.ParserBuilder.html\" title=\"struct regex_syntax::ParserBuilder\">ParserBuilder</a>","synthetic":true,"types":["regex_syntax::parser::ParserBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/struct.UnicodeWordError.html\" title=\"struct regex_syntax::UnicodeWordError\">UnicodeWordError</a>","synthetic":true,"types":["regex_syntax::unicode::UnicodeWordError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/enum.Error.html\" title=\"enum regex_syntax::Error\">Error</a>","synthetic":true,"types":["regex_syntax::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Error.html\" title=\"struct regex_syntax::ast::Error\">Error</a>","synthetic":true,"types":["regex_syntax::ast::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Span.html\" title=\"struct regex_syntax::ast::Span\">Span</a>","synthetic":true,"types":["regex_syntax::ast::Span"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Position.html\" title=\"struct regex_syntax::ast::Position\">Position</a>","synthetic":true,"types":["regex_syntax::ast::Position"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.WithComments.html\" title=\"struct regex_syntax::ast::WithComments\">WithComments</a>","synthetic":true,"types":["regex_syntax::ast::WithComments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Comment.html\" title=\"struct regex_syntax::ast::Comment\">Comment</a>","synthetic":true,"types":["regex_syntax::ast::Comment"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Alternation.html\" title=\"struct regex_syntax::ast::Alternation\">Alternation</a>","synthetic":true,"types":["regex_syntax::ast::Alternation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Concat.html\" title=\"struct regex_syntax::ast::Concat\">Concat</a>","synthetic":true,"types":["regex_syntax::ast::Concat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Literal.html\" title=\"struct regex_syntax::ast::Literal\">Literal</a>","synthetic":true,"types":["regex_syntax::ast::Literal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassPerl.html\" title=\"struct regex_syntax::ast::ClassPerl\">ClassPerl</a>","synthetic":true,"types":["regex_syntax::ast::ClassPerl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassAscii.html\" title=\"struct regex_syntax::ast::ClassAscii\">ClassAscii</a>","synthetic":true,"types":["regex_syntax::ast::ClassAscii"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassUnicode.html\" title=\"struct regex_syntax::ast::ClassUnicode\">ClassUnicode</a>","synthetic":true,"types":["regex_syntax::ast::ClassUnicode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassBracketed.html\" title=\"struct regex_syntax::ast::ClassBracketed\">ClassBracketed</a>","synthetic":true,"types":["regex_syntax::ast::ClassBracketed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassSetRange.html\" title=\"struct regex_syntax::ast::ClassSetRange\">ClassSetRange</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassSetUnion.html\" title=\"struct regex_syntax::ast::ClassSetUnion\">ClassSetUnion</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetUnion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassSetBinaryOp.html\" title=\"struct regex_syntax::ast::ClassSetBinaryOp\">ClassSetBinaryOp</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetBinaryOp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Assertion.html\" title=\"struct regex_syntax::ast::Assertion\">Assertion</a>","synthetic":true,"types":["regex_syntax::ast::Assertion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Repetition.html\" title=\"struct regex_syntax::ast::Repetition\">Repetition</a>","synthetic":true,"types":["regex_syntax::ast::Repetition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.RepetitionOp.html\" title=\"struct regex_syntax::ast::RepetitionOp\">RepetitionOp</a>","synthetic":true,"types":["regex_syntax::ast::RepetitionOp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Group.html\" title=\"struct regex_syntax::ast::Group\">Group</a>","synthetic":true,"types":["regex_syntax::ast::Group"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.CaptureName.html\" title=\"struct regex_syntax::ast::CaptureName\">CaptureName</a>","synthetic":true,"types":["regex_syntax::ast::CaptureName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.SetFlags.html\" title=\"struct regex_syntax::ast::SetFlags\">SetFlags</a>","synthetic":true,"types":["regex_syntax::ast::SetFlags"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Flags.html\" title=\"struct regex_syntax::ast::Flags\">Flags</a>","synthetic":true,"types":["regex_syntax::ast::Flags"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.FlagsItem.html\" title=\"struct regex_syntax::ast::FlagsItem\">FlagsItem</a>","synthetic":true,"types":["regex_syntax::ast::FlagsItem"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ErrorKind.html\" title=\"enum regex_syntax::ast::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["regex_syntax::ast::ErrorKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.Ast.html\" title=\"enum regex_syntax::ast::Ast\">Ast</a>","synthetic":true,"types":["regex_syntax::ast::Ast"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.LiteralKind.html\" title=\"enum regex_syntax::ast::LiteralKind\">LiteralKind</a>","synthetic":true,"types":["regex_syntax::ast::LiteralKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.SpecialLiteralKind.html\" title=\"enum regex_syntax::ast::SpecialLiteralKind\">SpecialLiteralKind</a>","synthetic":true,"types":["regex_syntax::ast::SpecialLiteralKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.HexLiteralKind.html\" title=\"enum regex_syntax::ast::HexLiteralKind\">HexLiteralKind</a>","synthetic":true,"types":["regex_syntax::ast::HexLiteralKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.Class.html\" title=\"enum regex_syntax::ast::Class\">Class</a>","synthetic":true,"types":["regex_syntax::ast::Class"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassPerlKind.html\" title=\"enum regex_syntax::ast::ClassPerlKind\">ClassPerlKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassPerlKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassAsciiKind.html\" title=\"enum regex_syntax::ast::ClassAsciiKind\">ClassAsciiKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassAsciiKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassUnicodeKind.html\" title=\"enum regex_syntax::ast::ClassUnicodeKind\">ClassUnicodeKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassUnicodeKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassUnicodeOpKind.html\" title=\"enum regex_syntax::ast::ClassUnicodeOpKind\">ClassUnicodeOpKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassUnicodeOpKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassSet.html\" title=\"enum regex_syntax::ast::ClassSet\">ClassSet</a>","synthetic":true,"types":["regex_syntax::ast::ClassSet"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassSetItem.html\" title=\"enum regex_syntax::ast::ClassSetItem\">ClassSetItem</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetItem"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassSetBinaryOpKind.html\" title=\"enum regex_syntax::ast::ClassSetBinaryOpKind\">ClassSetBinaryOpKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetBinaryOpKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.AssertionKind.html\" title=\"enum regex_syntax::ast::AssertionKind\">AssertionKind</a>","synthetic":true,"types":["regex_syntax::ast::AssertionKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.RepetitionKind.html\" title=\"enum regex_syntax::ast::RepetitionKind\">RepetitionKind</a>","synthetic":true,"types":["regex_syntax::ast::RepetitionKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.RepetitionRange.html\" title=\"enum regex_syntax::ast::RepetitionRange\">RepetitionRange</a>","synthetic":true,"types":["regex_syntax::ast::RepetitionRange"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.GroupKind.html\" title=\"enum regex_syntax::ast::GroupKind\">GroupKind</a>","synthetic":true,"types":["regex_syntax::ast::GroupKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.FlagsItemKind.html\" title=\"enum regex_syntax::ast::FlagsItemKind\">FlagsItemKind</a>","synthetic":true,"types":["regex_syntax::ast::FlagsItemKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.Flag.html\" title=\"enum regex_syntax::ast::Flag\">Flag</a>","synthetic":true,"types":["regex_syntax::ast::Flag"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/parse/struct.ParserBuilder.html\" title=\"struct regex_syntax::ast::parse::ParserBuilder\">ParserBuilder</a>","synthetic":true,"types":["regex_syntax::ast::parse::ParserBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"regex_syntax/ast/parse/struct.Parser.html\" title=\"struct regex_syntax::ast::parse::Parser\">Parser</a>","synthetic":true,"types":["regex_syntax::ast::parse::Parser"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/print/struct.Printer.html\" title=\"struct regex_syntax::ast::print::Printer\">Printer</a>","synthetic":true,"types":["regex_syntax::ast::print::Printer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.CaseFoldError.html\" title=\"struct regex_syntax::hir::CaseFoldError\">CaseFoldError</a>","synthetic":true,"types":["regex_syntax::unicode::CaseFoldError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Error.html\" title=\"struct regex_syntax::hir::Error\">Error</a>","synthetic":true,"types":["regex_syntax::hir::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Hir.html\" title=\"struct regex_syntax::hir::Hir\">Hir</a>","synthetic":true,"types":["regex_syntax::hir::Hir"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassUnicode.html\" title=\"struct regex_syntax::hir::ClassUnicode\">ClassUnicode</a>","synthetic":true,"types":["regex_syntax::hir::ClassUnicode"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassUnicodeIter.html\" title=\"struct regex_syntax::hir::ClassUnicodeIter\">ClassUnicodeIter</a>&lt;'a&gt;","synthetic":true,"types":["regex_syntax::hir::ClassUnicodeIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassUnicodeRange.html\" title=\"struct regex_syntax::hir::ClassUnicodeRange\">ClassUnicodeRange</a>","synthetic":true,"types":["regex_syntax::hir::ClassUnicodeRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassBytes.html\" title=\"struct regex_syntax::hir::ClassBytes\">ClassBytes</a>","synthetic":true,"types":["regex_syntax::hir::ClassBytes"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassBytesIter.html\" title=\"struct regex_syntax::hir::ClassBytesIter\">ClassBytesIter</a>&lt;'a&gt;","synthetic":true,"types":["regex_syntax::hir::ClassBytesIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassBytesRange.html\" title=\"struct regex_syntax::hir::ClassBytesRange\">ClassBytesRange</a>","synthetic":true,"types":["regex_syntax::hir::ClassBytesRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Group.html\" title=\"struct regex_syntax::hir::Group\">Group</a>","synthetic":true,"types":["regex_syntax::hir::Group"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Repetition.html\" title=\"struct regex_syntax::hir::Repetition\">Repetition</a>","synthetic":true,"types":["regex_syntax::hir::Repetition"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.ErrorKind.html\" title=\"enum regex_syntax::hir::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["regex_syntax::hir::ErrorKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.HirKind.html\" title=\"enum regex_syntax::hir::HirKind\">HirKind</a>","synthetic":true,"types":["regex_syntax::hir::HirKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.Literal.html\" title=\"enum regex_syntax::hir::Literal\">Literal</a>","synthetic":true,"types":["regex_syntax::hir::Literal"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.Class.html\" title=\"enum regex_syntax::hir::Class\">Class</a>","synthetic":true,"types":["regex_syntax::hir::Class"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.Anchor.html\" title=\"enum regex_syntax::hir::Anchor\">Anchor</a>","synthetic":true,"types":["regex_syntax::hir::Anchor"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.WordBoundary.html\" title=\"enum regex_syntax::hir::WordBoundary\">WordBoundary</a>","synthetic":true,"types":["regex_syntax::hir::WordBoundary"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.GroupKind.html\" title=\"enum regex_syntax::hir::GroupKind\">GroupKind</a>","synthetic":true,"types":["regex_syntax::hir::GroupKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.RepetitionKind.html\" title=\"enum regex_syntax::hir::RepetitionKind\">RepetitionKind</a>","synthetic":true,"types":["regex_syntax::hir::RepetitionKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.RepetitionRange.html\" title=\"enum regex_syntax::hir::RepetitionRange\">RepetitionRange</a>","synthetic":true,"types":["regex_syntax::hir::RepetitionRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/literal/struct.Literals.html\" title=\"struct regex_syntax::hir::literal::Literals\">Literals</a>","synthetic":true,"types":["regex_syntax::hir::literal::Literals"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/literal/struct.Literal.html\" title=\"struct regex_syntax::hir::literal::Literal\">Literal</a>","synthetic":true,"types":["regex_syntax::hir::literal::Literal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/print/struct.Printer.html\" title=\"struct regex_syntax::hir::print::Printer\">Printer</a>","synthetic":true,"types":["regex_syntax::hir::print::Printer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/translate/struct.TranslatorBuilder.html\" title=\"struct regex_syntax::hir::translate::TranslatorBuilder\">TranslatorBuilder</a>","synthetic":true,"types":["regex_syntax::hir::translate::TranslatorBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"regex_syntax/hir/translate/struct.Translator.html\" title=\"struct regex_syntax::hir::translate::Translator\">Translator</a>","synthetic":true,"types":["regex_syntax::hir::translate::Translator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/utf8/struct.Utf8Range.html\" title=\"struct regex_syntax::utf8::Utf8Range\">Utf8Range</a>","synthetic":true,"types":["regex_syntax::utf8::Utf8Range"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/utf8/struct.Utf8Sequences.html\" title=\"struct regex_syntax::utf8::Utf8Sequences\">Utf8Sequences</a>","synthetic":true,"types":["regex_syntax::utf8::Utf8Sequences"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/utf8/enum.Utf8Sequence.html\" title=\"enum regex_syntax::utf8::Utf8Sequence\">Utf8Sequence</a>","synthetic":true,"types":["regex_syntax::utf8::Utf8Sequence"]}];
implementors["ring"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ring/test/struct.TestCase.html\" title=\"struct ring::test::TestCase\">TestCase</a>","synthetic":true,"types":["ring::test::TestCase"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"ring/test/struct.File.html\" title=\"struct ring::test::File\">File</a>&lt;'a&gt;","synthetic":true,"types":["ring::test::File"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/aead/struct.Nonce.html\" title=\"struct ring::aead::Nonce\">Nonce</a>","synthetic":true,"types":["ring::aead::nonce::Nonce"]},{"text":"impl&lt;N&gt; Freeze for <a class=\"struct\" href=\"ring/aead/struct.OpeningKey.html\" title=\"struct ring::aead::OpeningKey\">OpeningKey</a>&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["ring::aead::OpeningKey"]},{"text":"impl&lt;N&gt; Freeze for <a class=\"struct\" href=\"ring/aead/struct.SealingKey.html\" title=\"struct ring::aead::SealingKey\">SealingKey</a>&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["ring::aead::SealingKey"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"ring/aead/struct.Aad.html\" title=\"struct ring::aead::Aad\">Aad</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["ring::aead::Aad"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/aead/struct.UnboundKey.html\" title=\"struct ring::aead::UnboundKey\">UnboundKey</a>","synthetic":true,"types":["ring::aead::UnboundKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/aead/struct.LessSafeKey.html\" title=\"struct ring::aead::LessSafeKey\">LessSafeKey</a>","synthetic":true,"types":["ring::aead::LessSafeKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/aead/struct.Algorithm.html\" title=\"struct ring::aead::Algorithm\">Algorithm</a>","synthetic":true,"types":["ring::aead::Algorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/aead/struct.Tag.html\" title=\"struct ring::aead::Tag\">Tag</a>","synthetic":true,"types":["ring::aead::Tag"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/aead/chacha20_poly1305_openssh/struct.SealingKey.html\" title=\"struct ring::aead::chacha20_poly1305_openssh::SealingKey\">SealingKey</a>","synthetic":true,"types":["ring::aead::chacha20_poly1305_openssh::SealingKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/aead/chacha20_poly1305_openssh/struct.OpeningKey.html\" title=\"struct ring::aead::chacha20_poly1305_openssh::OpeningKey\">OpeningKey</a>","synthetic":true,"types":["ring::aead::chacha20_poly1305_openssh::OpeningKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/aead/quic/struct.HeaderProtectionKey.html\" title=\"struct ring::aead::quic::HeaderProtectionKey\">HeaderProtectionKey</a>","synthetic":true,"types":["ring::aead::quic::HeaderProtectionKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/aead/quic/struct.Algorithm.html\" title=\"struct ring::aead::quic::Algorithm\">Algorithm</a>","synthetic":true,"types":["ring::aead::quic::Algorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/agreement/struct.Algorithm.html\" title=\"struct ring::agreement::Algorithm\">Algorithm</a>","synthetic":true,"types":["ring::agreement::Algorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/agreement/struct.EphemeralPrivateKey.html\" title=\"struct ring::agreement::EphemeralPrivateKey\">EphemeralPrivateKey</a>","synthetic":true,"types":["ring::agreement::EphemeralPrivateKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/agreement/struct.PublicKey.html\" title=\"struct ring::agreement::PublicKey\">PublicKey</a>","synthetic":true,"types":["ring::agreement::PublicKey"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"ring/agreement/struct.UnparsedPublicKey.html\" title=\"struct ring::agreement::UnparsedPublicKey\">UnparsedPublicKey</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["ring::agreement::UnparsedPublicKey"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"ring/io/struct.Positive.html\" title=\"struct ring::io::Positive\">Positive</a>&lt;'a&gt;","synthetic":true,"types":["ring::io::positive::Positive"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/digest/struct.Context.html\" title=\"struct ring::digest::Context\">Context</a>","synthetic":true,"types":["ring::digest::Context"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/digest/struct.Digest.html\" title=\"struct ring::digest::Digest\">Digest</a>","synthetic":true,"types":["ring::digest::Digest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/digest/struct.Algorithm.html\" title=\"struct ring::digest::Algorithm\">Algorithm</a>","synthetic":true,"types":["ring::digest::Algorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/signature/struct.Ed25519KeyPair.html\" title=\"struct ring::signature::Ed25519KeyPair\">Ed25519KeyPair</a>","synthetic":true,"types":["ring::ec::curve25519::ed25519::signing::Ed25519KeyPair"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/signature/struct.EdDSAParameters.html\" title=\"struct ring::signature::EdDSAParameters\">EdDSAParameters</a>","synthetic":true,"types":["ring::ec::curve25519::ed25519::verification::EdDSAParameters"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/signature/struct.EcdsaSigningAlgorithm.html\" title=\"struct ring::signature::EcdsaSigningAlgorithm\">EcdsaSigningAlgorithm</a>","synthetic":true,"types":["ring::ec::suite_b::ecdsa::signing::EcdsaSigningAlgorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/signature/struct.EcdsaKeyPair.html\" title=\"struct ring::signature::EcdsaKeyPair\">EcdsaKeyPair</a>","synthetic":true,"types":["ring::ec::suite_b::ecdsa::signing::EcdsaKeyPair"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/signature/struct.EcdsaVerificationAlgorithm.html\" title=\"struct ring::signature::EcdsaVerificationAlgorithm\">EcdsaVerificationAlgorithm</a>","synthetic":true,"types":["ring::ec::suite_b::ecdsa::verification::EcdsaVerificationAlgorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/error/struct.Unspecified.html\" title=\"struct ring::error::Unspecified\">Unspecified</a>","synthetic":true,"types":["ring::error::Unspecified"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/error/struct.KeyRejected.html\" title=\"struct ring::error::KeyRejected\">KeyRejected</a>","synthetic":true,"types":["ring::error::KeyRejected"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/hkdf/struct.Algorithm.html\" title=\"struct ring::hkdf::Algorithm\">Algorithm</a>","synthetic":true,"types":["ring::hkdf::Algorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/hkdf/struct.Salt.html\" title=\"struct ring::hkdf::Salt\">Salt</a>","synthetic":true,"types":["ring::hkdf::Salt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/hkdf/struct.Prk.html\" title=\"struct ring::hkdf::Prk\">Prk</a>","synthetic":true,"types":["ring::hkdf::Prk"]},{"text":"impl&lt;'a, L&gt; Freeze for <a class=\"struct\" href=\"ring/hkdf/struct.Okm.html\" title=\"struct ring::hkdf::Okm\">Okm</a>&lt;'a, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,&nbsp;</span>","synthetic":true,"types":["ring::hkdf::Okm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/hmac/struct.Algorithm.html\" title=\"struct ring::hmac::Algorithm\">Algorithm</a>","synthetic":true,"types":["ring::hmac::Algorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/hmac/struct.Tag.html\" title=\"struct ring::hmac::Tag\">Tag</a>","synthetic":true,"types":["ring::hmac::Tag"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/hmac/struct.Key.html\" title=\"struct ring::hmac::Key\">Key</a>","synthetic":true,"types":["ring::hmac::Key"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/hmac/struct.Context.html\" title=\"struct ring::hmac::Context\">Context</a>","synthetic":true,"types":["ring::hmac::Context"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/pbkdf2/struct.Algorithm.html\" title=\"struct ring::pbkdf2::Algorithm\">Algorithm</a>","synthetic":true,"types":["ring::pbkdf2::Algorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/pkcs8/struct.Document.html\" title=\"struct ring::pkcs8::Document\">Document</a>","synthetic":true,"types":["ring::pkcs8::Document"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"ring/rand/struct.Random.html\" title=\"struct ring::rand::Random\">Random</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["ring::rand::Random"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/rand/struct.SystemRandom.html\" title=\"struct ring::rand::SystemRandom\">SystemRandom</a>","synthetic":true,"types":["ring::rand::SystemRandom"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/signature/struct.RsaParameters.html\" title=\"struct ring::signature::RsaParameters\">RsaParameters</a>","synthetic":true,"types":["ring::rsa::RsaParameters"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"ring/signature/struct.RsaPublicKeyComponents.html\" title=\"struct ring::signature::RsaPublicKeyComponents\">RsaPublicKeyComponents</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["ring::rsa::verification::RsaPublicKeyComponents"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/signature/struct.RsaKeyPair.html\" title=\"struct ring::signature::RsaKeyPair\">RsaKeyPair</a>","synthetic":true,"types":["ring::rsa::signing::RsaKeyPair"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/signature/struct.RsaSubjectPublicKey.html\" title=\"struct ring::signature::RsaSubjectPublicKey\">RsaSubjectPublicKey</a>","synthetic":true,"types":["ring::rsa::signing::RsaSubjectPublicKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ring/signature/struct.Signature.html\" title=\"struct ring::signature::Signature\">Signature</a>","synthetic":true,"types":["ring::signature::Signature"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"ring/signature/struct.UnparsedPublicKey.html\" title=\"struct ring::signature::UnparsedPublicKey\">UnparsedPublicKey</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["ring::signature::UnparsedPublicKey"]}];
implementors["rulinalg"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rulinalg/macros/struct.AbsoluteElementwiseComparator.html\" title=\"struct rulinalg::macros::AbsoluteElementwiseComparator\">AbsoluteElementwiseComparator</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rulinalg::macros::comparison::AbsoluteElementwiseComparator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rulinalg/macros/struct.ExactElementwiseComparator.html\" title=\"struct rulinalg::macros::ExactElementwiseComparator\">ExactElementwiseComparator</a>","synthetic":true,"types":["rulinalg::macros::comparison::ExactElementwiseComparator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rulinalg/macros/struct.UlpElementwiseComparator.html\" title=\"struct rulinalg::macros::UlpElementwiseComparator\">UlpElementwiseComparator</a>","synthetic":true,"types":["rulinalg::macros::comparison::UlpElementwiseComparator"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rulinalg/macros/struct.FloatElementwiseComparator.html\" title=\"struct rulinalg::macros::FloatElementwiseComparator\">FloatElementwiseComparator</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rulinalg::macros::comparison::FloatElementwiseComparator"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rulinalg/matrix/struct.PermutationMatrix.html\" title=\"struct rulinalg::matrix::PermutationMatrix\">PermutationMatrix</a>&lt;T&gt;","synthetic":true,"types":["rulinalg::matrix::permutation_matrix::PermutationMatrix"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rulinalg/matrix/struct.Matrix.html\" title=\"struct rulinalg::matrix::Matrix\">Matrix</a>&lt;T&gt;","synthetic":true,"types":["rulinalg::matrix::Matrix"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rulinalg/matrix/struct.MatrixSlice.html\" title=\"struct rulinalg::matrix::MatrixSlice\">MatrixSlice</a>&lt;'a, T&gt;","synthetic":true,"types":["rulinalg::matrix::MatrixSlice"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rulinalg/matrix/struct.MatrixSliceMut.html\" title=\"struct rulinalg::matrix::MatrixSliceMut\">MatrixSliceMut</a>&lt;'a, T&gt;","synthetic":true,"types":["rulinalg::matrix::MatrixSliceMut"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rulinalg/matrix/struct.Row.html\" title=\"struct rulinalg::matrix::Row\">Row</a>&lt;'a, T&gt;","synthetic":true,"types":["rulinalg::matrix::Row"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rulinalg/matrix/struct.RowMut.html\" title=\"struct rulinalg::matrix::RowMut\">RowMut</a>&lt;'a, T&gt;","synthetic":true,"types":["rulinalg::matrix::RowMut"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rulinalg/matrix/struct.Rows.html\" title=\"struct rulinalg::matrix::Rows\">Rows</a>&lt;'a, T&gt;","synthetic":true,"types":["rulinalg::matrix::Rows"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rulinalg/matrix/struct.RowsMut.html\" title=\"struct rulinalg::matrix::RowsMut\">RowsMut</a>&lt;'a, T&gt;","synthetic":true,"types":["rulinalg::matrix::RowsMut"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rulinalg/matrix/struct.Column.html\" title=\"struct rulinalg::matrix::Column\">Column</a>&lt;'a, T&gt;","synthetic":true,"types":["rulinalg::matrix::Column"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rulinalg/matrix/struct.ColumnMut.html\" title=\"struct rulinalg::matrix::ColumnMut\">ColumnMut</a>&lt;'a, T&gt;","synthetic":true,"types":["rulinalg::matrix::ColumnMut"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rulinalg/matrix/struct.Cols.html\" title=\"struct rulinalg::matrix::Cols\">Cols</a>&lt;'a, T&gt;","synthetic":true,"types":["rulinalg::matrix::Cols"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rulinalg/matrix/struct.ColsMut.html\" title=\"struct rulinalg::matrix::ColsMut\">ColsMut</a>&lt;'a, T&gt;","synthetic":true,"types":["rulinalg::matrix::ColsMut"]},{"text":"impl&lt;'a, T, M&gt; Freeze for <a class=\"struct\" href=\"rulinalg/matrix/struct.Diagonal.html\" title=\"struct rulinalg::matrix::Diagonal\">Diagonal</a>&lt;'a, T, M&gt;","synthetic":true,"types":["rulinalg::matrix::Diagonal"]},{"text":"impl&lt;'a, T, M&gt; Freeze for <a class=\"struct\" href=\"rulinalg/matrix/struct.DiagonalMut.html\" title=\"struct rulinalg::matrix::DiagonalMut\">DiagonalMut</a>&lt;'a, T, M&gt;","synthetic":true,"types":["rulinalg::matrix::DiagonalMut"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rulinalg/matrix/struct.SliceIter.html\" title=\"struct rulinalg::matrix::SliceIter\">SliceIter</a>&lt;'a, T&gt;","synthetic":true,"types":["rulinalg::matrix::SliceIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rulinalg/matrix/struct.SliceIterMut.html\" title=\"struct rulinalg::matrix::SliceIterMut\">SliceIterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["rulinalg::matrix::SliceIterMut"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rulinalg/matrix/enum.Parity.html\" title=\"enum rulinalg::matrix::Parity\">Parity</a>","synthetic":true,"types":["rulinalg::matrix::permutation_matrix::Parity"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rulinalg/matrix/enum.Axes.html\" title=\"enum rulinalg::matrix::Axes\">Axes</a>","synthetic":true,"types":["rulinalg::matrix::Axes"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rulinalg/matrix/enum.DiagOffset.html\" title=\"enum rulinalg::matrix::DiagOffset\">DiagOffset</a>","synthetic":true,"types":["rulinalg::matrix::DiagOffset"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rulinalg/matrix/decomposition/struct.HouseholderComposition.html\" title=\"struct rulinalg::matrix::decomposition::HouseholderComposition\">HouseholderComposition</a>&lt;'a, T&gt;","synthetic":true,"types":["rulinalg::matrix::decomposition::householder::HouseholderComposition"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rulinalg/matrix/decomposition/struct.PartialPivLu.html\" title=\"struct rulinalg::matrix::decomposition::PartialPivLu\">PartialPivLu</a>&lt;T&gt;","synthetic":true,"types":["rulinalg::matrix::decomposition::lu::PartialPivLu"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rulinalg/matrix/decomposition/struct.LUP.html\" title=\"struct rulinalg::matrix::decomposition::LUP\">LUP</a>&lt;T&gt;","synthetic":true,"types":["rulinalg::matrix::decomposition::lu::LUP"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rulinalg/matrix/decomposition/struct.FullPivLu.html\" title=\"struct rulinalg::matrix::decomposition::FullPivLu\">FullPivLu</a>&lt;T&gt;","synthetic":true,"types":["rulinalg::matrix::decomposition::lu::FullPivLu"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rulinalg/matrix/decomposition/struct.LUPQ.html\" title=\"struct rulinalg::matrix::decomposition::LUPQ\">LUPQ</a>&lt;T&gt;","synthetic":true,"types":["rulinalg::matrix::decomposition::lu::LUPQ"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rulinalg/matrix/decomposition/struct.Cholesky.html\" title=\"struct rulinalg::matrix::decomposition::Cholesky\">Cholesky</a>&lt;T&gt;","synthetic":true,"types":["rulinalg::matrix::decomposition::cholesky::Cholesky"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rulinalg/matrix/decomposition/struct.HouseholderQr.html\" title=\"struct rulinalg::matrix::decomposition::HouseholderQr\">HouseholderQr</a>&lt;T&gt;","synthetic":true,"types":["rulinalg::matrix::decomposition::qr::HouseholderQr"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rulinalg/matrix/decomposition/struct.QR.html\" title=\"struct rulinalg::matrix::decomposition::QR\">QR</a>&lt;T&gt;","synthetic":true,"types":["rulinalg::matrix::decomposition::qr::QR"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rulinalg/matrix/decomposition/struct.ThinQR.html\" title=\"struct rulinalg::matrix::decomposition::ThinQR\">ThinQR</a>&lt;T&gt;","synthetic":true,"types":["rulinalg::matrix::decomposition::qr::ThinQR"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rulinalg/error/struct.Error.html\" title=\"struct rulinalg::error::Error\">Error</a>","synthetic":true,"types":["rulinalg::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rulinalg/error/enum.ErrorKind.html\" title=\"enum rulinalg::error::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["rulinalg::error::ErrorKind"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rulinalg/vector/struct.Vector.html\" title=\"struct rulinalg::vector::Vector\">Vector</a>&lt;T&gt;","synthetic":true,"types":["rulinalg::vector::Vector"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rulinalg/ulp/enum.UlpComparisonResult.html\" title=\"enum rulinalg::ulp::UlpComparisonResult\">UlpComparisonResult</a>","synthetic":true,"types":["rulinalg::ulp::UlpComparisonResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rulinalg/norm/struct.Euclidean.html\" title=\"struct rulinalg::norm::Euclidean\">Euclidean</a>","synthetic":true,"types":["rulinalg::norm::Euclidean"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"rulinalg/norm/enum.Lp.html\" title=\"enum rulinalg::norm::Lp\">Lp</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rulinalg::norm::Lp"]}];
implementors["rustls"] = [{"text":"impl&lt;'a, S:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"rustls/struct.Stream.html\" title=\"struct rustls::Stream\">Stream</a>&lt;'a, S, T&gt;","synthetic":true,"types":["rustls::stream::Stream"]},{"text":"impl&lt;S, T&gt; Freeze for <a class=\"struct\" href=\"rustls/struct.StreamOwned.html\" title=\"struct rustls::StreamOwned\">StreamOwned</a>&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rustls::stream::StreamOwned"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.RootCertStore.html\" title=\"struct rustls::RootCertStore\">RootCertStore</a>","synthetic":true,"types":["rustls::anchors::RootCertStore"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.NoClientSessionStorage.html\" title=\"struct rustls::NoClientSessionStorage\">NoClientSessionStorage</a>","synthetic":true,"types":["rustls::client::handy::NoClientSessionStorage"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"rustls/struct.ClientSessionMemoryCache.html\" title=\"struct rustls::ClientSessionMemoryCache\">ClientSessionMemoryCache</a>","synthetic":true,"types":["rustls::client::handy::ClientSessionMemoryCache"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.ClientConfig.html\" title=\"struct rustls::ClientConfig\">ClientConfig</a>","synthetic":true,"types":["rustls::client::ClientConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.ClientSession.html\" title=\"struct rustls::ClientSession\">ClientSession</a>","synthetic":true,"types":["rustls::client::ClientSession"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"rustls/struct.WriteEarlyData.html\" title=\"struct rustls::WriteEarlyData\">WriteEarlyData</a>&lt;'a&gt;","synthetic":true,"types":["rustls::client::WriteEarlyData"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.NoServerSessionStorage.html\" title=\"struct rustls::NoServerSessionStorage\">NoServerSessionStorage</a>","synthetic":true,"types":["rustls::server::handy::NoServerSessionStorage"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"rustls/struct.ServerSessionMemoryCache.html\" title=\"struct rustls::ServerSessionMemoryCache\">ServerSessionMemoryCache</a>","synthetic":true,"types":["rustls::server::handy::ServerSessionMemoryCache"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.ServerConfig.html\" title=\"struct rustls::ServerConfig\">ServerConfig</a>","synthetic":true,"types":["rustls::server::ServerConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.ServerSession.html\" title=\"struct rustls::ServerSession\">ServerSession</a>","synthetic":true,"types":["rustls::server::ServerSession"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.ResolvesServerCertUsingSNI.html\" title=\"struct rustls::ResolvesServerCertUsingSNI\">ResolvesServerCertUsingSNI</a>","synthetic":true,"types":["rustls::server::handy::ResolvesServerCertUsingSNI"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.Ticketer.html\" title=\"struct rustls::Ticketer\">Ticketer</a>","synthetic":true,"types":["rustls::ticketer::Ticketer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.NoClientAuth.html\" title=\"struct rustls::NoClientAuth\">NoClientAuth</a>","synthetic":true,"types":["rustls::verify::NoClientAuth"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.AllowAnyAuthenticatedClient.html\" title=\"struct rustls::AllowAnyAuthenticatedClient\">AllowAnyAuthenticatedClient</a>","synthetic":true,"types":["rustls::verify::AllowAnyAuthenticatedClient"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.AllowAnyAnonymousOrAuthenticatedClient.html\" title=\"struct rustls::AllowAnyAnonymousOrAuthenticatedClient\">AllowAnyAnonymousOrAuthenticatedClient</a>","synthetic":true,"types":["rustls::verify::AllowAnyAnonymousOrAuthenticatedClient"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.SupportedCipherSuite.html\" title=\"struct rustls::SupportedCipherSuite\">SupportedCipherSuite</a>","synthetic":true,"types":["rustls::suites::SupportedCipherSuite"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.Certificate.html\" title=\"struct rustls::Certificate\">Certificate</a>","synthetic":true,"types":["rustls::key::Certificate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.PrivateKey.html\" title=\"struct rustls::PrivateKey\">PrivateKey</a>","synthetic":true,"types":["rustls::key::PrivateKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.NoKeyLog.html\" title=\"struct rustls::NoKeyLog\">NoKeyLog</a>","synthetic":true,"types":["rustls::keylog::NoKeyLog"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"rustls/struct.KeyLogFile.html\" title=\"struct rustls::KeyLogFile\">KeyLogFile</a>","synthetic":true,"types":["rustls::keylog::KeyLogFile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.ServerCertVerified.html\" title=\"struct rustls::ServerCertVerified\">ServerCertVerified</a>","synthetic":true,"types":["rustls::verify::ServerCertVerified"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/struct.ClientCertVerified.html\" title=\"struct rustls::ClientCertVerified\">ClientCertVerified</a>","synthetic":true,"types":["rustls::verify::ClientCertVerified"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"rustls/struct.DangerousClientConfig.html\" title=\"struct rustls::DangerousClientConfig\">DangerousClientConfig</a>&lt;'a&gt;","synthetic":true,"types":["rustls::client::danger::DangerousClientConfig"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/enum.ProtocolVersion.html\" title=\"enum rustls::ProtocolVersion\">ProtocolVersion</a>","synthetic":true,"types":["rustls::msgs::enums::ProtocolVersion"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/enum.SignatureScheme.html\" title=\"enum rustls::SignatureScheme\">SignatureScheme</a>","synthetic":true,"types":["rustls::msgs::enums::SignatureScheme"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/enum.CipherSuite.html\" title=\"enum rustls::CipherSuite\">CipherSuite</a>","synthetic":true,"types":["rustls::msgs::enums::CipherSuite"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/enum.TLSError.html\" title=\"enum rustls::TLSError\">TLSError</a>","synthetic":true,"types":["rustls::error::TLSError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/enum.BulkAlgorithm.html\" title=\"enum rustls::BulkAlgorithm\">BulkAlgorithm</a>","synthetic":true,"types":["rustls::suites::BulkAlgorithm"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/codec/struct.Reader.html\" title=\"struct rustls::internal::msgs::codec::Reader\">Reader</a>&lt;'a&gt;","synthetic":true,"types":["rustls::msgs::codec::Reader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/codec/struct.u24.html\" title=\"struct rustls::internal::msgs::codec::u24\">u24</a>","synthetic":true,"types":["rustls::msgs::codec::u24"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/base/struct.Payload.html\" title=\"struct rustls::internal::msgs::base::Payload\">Payload</a>","synthetic":true,"types":["rustls::msgs::base::Payload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/base/struct.PayloadU24.html\" title=\"struct rustls::internal::msgs::base::PayloadU24\">PayloadU24</a>","synthetic":true,"types":["rustls::msgs::base::PayloadU24"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/base/struct.PayloadU16.html\" title=\"struct rustls::internal::msgs::base::PayloadU16\">PayloadU16</a>","synthetic":true,"types":["rustls::msgs::base::PayloadU16"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/base/struct.PayloadU8.html\" title=\"struct rustls::internal::msgs::base::PayloadU8\">PayloadU8</a>","synthetic":true,"types":["rustls::msgs::base::PayloadU8"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.HashAlgorithm.html\" title=\"enum rustls::internal::msgs::enums::HashAlgorithm\">HashAlgorithm</a>","synthetic":true,"types":["rustls::msgs::enums::HashAlgorithm"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.SignatureAlgorithm.html\" title=\"enum rustls::internal::msgs::enums::SignatureAlgorithm\">SignatureAlgorithm</a>","synthetic":true,"types":["rustls::msgs::enums::SignatureAlgorithm"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.ClientCertificateType.html\" title=\"enum rustls::internal::msgs::enums::ClientCertificateType\">ClientCertificateType</a>","synthetic":true,"types":["rustls::msgs::enums::ClientCertificateType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.Compression.html\" title=\"enum rustls::internal::msgs::enums::Compression\">Compression</a>","synthetic":true,"types":["rustls::msgs::enums::Compression"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.ContentType.html\" title=\"enum rustls::internal::msgs::enums::ContentType\">ContentType</a>","synthetic":true,"types":["rustls::msgs::enums::ContentType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.HandshakeType.html\" title=\"enum rustls::internal::msgs::enums::HandshakeType\">HandshakeType</a>","synthetic":true,"types":["rustls::msgs::enums::HandshakeType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.AlertLevel.html\" title=\"enum rustls::internal::msgs::enums::AlertLevel\">AlertLevel</a>","synthetic":true,"types":["rustls::msgs::enums::AlertLevel"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.AlertDescription.html\" title=\"enum rustls::internal::msgs::enums::AlertDescription\">AlertDescription</a>","synthetic":true,"types":["rustls::msgs::enums::AlertDescription"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.HeartbeatMessageType.html\" title=\"enum rustls::internal::msgs::enums::HeartbeatMessageType\">HeartbeatMessageType</a>","synthetic":true,"types":["rustls::msgs::enums::HeartbeatMessageType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.ExtensionType.html\" title=\"enum rustls::internal::msgs::enums::ExtensionType\">ExtensionType</a>","synthetic":true,"types":["rustls::msgs::enums::ExtensionType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.ServerNameType.html\" title=\"enum rustls::internal::msgs::enums::ServerNameType\">ServerNameType</a>","synthetic":true,"types":["rustls::msgs::enums::ServerNameType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.NamedCurve.html\" title=\"enum rustls::internal::msgs::enums::NamedCurve\">NamedCurve</a>","synthetic":true,"types":["rustls::msgs::enums::NamedCurve"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.NamedGroup.html\" title=\"enum rustls::internal::msgs::enums::NamedGroup\">NamedGroup</a>","synthetic":true,"types":["rustls::msgs::enums::NamedGroup"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.ECPointFormat.html\" title=\"enum rustls::internal::msgs::enums::ECPointFormat\">ECPointFormat</a>","synthetic":true,"types":["rustls::msgs::enums::ECPointFormat"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.HeartbeatMode.html\" title=\"enum rustls::internal::msgs::enums::HeartbeatMode\">HeartbeatMode</a>","synthetic":true,"types":["rustls::msgs::enums::HeartbeatMode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.ECCurveType.html\" title=\"enum rustls::internal::msgs::enums::ECCurveType\">ECCurveType</a>","synthetic":true,"types":["rustls::msgs::enums::ECCurveType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.PSKKeyExchangeMode.html\" title=\"enum rustls::internal::msgs::enums::PSKKeyExchangeMode\">PSKKeyExchangeMode</a>","synthetic":true,"types":["rustls::msgs::enums::PSKKeyExchangeMode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.KeyUpdateRequest.html\" title=\"enum rustls::internal::msgs::enums::KeyUpdateRequest\">KeyUpdateRequest</a>","synthetic":true,"types":["rustls::msgs::enums::KeyUpdateRequest"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/enums/enum.CertificateStatusType.html\" title=\"enum rustls::internal::msgs::enums::CertificateStatusType\">CertificateStatusType</a>","synthetic":true,"types":["rustls::msgs::enums::CertificateStatusType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/alert/struct.AlertMessagePayload.html\" title=\"struct rustls::internal::msgs::alert::AlertMessagePayload\">AlertMessagePayload</a>","synthetic":true,"types":["rustls::msgs::alert::AlertMessagePayload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.Random.html\" title=\"struct rustls::internal::msgs::handshake::Random\">Random</a>","synthetic":true,"types":["rustls::msgs::handshake::Random"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.SessionID.html\" title=\"struct rustls::internal::msgs::handshake::SessionID\">SessionID</a>","synthetic":true,"types":["rustls::msgs::handshake::SessionID"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.UnknownExtension.html\" title=\"struct rustls::internal::msgs::handshake::UnknownExtension\">UnknownExtension</a>","synthetic":true,"types":["rustls::msgs::handshake::UnknownExtension"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.ServerName.html\" title=\"struct rustls::internal::msgs::handshake::ServerName\">ServerName</a>","synthetic":true,"types":["rustls::msgs::handshake::ServerName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.KeyShareEntry.html\" title=\"struct rustls::internal::msgs::handshake::KeyShareEntry\">KeyShareEntry</a>","synthetic":true,"types":["rustls::msgs::handshake::KeyShareEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.PresharedKeyIdentity.html\" title=\"struct rustls::internal::msgs::handshake::PresharedKeyIdentity\">PresharedKeyIdentity</a>","synthetic":true,"types":["rustls::msgs::handshake::PresharedKeyIdentity"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.PresharedKeyOffer.html\" title=\"struct rustls::internal::msgs::handshake::PresharedKeyOffer\">PresharedKeyOffer</a>","synthetic":true,"types":["rustls::msgs::handshake::PresharedKeyOffer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.OCSPCertificateStatusRequest.html\" title=\"struct rustls::internal::msgs::handshake::OCSPCertificateStatusRequest\">OCSPCertificateStatusRequest</a>","synthetic":true,"types":["rustls::msgs::handshake::OCSPCertificateStatusRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.ClientHelloPayload.html\" title=\"struct rustls::internal::msgs::handshake::ClientHelloPayload\">ClientHelloPayload</a>","synthetic":true,"types":["rustls::msgs::handshake::ClientHelloPayload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.HelloRetryRequest.html\" title=\"struct rustls::internal::msgs::handshake::HelloRetryRequest\">HelloRetryRequest</a>","synthetic":true,"types":["rustls::msgs::handshake::HelloRetryRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.ServerHelloPayload.html\" title=\"struct rustls::internal::msgs::handshake::ServerHelloPayload\">ServerHelloPayload</a>","synthetic":true,"types":["rustls::msgs::handshake::ServerHelloPayload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.CertificateEntry.html\" title=\"struct rustls::internal::msgs::handshake::CertificateEntry\">CertificateEntry</a>","synthetic":true,"types":["rustls::msgs::handshake::CertificateEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.CertificatePayloadTLS13.html\" title=\"struct rustls::internal::msgs::handshake::CertificatePayloadTLS13\">CertificatePayloadTLS13</a>","synthetic":true,"types":["rustls::msgs::handshake::CertificatePayloadTLS13"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.ECParameters.html\" title=\"struct rustls::internal::msgs::handshake::ECParameters\">ECParameters</a>","synthetic":true,"types":["rustls::msgs::handshake::ECParameters"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.DigitallySignedStruct.html\" title=\"struct rustls::internal::msgs::handshake::DigitallySignedStruct\">DigitallySignedStruct</a>","synthetic":true,"types":["rustls::msgs::handshake::DigitallySignedStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.ClientECDHParams.html\" title=\"struct rustls::internal::msgs::handshake::ClientECDHParams\">ClientECDHParams</a>","synthetic":true,"types":["rustls::msgs::handshake::ClientECDHParams"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.ServerECDHParams.html\" title=\"struct rustls::internal::msgs::handshake::ServerECDHParams\">ServerECDHParams</a>","synthetic":true,"types":["rustls::msgs::handshake::ServerECDHParams"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.ECDHEServerKeyExchange.html\" title=\"struct rustls::internal::msgs::handshake::ECDHEServerKeyExchange\">ECDHEServerKeyExchange</a>","synthetic":true,"types":["rustls::msgs::handshake::ECDHEServerKeyExchange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.CertificateRequestPayload.html\" title=\"struct rustls::internal::msgs::handshake::CertificateRequestPayload\">CertificateRequestPayload</a>","synthetic":true,"types":["rustls::msgs::handshake::CertificateRequestPayload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.CertificateRequestPayloadTLS13.html\" title=\"struct rustls::internal::msgs::handshake::CertificateRequestPayloadTLS13\">CertificateRequestPayloadTLS13</a>","synthetic":true,"types":["rustls::msgs::handshake::CertificateRequestPayloadTLS13"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.NewSessionTicketPayload.html\" title=\"struct rustls::internal::msgs::handshake::NewSessionTicketPayload\">NewSessionTicketPayload</a>","synthetic":true,"types":["rustls::msgs::handshake::NewSessionTicketPayload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.NewSessionTicketPayloadTLS13.html\" title=\"struct rustls::internal::msgs::handshake::NewSessionTicketPayloadTLS13\">NewSessionTicketPayloadTLS13</a>","synthetic":true,"types":["rustls::msgs::handshake::NewSessionTicketPayloadTLS13"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.CertificateStatus.html\" title=\"struct rustls::internal::msgs::handshake::CertificateStatus\">CertificateStatus</a>","synthetic":true,"types":["rustls::msgs::handshake::CertificateStatus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/handshake/struct.HandshakeMessagePayload.html\" title=\"struct rustls::internal::msgs::handshake::HandshakeMessagePayload\">HandshakeMessagePayload</a>","synthetic":true,"types":["rustls::msgs::handshake::HandshakeMessagePayload"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/handshake/enum.ServerNamePayload.html\" title=\"enum rustls::internal::msgs::handshake::ServerNamePayload\">ServerNamePayload</a>","synthetic":true,"types":["rustls::msgs::handshake::ServerNamePayload"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/handshake/enum.CertificateStatusRequest.html\" title=\"enum rustls::internal::msgs::handshake::CertificateStatusRequest\">CertificateStatusRequest</a>","synthetic":true,"types":["rustls::msgs::handshake::CertificateStatusRequest"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/handshake/enum.ClientExtension.html\" title=\"enum rustls::internal::msgs::handshake::ClientExtension\">ClientExtension</a>","synthetic":true,"types":["rustls::msgs::handshake::ClientExtension"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/handshake/enum.ServerExtension.html\" title=\"enum rustls::internal::msgs::handshake::ServerExtension\">ServerExtension</a>","synthetic":true,"types":["rustls::msgs::handshake::ServerExtension"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/handshake/enum.HelloRetryExtension.html\" title=\"enum rustls::internal::msgs::handshake::HelloRetryExtension\">HelloRetryExtension</a>","synthetic":true,"types":["rustls::msgs::handshake::HelloRetryExtension"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/handshake/enum.CertificateExtension.html\" title=\"enum rustls::internal::msgs::handshake::CertificateExtension\">CertificateExtension</a>","synthetic":true,"types":["rustls::msgs::handshake::CertificateExtension"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/handshake/enum.KeyExchangeAlgorithm.html\" title=\"enum rustls::internal::msgs::handshake::KeyExchangeAlgorithm\">KeyExchangeAlgorithm</a>","synthetic":true,"types":["rustls::msgs::handshake::KeyExchangeAlgorithm"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/handshake/enum.ServerKeyExchangePayload.html\" title=\"enum rustls::internal::msgs::handshake::ServerKeyExchangePayload\">ServerKeyExchangePayload</a>","synthetic":true,"types":["rustls::msgs::handshake::ServerKeyExchangePayload"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/handshake/enum.CertReqExtension.html\" title=\"enum rustls::internal::msgs::handshake::CertReqExtension\">CertReqExtension</a>","synthetic":true,"types":["rustls::msgs::handshake::CertReqExtension"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/handshake/enum.NewSessionTicketExtension.html\" title=\"enum rustls::internal::msgs::handshake::NewSessionTicketExtension\">NewSessionTicketExtension</a>","synthetic":true,"types":["rustls::msgs::handshake::NewSessionTicketExtension"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/handshake/enum.HandshakePayload.html\" title=\"enum rustls::internal::msgs::handshake::HandshakePayload\">HandshakePayload</a>","synthetic":true,"types":["rustls::msgs::handshake::HandshakePayload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/ccs/struct.ChangeCipherSpecPayload.html\" title=\"struct rustls::internal::msgs::ccs::ChangeCipherSpecPayload\">ChangeCipherSpecPayload</a>","synthetic":true,"types":["rustls::msgs::ccs::ChangeCipherSpecPayload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/message/struct.Message.html\" title=\"struct rustls::internal::msgs::message::Message\">Message</a>","synthetic":true,"types":["rustls::msgs::message::Message"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/message/struct.BorrowMessage.html\" title=\"struct rustls::internal::msgs::message::BorrowMessage\">BorrowMessage</a>&lt;'a&gt;","synthetic":true,"types":["rustls::msgs::message::BorrowMessage"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustls/internal/msgs/message/enum.MessagePayload.html\" title=\"enum rustls::internal::msgs::message::MessagePayload\">MessagePayload</a>","synthetic":true,"types":["rustls::msgs::message::MessagePayload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/persist/struct.ClientSessionKey.html\" title=\"struct rustls::internal::msgs::persist::ClientSessionKey\">ClientSessionKey</a>","synthetic":true,"types":["rustls::msgs::persist::ClientSessionKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/persist/struct.ClientSessionValue.html\" title=\"struct rustls::internal::msgs::persist::ClientSessionValue\">ClientSessionValue</a>","synthetic":true,"types":["rustls::msgs::persist::ClientSessionValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/persist/struct.ServerSessionValue.html\" title=\"struct rustls::internal::msgs::persist::ServerSessionValue\">ServerSessionValue</a>","synthetic":true,"types":["rustls::msgs::persist::ServerSessionValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/deframer/struct.MessageDeframer.html\" title=\"struct rustls::internal::msgs::deframer::MessageDeframer\">MessageDeframer</a>","synthetic":true,"types":["rustls::msgs::deframer::MessageDeframer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/fragmenter/struct.MessageFragmenter.html\" title=\"struct rustls::internal::msgs::fragmenter::MessageFragmenter\">MessageFragmenter</a>","synthetic":true,"types":["rustls::msgs::fragmenter::MessageFragmenter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/internal/msgs/hsjoiner/struct.HandshakeJoiner.html\" title=\"struct rustls::internal::msgs::hsjoiner::HandshakeJoiner\">HandshakeJoiner</a>","synthetic":true,"types":["rustls::msgs::hsjoiner::HandshakeJoiner"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/sign/struct.CertifiedKey.html\" title=\"struct rustls::sign::CertifiedKey\">CertifiedKey</a>","synthetic":true,"types":["rustls::sign::CertifiedKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustls/sign/struct.RSASigningKey.html\" title=\"struct rustls::sign::RSASigningKey\">RSASigningKey</a>","synthetic":true,"types":["rustls::sign::RSASigningKey"]}];
implementors["rusty_leveldb"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_leveldb/struct.DefaultCmp.html\" title=\"struct rusty_leveldb::DefaultCmp\">DefaultCmp</a>","synthetic":true,"types":["rusty_leveldb::cmp::DefaultCmp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_leveldb/struct.DBIterator.html\" title=\"struct rusty_leveldb::DBIterator\">DBIterator</a>","synthetic":true,"types":["rusty_leveldb::db_iter::DBIterator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_leveldb/struct.Status.html\" title=\"struct rusty_leveldb::Status\">Status</a>","synthetic":true,"types":["rusty_leveldb::error::Status"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_leveldb/struct.BloomPolicy.html\" title=\"struct rusty_leveldb::BloomPolicy\">BloomPolicy</a>","synthetic":true,"types":["rusty_leveldb::filter::BloomPolicy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_leveldb/struct.MemEnv.html\" title=\"struct rusty_leveldb::MemEnv\">MemEnv</a>","synthetic":true,"types":["rusty_leveldb::mem_env::MemEnv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_leveldb/struct.Options.html\" title=\"struct rusty_leveldb::Options\">Options</a>","synthetic":true,"types":["rusty_leveldb::options::Options"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_leveldb/struct.SkipMap.html\" title=\"struct rusty_leveldb::SkipMap\">SkipMap</a>","synthetic":true,"types":["rusty_leveldb::skipmap::SkipMap"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_leveldb/struct.WriteBatch.html\" title=\"struct rusty_leveldb::WriteBatch\">WriteBatch</a>","synthetic":true,"types":["rusty_leveldb::write_batch::WriteBatch"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_leveldb/struct.DB.html\" title=\"struct rusty_leveldb::DB\">DB</a>","synthetic":true,"types":["rusty_leveldb::db_impl::DB"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_leveldb/struct.PosixDiskEnv.html\" title=\"struct rusty_leveldb::PosixDiskEnv\">PosixDiskEnv</a>","synthetic":true,"types":["rusty_leveldb::disk_env::PosixDiskEnv"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rusty_leveldb/enum.StatusCode.html\" title=\"enum rusty_leveldb::StatusCode\">StatusCode</a>","synthetic":true,"types":["rusty_leveldb::error::StatusCode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rusty_leveldb/enum.CompressionType.html\" title=\"enum rusty_leveldb::CompressionType\">CompressionType</a>","synthetic":true,"types":["rusty_leveldb::options::CompressionType"]}];
implementors["rusty_machine"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rusty_machine/data/transforms/minmax/struct.MinMaxFitter.html\" title=\"struct rusty_machine::data::transforms::minmax::MinMaxFitter\">MinMaxFitter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rusty_machine::data::transforms::minmax::MinMaxFitter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rusty_machine/data/transforms/minmax/struct.MinMaxScaler.html\" title=\"struct rusty_machine::data::transforms::minmax::MinMaxScaler\">MinMaxScaler</a>&lt;T&gt;","synthetic":true,"types":["rusty_machine::data::transforms::minmax::MinMaxScaler"]},{"text":"impl&lt;T, M&gt; Freeze for <a class=\"struct\" href=\"rusty_machine/data/transforms/normalize/struct.Normalizer.html\" title=\"struct rusty_machine::data::transforms::normalize::Normalizer\">Normalizer</a>&lt;T, M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,&nbsp;</span>","synthetic":true,"types":["rusty_machine::data::transforms::normalize::Normalizer"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rusty_machine/data/transforms/standardize/struct.StandardizerFitter.html\" title=\"struct rusty_machine::data::transforms::standardize::StandardizerFitter\">StandardizerFitter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rusty_machine::data::transforms::standardize::StandardizerFitter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rusty_machine/data/transforms/standardize/struct.Standardizer.html\" title=\"struct rusty_machine::data::transforms::standardize::Standardizer\">Standardizer</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rusty_machine::data::transforms::standardize::Standardizer"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"rusty_machine/data/transforms/shuffle/struct.Shuffler.html\" title=\"struct rusty_machine::data::transforms::shuffle::Shuffler\">Shuffler</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["rusty_machine::data::transforms::shuffle::Shuffler"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/dbscan/struct.DBSCAN.html\" title=\"struct rusty_machine::learning::dbscan::DBSCAN\">DBSCAN</a>","synthetic":true,"types":["rusty_machine::learning::dbscan::DBSCAN"]},{"text":"impl&lt;C&gt; Freeze for <a class=\"struct\" href=\"rusty_machine/learning/glm/struct.GenLinearModel.html\" title=\"struct rusty_machine::learning::glm::GenLinearModel\">GenLinearModel</a>&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":["rusty_machine::learning::glm::GenLinearModel"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/glm/struct.Logit.html\" title=\"struct rusty_machine::learning::glm::Logit\">Logit</a>","synthetic":true,"types":["rusty_machine::learning::glm::Logit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/glm/struct.Log.html\" title=\"struct rusty_machine::learning::glm::Log\">Log</a>","synthetic":true,"types":["rusty_machine::learning::glm::Log"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/glm/struct.Identity.html\" title=\"struct rusty_machine::learning::glm::Identity\">Identity</a>","synthetic":true,"types":["rusty_machine::learning::glm::Identity"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/glm/struct.Bernoulli.html\" title=\"struct rusty_machine::learning::glm::Bernoulli\">Bernoulli</a>","synthetic":true,"types":["rusty_machine::learning::glm::Bernoulli"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/glm/struct.Binomial.html\" title=\"struct rusty_machine::learning::glm::Binomial\">Binomial</a>","synthetic":true,"types":["rusty_machine::learning::glm::Binomial"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/glm/struct.Normal.html\" title=\"struct rusty_machine::learning::glm::Normal\">Normal</a>","synthetic":true,"types":["rusty_machine::learning::glm::Normal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/glm/struct.Poisson.html\" title=\"struct rusty_machine::learning::glm::Poisson\">Poisson</a>","synthetic":true,"types":["rusty_machine::learning::glm::Poisson"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/gmm/struct.GaussianMixtureModel.html\" title=\"struct rusty_machine::learning::gmm::GaussianMixtureModel\">GaussianMixtureModel</a>","synthetic":true,"types":["rusty_machine::learning::gmm::GaussianMixtureModel"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rusty_machine/learning/gmm/enum.CovOption.html\" title=\"enum rusty_machine::learning::gmm::CovOption\">CovOption</a>","synthetic":true,"types":["rusty_machine::learning::gmm::CovOption"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/lin_reg/struct.LinRegressor.html\" title=\"struct rusty_machine::learning::lin_reg::LinRegressor\">LinRegressor</a>","synthetic":true,"types":["rusty_machine::learning::lin_reg::LinRegressor"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"rusty_machine/learning/logistic_reg/struct.LogisticRegressor.html\" title=\"struct rusty_machine::learning::logistic_reg::LogisticRegressor\">LogisticRegressor</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["rusty_machine::learning::logistic_reg::LogisticRegressor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/logistic_reg/struct.BaseLogisticRegressor.html\" title=\"struct rusty_machine::learning::logistic_reg::BaseLogisticRegressor\">BaseLogisticRegressor</a>","synthetic":true,"types":["rusty_machine::learning::logistic_reg::BaseLogisticRegressor"]},{"text":"impl&lt;InitAlg&gt; Freeze for <a class=\"struct\" href=\"rusty_machine/learning/k_means/struct.KMeansClassifier.html\" title=\"struct rusty_machine::learning::k_means::KMeansClassifier\">KMeansClassifier</a>&lt;InitAlg&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;InitAlg: Freeze,&nbsp;</span>","synthetic":true,"types":["rusty_machine::learning::k_means::KMeansClassifier"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/k_means/struct.Forgy.html\" title=\"struct rusty_machine::learning::k_means::Forgy\">Forgy</a>","synthetic":true,"types":["rusty_machine::learning::k_means::Forgy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/k_means/struct.RandomPartition.html\" title=\"struct rusty_machine::learning::k_means::RandomPartition\">RandomPartition</a>","synthetic":true,"types":["rusty_machine::learning::k_means::RandomPartition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/k_means/struct.KPlusPlus.html\" title=\"struct rusty_machine::learning::k_means::KPlusPlus\">KPlusPlus</a>","synthetic":true,"types":["rusty_machine::learning::k_means::KPlusPlus"]},{"text":"impl&lt;T, A&gt; Freeze for <a class=\"struct\" href=\"rusty_machine/learning/nnet/struct.NeuralNet.html\" title=\"struct rusty_machine::learning::nnet::NeuralNet\">NeuralNet</a>&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rusty_machine::learning::nnet::NeuralNet"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rusty_machine/learning/nnet/struct.BaseNeuralNet.html\" title=\"struct rusty_machine::learning::nnet::BaseNeuralNet\">BaseNeuralNet</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rusty_machine::learning::nnet::BaseNeuralNet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/nnet/struct.BCECriterion.html\" title=\"struct rusty_machine::learning::nnet::BCECriterion\">BCECriterion</a>","synthetic":true,"types":["rusty_machine::learning::nnet::BCECriterion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/nnet/struct.MSECriterion.html\" title=\"struct rusty_machine::learning::nnet::MSECriterion\">MSECriterion</a>","synthetic":true,"types":["rusty_machine::learning::nnet::MSECriterion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/nnet/net_layer/struct.Linear.html\" title=\"struct rusty_machine::learning::nnet::net_layer::Linear\">Linear</a>","synthetic":true,"types":["rusty_machine::learning::nnet::net_layer::Linear"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/gp/struct.ConstMean.html\" title=\"struct rusty_machine::learning::gp::ConstMean\">ConstMean</a>","synthetic":true,"types":["rusty_machine::learning::gp::ConstMean"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"rusty_machine/learning/gp/struct.GaussianProcess.html\" title=\"struct rusty_machine::learning::gp::GaussianProcess\">GaussianProcess</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["rusty_machine::learning::gp::GaussianProcess"]},{"text":"impl&lt;K&gt; Freeze for <a class=\"struct\" href=\"rusty_machine/learning/svm/struct.SVM.html\" title=\"struct rusty_machine::learning::svm::SVM\">SVM</a>&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["rusty_machine::learning::svm::SVM"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rusty_machine/learning/naive_bayes/struct.NaiveBayes.html\" title=\"struct rusty_machine::learning::naive_bayes::NaiveBayes\">NaiveBayes</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rusty_machine::learning::naive_bayes::NaiveBayes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/naive_bayes/struct.Gaussian.html\" title=\"struct rusty_machine::learning::naive_bayes::Gaussian\">Gaussian</a>","synthetic":true,"types":["rusty_machine::learning::naive_bayes::Gaussian"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/naive_bayes/struct.Bernoulli.html\" title=\"struct rusty_machine::learning::naive_bayes::Bernoulli\">Bernoulli</a>","synthetic":true,"types":["rusty_machine::learning::naive_bayes::Bernoulli"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/naive_bayes/struct.Multinomial.html\" title=\"struct rusty_machine::learning::naive_bayes::Multinomial\">Multinomial</a>","synthetic":true,"types":["rusty_machine::learning::naive_bayes::Multinomial"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/knn/struct.BruteForce.html\" title=\"struct rusty_machine::learning::knn::BruteForce\">BruteForce</a>","synthetic":true,"types":["rusty_machine::learning::knn::brute_force::BruteForce"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"rusty_machine/learning/knn/struct.KNNClassifier.html\" title=\"struct rusty_machine::learning::knn::KNNClassifier\">KNNClassifier</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["rusty_machine::learning::knn::KNNClassifier"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/pca/struct.PCA.html\" title=\"struct rusty_machine::learning::pca::PCA\">PCA</a>","synthetic":true,"types":["rusty_machine::learning::pca::PCA"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/error/struct.Error.html\" title=\"struct rusty_machine::learning::error::Error\">Error</a>","synthetic":true,"types":["rusty_machine::learning::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rusty_machine/learning/error/enum.ErrorKind.html\" title=\"enum rusty_machine::learning::error::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["rusty_machine::learning::error::ErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/optim/grad_desc/struct.GradientDesc.html\" title=\"struct rusty_machine::learning::optim::grad_desc::GradientDesc\">GradientDesc</a>","synthetic":true,"types":["rusty_machine::learning::optim::grad_desc::GradientDesc"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/optim/grad_desc/struct.StochasticGD.html\" title=\"struct rusty_machine::learning::optim::grad_desc::StochasticGD\">StochasticGD</a>","synthetic":true,"types":["rusty_machine::learning::optim::grad_desc::StochasticGD"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/optim/grad_desc/struct.AdaGrad.html\" title=\"struct rusty_machine::learning::optim::grad_desc::AdaGrad\">AdaGrad</a>","synthetic":true,"types":["rusty_machine::learning::optim::grad_desc::AdaGrad"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/optim/grad_desc/struct.RMSProp.html\" title=\"struct rusty_machine::learning::optim::grad_desc::RMSProp\">RMSProp</a>","synthetic":true,"types":["rusty_machine::learning::optim::grad_desc::RMSProp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/optim/fmincg/struct.ConjugateGD.html\" title=\"struct rusty_machine::learning::optim::fmincg::ConjugateGD\">ConjugateGD</a>","synthetic":true,"types":["rusty_machine::learning::optim::fmincg::ConjugateGD"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/toolkit/activ_fn/struct.Sigmoid.html\" title=\"struct rusty_machine::learning::toolkit::activ_fn::Sigmoid\">Sigmoid</a>","synthetic":true,"types":["rusty_machine::learning::toolkit::activ_fn::Sigmoid"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/toolkit/activ_fn/struct.Linear.html\" title=\"struct rusty_machine::learning::toolkit::activ_fn::Linear\">Linear</a>","synthetic":true,"types":["rusty_machine::learning::toolkit::activ_fn::Linear"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/toolkit/activ_fn/struct.Exp.html\" title=\"struct rusty_machine::learning::toolkit::activ_fn::Exp\">Exp</a>","synthetic":true,"types":["rusty_machine::learning::toolkit::activ_fn::Exp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/toolkit/activ_fn/struct.Tanh.html\" title=\"struct rusty_machine::learning::toolkit::activ_fn::Tanh\">Tanh</a>","synthetic":true,"types":["rusty_machine::learning::toolkit::activ_fn::Tanh"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/toolkit/cost_fn/struct.MeanSqError.html\" title=\"struct rusty_machine::learning::toolkit::cost_fn::MeanSqError\">MeanSqError</a>","synthetic":true,"types":["rusty_machine::learning::toolkit::cost_fn::MeanSqError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/toolkit/cost_fn/struct.CrossEntropyError.html\" title=\"struct rusty_machine::learning::toolkit::cost_fn::CrossEntropyError\">CrossEntropyError</a>","synthetic":true,"types":["rusty_machine::learning::toolkit::cost_fn::CrossEntropyError"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"rusty_machine/learning/toolkit/kernel/struct.KernelSum.html\" title=\"struct rusty_machine::learning::toolkit::kernel::KernelSum\">KernelSum</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["rusty_machine::learning::toolkit::kernel::KernelSum"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"rusty_machine/learning/toolkit/kernel/struct.KernelProd.html\" title=\"struct rusty_machine::learning::toolkit::kernel::KernelProd\">KernelProd</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["rusty_machine::learning::toolkit::kernel::KernelProd"]},{"text":"impl&lt;K&gt; Freeze for <a class=\"struct\" href=\"rusty_machine/learning/toolkit/kernel/struct.KernelArith.html\" title=\"struct rusty_machine::learning::toolkit::kernel::KernelArith\">KernelArith</a>&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["rusty_machine::learning::toolkit::kernel::KernelArith"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/toolkit/kernel/struct.Linear.html\" title=\"struct rusty_machine::learning::toolkit::kernel::Linear\">Linear</a>","synthetic":true,"types":["rusty_machine::learning::toolkit::kernel::Linear"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/toolkit/kernel/struct.Polynomial.html\" title=\"struct rusty_machine::learning::toolkit::kernel::Polynomial\">Polynomial</a>","synthetic":true,"types":["rusty_machine::learning::toolkit::kernel::Polynomial"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/toolkit/kernel/struct.SquaredExp.html\" title=\"struct rusty_machine::learning::toolkit::kernel::SquaredExp\">SquaredExp</a>","synthetic":true,"types":["rusty_machine::learning::toolkit::kernel::SquaredExp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/toolkit/kernel/struct.Exponential.html\" title=\"struct rusty_machine::learning::toolkit::kernel::Exponential\">Exponential</a>","synthetic":true,"types":["rusty_machine::learning::toolkit::kernel::Exponential"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/toolkit/kernel/struct.HyperTan.html\" title=\"struct rusty_machine::learning::toolkit::kernel::HyperTan\">HyperTan</a>","synthetic":true,"types":["rusty_machine::learning::toolkit::kernel::HyperTan"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/toolkit/kernel/struct.Multiquadric.html\" title=\"struct rusty_machine::learning::toolkit::kernel::Multiquadric\">Multiquadric</a>","synthetic":true,"types":["rusty_machine::learning::toolkit::kernel::Multiquadric"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rusty_machine/learning/toolkit/kernel/struct.RationalQuadratic.html\" title=\"struct rusty_machine::learning::toolkit::kernel::RationalQuadratic\">RationalQuadratic</a>","synthetic":true,"types":["rusty_machine::learning::toolkit::kernel::RationalQuadratic"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"rusty_machine/learning/toolkit/regularization/enum.Regularization.html\" title=\"enum rusty_machine::learning::toolkit::regularization::Regularization\">Regularization</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rusty_machine::learning::toolkit::regularization::Regularization"]}];
implementors["ryu"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ryu/struct.Buffer.html\" title=\"struct ryu::Buffer\">Buffer</a>","synthetic":true,"types":["ryu::buffer::Buffer"]}];
implementors["sct"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sct/struct.Log.html\" title=\"struct sct::Log\">Log</a>&lt;'a&gt;","synthetic":true,"types":["sct::Log"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sct/enum.Error.html\" title=\"enum sct::Error\">Error</a>","synthetic":true,"types":["sct::Error"]}];
implementors["serde"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"serde/de/struct.IgnoredAny.html\" title=\"struct serde::de::IgnoredAny\">IgnoredAny</a>","synthetic":true,"types":["serde::de::ignored_any::IgnoredAny"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"serde/de/enum.Unexpected.html\" title=\"enum serde::de::Unexpected\">Unexpected</a>&lt;'a&gt;","synthetic":true,"types":["serde::de::Unexpected"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde/de/value/struct.Error.html\" title=\"struct serde::de::value::Error\">Error</a>","synthetic":true,"types":["serde::de::value::Error"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.UnitDeserializer.html\" title=\"struct serde::de::value::UnitDeserializer\">UnitDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::UnitDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BoolDeserializer.html\" title=\"struct serde::de::value::BoolDeserializer\">BoolDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::BoolDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I8Deserializer.html\" title=\"struct serde::de::value::I8Deserializer\">I8Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I8Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I16Deserializer.html\" title=\"struct serde::de::value::I16Deserializer\">I16Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I16Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I32Deserializer.html\" title=\"struct serde::de::value::I32Deserializer\">I32Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I32Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I64Deserializer.html\" title=\"struct serde::de::value::I64Deserializer\">I64Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I64Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.IsizeDeserializer.html\" title=\"struct serde::de::value::IsizeDeserializer\">IsizeDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::IsizeDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U8Deserializer.html\" title=\"struct serde::de::value::U8Deserializer\">U8Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U8Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U16Deserializer.html\" title=\"struct serde::de::value::U16Deserializer\">U16Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U16Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U64Deserializer.html\" title=\"struct serde::de::value::U64Deserializer\">U64Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U64Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.UsizeDeserializer.html\" title=\"struct serde::de::value::UsizeDeserializer\">UsizeDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::UsizeDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.F32Deserializer.html\" title=\"struct serde::de::value::F32Deserializer\">F32Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::F32Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.F64Deserializer.html\" title=\"struct serde::de::value::F64Deserializer\">F64Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::F64Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.CharDeserializer.html\" title=\"struct serde::de::value::CharDeserializer\">CharDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::CharDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I128Deserializer.html\" title=\"struct serde::de::value::I128Deserializer\">I128Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I128Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U128Deserializer.html\" title=\"struct serde::de::value::U128Deserializer\">U128Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U128Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U32Deserializer.html\" title=\"struct serde::de::value::U32Deserializer\">U32Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U32Deserializer"]},{"text":"impl&lt;'a, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.StrDeserializer.html\" title=\"struct serde::de::value::StrDeserializer\">StrDeserializer</a>&lt;'a, E&gt;","synthetic":true,"types":["serde::de::value::StrDeserializer"]},{"text":"impl&lt;'de, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BorrowedStrDeserializer.html\" title=\"struct serde::de::value::BorrowedStrDeserializer\">BorrowedStrDeserializer</a>&lt;'de, E&gt;","synthetic":true,"types":["serde::de::value::BorrowedStrDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.StringDeserializer.html\" title=\"struct serde::de::value::StringDeserializer\">StringDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::StringDeserializer"]},{"text":"impl&lt;'a, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.CowStrDeserializer.html\" title=\"struct serde::de::value::CowStrDeserializer\">CowStrDeserializer</a>&lt;'a, E&gt;","synthetic":true,"types":["serde::de::value::CowStrDeserializer"]},{"text":"impl&lt;'de, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BorrowedBytesDeserializer.html\" title=\"struct serde::de::value::BorrowedBytesDeserializer\">BorrowedBytesDeserializer</a>&lt;'de, E&gt;","synthetic":true,"types":["serde::de::value::BorrowedBytesDeserializer"]},{"text":"impl&lt;I, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.SeqDeserializer.html\" title=\"struct serde::de::value::SeqDeserializer\">SeqDeserializer</a>&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["serde::de::value::SeqDeserializer"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.SeqAccessDeserializer.html\" title=\"struct serde::de::value::SeqAccessDeserializer\">SeqAccessDeserializer</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["serde::de::value::SeqAccessDeserializer"]},{"text":"impl&lt;'de, I, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.MapDeserializer.html\" title=\"struct serde::de::value::MapDeserializer\">MapDeserializer</a>&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a> as Pair&gt;::Second: Freeze,&nbsp;</span>","synthetic":true,"types":["serde::de::value::MapDeserializer"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.MapAccessDeserializer.html\" title=\"struct serde::de::value::MapAccessDeserializer\">MapAccessDeserializer</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["serde::de::value::MapAccessDeserializer"]},{"text":"impl&lt;Ok, Error&gt; Freeze for <a class=\"struct\" href=\"serde/ser/struct.Impossible.html\" title=\"struct serde::ser::Impossible\">Impossible</a>&lt;Ok, Error&gt;","synthetic":true,"types":["serde::ser::impossible::Impossible"]}];
implementors["serde_json"] = [{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"serde_json/de/struct.Deserializer.html\" title=\"struct serde_json::de::Deserializer\">Deserializer</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_json::de::Deserializer"]},{"text":"impl&lt;'de, R, T&gt; Freeze for <a class=\"struct\" href=\"serde_json/de/struct.StreamDeserializer.html\" title=\"struct serde_json::de::StreamDeserializer\">StreamDeserializer</a>&lt;'de, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_json::de::StreamDeserializer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_json/error/struct.Error.html\" title=\"struct serde_json::error::Error\">Error</a>","synthetic":true,"types":["serde_json::error::Error"]},{"text":"impl&lt;W, F&gt; Freeze for <a class=\"struct\" href=\"serde_json/ser/struct.Serializer.html\" title=\"struct serde_json::ser::Serializer\">Serializer</a>&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_json::ser::Serializer"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.Map.html\" title=\"struct serde_json::map::Map\">Map</a>&lt;K, V&gt;","synthetic":true,"types":["serde_json::map::Map"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_json/struct.Number.html\" title=\"struct serde_json::Number\">Number</a>","synthetic":true,"types":["serde_json::number::Number"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>","synthetic":true,"types":["serde_json::value::Value"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"serde_json/de/struct.IoRead.html\" title=\"struct serde_json::de::IoRead\">IoRead</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_json::read::IoRead"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/de/struct.SliceRead.html\" title=\"struct serde_json::de::SliceRead\">SliceRead</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::read::SliceRead"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/de/struct.StrRead.html\" title=\"struct serde_json::de::StrRead\">StrRead</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::read::StrRead"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_json/error/enum.Category.html\" title=\"enum serde_json::error::Category\">Category</a>","synthetic":true,"types":["serde_json::error::Category"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.VacantEntry.html\" title=\"struct serde_json::map::VacantEntry\">VacantEntry</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::VacantEntry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.OccupiedEntry.html\" title=\"struct serde_json::map::OccupiedEntry\">OccupiedEntry</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::OccupiedEntry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.Iter.html\" title=\"struct serde_json::map::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::Iter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.IterMut.html\" title=\"struct serde_json::map::IterMut\">IterMut</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::IterMut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_json/map/struct.IntoIter.html\" title=\"struct serde_json::map::IntoIter\">IntoIter</a>","synthetic":true,"types":["serde_json::map::IntoIter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.Keys.html\" title=\"struct serde_json::map::Keys\">Keys</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::Keys"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.Values.html\" title=\"struct serde_json::map::Values\">Values</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::Values"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.ValuesMut.html\" title=\"struct serde_json::map::ValuesMut\">ValuesMut</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::ValuesMut"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"serde_json/map/enum.Entry.html\" title=\"enum serde_json::map::Entry\">Entry</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::Entry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_json/ser/struct.CompactFormatter.html\" title=\"struct serde_json::ser::CompactFormatter\">CompactFormatter</a>","synthetic":true,"types":["serde_json::ser::CompactFormatter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/ser/struct.PrettyFormatter.html\" title=\"struct serde_json::ser::PrettyFormatter\">PrettyFormatter</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::ser::PrettyFormatter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_json/ser/enum.CharEscape.html\" title=\"enum serde_json::ser::CharEscape\">CharEscape</a>","synthetic":true,"types":["serde_json::ser::CharEscape"]}];
implementors["sgx_alloc"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_alloc/struct.System.html\" title=\"struct sgx_alloc::System\">System</a>","synthetic":true,"types":["sgx_alloc::system::System"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_alloc/alignalloc/struct.AlignReq.html\" title=\"struct sgx_alloc::alignalloc::AlignReq\">AlignReq</a>","synthetic":true,"types":["sgx_alloc::alignalloc::AlignReq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_alloc/alignalloc/struct.AlignAlloc.html\" title=\"struct sgx_alloc::alignalloc::AlignAlloc\">AlignAlloc</a>","synthetic":true,"types":["sgx_alloc::alignalloc::AlignAlloc"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_alloc/alignalloc/struct.AlighAllocErr.html\" title=\"struct sgx_alloc::alignalloc::AlighAllocErr\">AlighAllocErr</a>","synthetic":true,"types":["sgx_alloc::alignalloc::AlighAllocErr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_alloc/alignalloc/struct.AlignLayoutErr.html\" title=\"struct sgx_alloc::alignalloc::AlignLayoutErr\">AlignLayoutErr</a>","synthetic":true,"types":["sgx_alloc::alignalloc::AlignLayoutErr"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"sgx_alloc/alignbox/struct.AlignBox.html\" title=\"struct sgx_alloc::alignbox::AlignBox\">AlignBox</a>&lt;T&gt;","synthetic":true,"types":["sgx_alloc::alignbox::AlignBox"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_alloc/rsrvmem/struct.RsrvMemAlloc.html\" title=\"struct sgx_alloc::rsrvmem::RsrvMemAlloc\">RsrvMemAlloc</a>","synthetic":true,"types":["sgx_alloc::rsrvmem::RsrvMemAlloc"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_alloc/rsrvmem/struct.RsrvMemAllocErr.html\" title=\"struct sgx_alloc::rsrvmem::RsrvMemAllocErr\">RsrvMemAllocErr</a>","synthetic":true,"types":["sgx_alloc::rsrvmem::RsrvMemAllocErr"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_alloc/rsrvmem/enum.ProtectAttr.html\" title=\"enum sgx_alloc::rsrvmem::ProtectAttr\">ProtectAttr</a>","synthetic":true,"types":["sgx_alloc::rsrvmem::ProtectAttr"]}];
implementors["sgx_backtrace_sys"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_backtrace_sys/enum.backtrace_state.html\" title=\"enum sgx_backtrace_sys::backtrace_state\">backtrace_state</a>","synthetic":true,"types":["sgx_backtrace_sys::bindings::backtrace_state"]}];
implementors["sgx_demangle"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_demangle/struct.Demangle.html\" title=\"struct sgx_demangle::Demangle\">Demangle</a>&lt;'a&gt;","synthetic":true,"types":["sgx_demangle::Demangle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_demangle/struct.TryDemangleError.html\" title=\"struct sgx_demangle::TryDemangleError\">TryDemangleError</a>","synthetic":true,"types":["sgx_demangle::TryDemangleError"]}];
implementors["sgx_libc"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.stat.html\" title=\"struct sgx_libc::stat\">stat</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::stat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.stat64.html\" title=\"struct sgx_libc::stat64\">stat64</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::stat64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.timeval.html\" title=\"struct sgx_libc::timeval\">timeval</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::timeval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.timespec.html\" title=\"struct sgx_libc::timespec\">timespec</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::timespec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.sockaddr.html\" title=\"struct sgx_libc::sockaddr\">sockaddr</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::sockaddr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.sockaddr_in.html\" title=\"struct sgx_libc::sockaddr_in\">sockaddr_in</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::sockaddr_in"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.sockaddr_in6.html\" title=\"struct sgx_libc::sockaddr_in6\">sockaddr_in6</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::sockaddr_in6"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.sockaddr_un.html\" title=\"struct sgx_libc::sockaddr_un\">sockaddr_un</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::sockaddr_un"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.sockaddr_storage.html\" title=\"struct sgx_libc::sockaddr_storage\">sockaddr_storage</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::sockaddr_storage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.addrinfo.html\" title=\"struct sgx_libc::addrinfo\">addrinfo</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::addrinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.sockaddr_nl.html\" title=\"struct sgx_libc::sockaddr_nl\">sockaddr_nl</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::sockaddr_nl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.sockaddr_ll.html\" title=\"struct sgx_libc::sockaddr_ll\">sockaddr_ll</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::sockaddr_ll"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.fd_set.html\" title=\"struct sgx_libc::fd_set\">fd_set</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::fd_set"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.tm.html\" title=\"struct sgx_libc::tm\">tm</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::tm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.epoll_event.html\" title=\"struct sgx_libc::epoll_event\">epoll_event</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::epoll_event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.in_addr.html\" title=\"struct sgx_libc::in_addr\">in_addr</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::in_addr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.in6_addr.html\" title=\"struct sgx_libc::in6_addr\">in6_addr</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::in6_addr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.ip_mreq.html\" title=\"struct sgx_libc::ip_mreq\">ip_mreq</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::ip_mreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.ipv6_mreq.html\" title=\"struct sgx_libc::ipv6_mreq\">ipv6_mreq</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::ipv6_mreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.hostent.html\" title=\"struct sgx_libc::hostent\">hostent</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::hostent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.iovec.html\" title=\"struct sgx_libc::iovec\">iovec</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::iovec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.pollfd.html\" title=\"struct sgx_libc::pollfd\">pollfd</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::pollfd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.winsize.html\" title=\"struct sgx_libc::winsize\">winsize</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::winsize"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.linger.html\" title=\"struct sgx_libc::linger\">linger</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::linger"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.sigval.html\" title=\"struct sgx_libc::sigval\">sigval</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::sigval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.msghdr.html\" title=\"struct sgx_libc::msghdr\">msghdr</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::msghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.cmsghdr.html\" title=\"struct sgx_libc::cmsghdr\">cmsghdr</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::cmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.dirent.html\" title=\"struct sgx_libc::dirent\">dirent</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::dirent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.dirent64.html\" title=\"struct sgx_libc::dirent64\">dirent64</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::dirent64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.passwd.html\" title=\"struct sgx_libc::passwd\">passwd</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::passwd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.cpu_set_t.html\" title=\"struct sgx_libc::cpu_set_t\">cpu_set_t</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::cpu_set_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.ucred.html\" title=\"struct sgx_libc::ucred\">ucred</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::ucred"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.pthread_once_t.html\" title=\"struct sgx_libc::pthread_once_t\">pthread_once_t</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::pthread_once_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.sigset_t.html\" title=\"struct sgx_libc::sigset_t\">sigset_t</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::sigset_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.sigaction.html\" title=\"struct sgx_libc::sigaction\">sigaction</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::sigaction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_libc/struct.siginfo_t.html\" title=\"struct sgx_libc::siginfo_t\">siginfo_t</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::siginfo_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_libc/enum.DIR.html\" title=\"enum sgx_libc::DIR\">DIR</a>","synthetic":true,"types":["sgx_libc::linux::x86_64::DIR"]}];
implementors["sgx_rand"] = [{"text":"impl&lt;'a, T, R&gt; Freeze for <a class=\"struct\" href=\"sgx_rand/struct.Generator.html\" title=\"struct sgx_rand::Generator\">Generator</a>&lt;'a, T, R&gt;","synthetic":true,"types":["sgx_rand::Generator"]},{"text":"impl&lt;'a, R&gt; Freeze for <a class=\"struct\" href=\"sgx_rand/struct.AsciiGenerator.html\" title=\"struct sgx_rand::AsciiGenerator\">AsciiGenerator</a>&lt;'a, R&gt;","synthetic":true,"types":["sgx_rand::AsciiGenerator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_rand/struct.XorShiftRng.html\" title=\"struct sgx_rand::XorShiftRng\">XorShiftRng</a>","synthetic":true,"types":["sgx_rand::XorShiftRng"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"sgx_rand/struct.Open01.html\" title=\"struct sgx_rand::Open01\">Open01</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_rand::Open01"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"sgx_rand/struct.Closed01.html\" title=\"struct sgx_rand::Closed01\">Closed01</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_rand::Closed01"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_rand/struct.StdRng.html\" title=\"struct sgx_rand::StdRng\">StdRng</a>","synthetic":true,"types":["sgx_rand::StdRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_rand/struct.ThreadRng.html\" title=\"struct sgx_rand::ThreadRng\">ThreadRng</a>","synthetic":true,"types":["sgx_rand::ThreadRng"]},{"text":"impl&lt;Sup&gt; Freeze for <a class=\"struct\" href=\"sgx_rand/distributions/struct.RandSample.html\" title=\"struct sgx_rand::distributions::RandSample\">RandSample</a>&lt;Sup&gt;","synthetic":true,"types":["sgx_rand::distributions::RandSample"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"sgx_rand/distributions/struct.Weighted.html\" title=\"struct sgx_rand::distributions::Weighted\">Weighted</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_rand::distributions::Weighted"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"sgx_rand/distributions/struct.WeightedChoice.html\" title=\"struct sgx_rand::distributions::WeightedChoice\">WeightedChoice</a>&lt;'a, T&gt;","synthetic":true,"types":["sgx_rand::distributions::WeightedChoice"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"sgx_rand/distributions/range/struct.Range.html\" title=\"struct sgx_rand::distributions::range::Range\">Range</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_rand::distributions::range::Range"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_rand/distributions/gamma/struct.Gamma.html\" title=\"struct sgx_rand::distributions::gamma::Gamma\">Gamma</a>","synthetic":true,"types":["sgx_rand::distributions::gamma::Gamma"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_rand/distributions/gamma/struct.ChiSquared.html\" title=\"struct sgx_rand::distributions::gamma::ChiSquared\">ChiSquared</a>","synthetic":true,"types":["sgx_rand::distributions::gamma::ChiSquared"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_rand/distributions/gamma/struct.FisherF.html\" title=\"struct sgx_rand::distributions::gamma::FisherF\">FisherF</a>","synthetic":true,"types":["sgx_rand::distributions::gamma::FisherF"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_rand/distributions/gamma/struct.StudentT.html\" title=\"struct sgx_rand::distributions::gamma::StudentT\">StudentT</a>","synthetic":true,"types":["sgx_rand::distributions::gamma::StudentT"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_rand/distributions/normal/struct.StandardNormal.html\" title=\"struct sgx_rand::distributions::normal::StandardNormal\">StandardNormal</a>","synthetic":true,"types":["sgx_rand::distributions::normal::StandardNormal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_rand/distributions/normal/struct.Normal.html\" title=\"struct sgx_rand::distributions::normal::Normal\">Normal</a>","synthetic":true,"types":["sgx_rand::distributions::normal::Normal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_rand/distributions/normal/struct.LogNormal.html\" title=\"struct sgx_rand::distributions::normal::LogNormal\">LogNormal</a>","synthetic":true,"types":["sgx_rand::distributions::normal::LogNormal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_rand/distributions/exponential/struct.Exp1.html\" title=\"struct sgx_rand::distributions::exponential::Exp1\">Exp1</a>","synthetic":true,"types":["sgx_rand::distributions::exponential::Exp1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_rand/distributions/exponential/struct.Exp.html\" title=\"struct sgx_rand::distributions::exponential::Exp\">Exp</a>","synthetic":true,"types":["sgx_rand::distributions::exponential::Exp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_rand/isaac/struct.IsaacRng.html\" title=\"struct sgx_rand::isaac::IsaacRng\">IsaacRng</a>","synthetic":true,"types":["sgx_rand::isaac::IsaacRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_rand/isaac/struct.Isaac64Rng.html\" title=\"struct sgx_rand::isaac::Isaac64Rng\">Isaac64Rng</a>","synthetic":true,"types":["sgx_rand::isaac::Isaac64Rng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_rand/chacha/struct.ChaChaRng.html\" title=\"struct sgx_rand::chacha::ChaChaRng\">ChaChaRng</a>","synthetic":true,"types":["sgx_rand::chacha::ChaChaRng"]},{"text":"impl&lt;R, Rsdr&gt; Freeze for <a class=\"struct\" href=\"sgx_rand/reseeding/struct.ReseedingRng.html\" title=\"struct sgx_rand::reseeding::ReseedingRng\">ReseedingRng</a>&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_rand::reseeding::ReseedingRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_rand/reseeding/struct.ReseedWithDefault.html\" title=\"struct sgx_rand::reseeding::ReseedWithDefault\">ReseedWithDefault</a>","synthetic":true,"types":["sgx_rand::reseeding::ReseedWithDefault"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_rand/os/struct.SgxRng.html\" title=\"struct sgx_rand::os::SgxRng\">SgxRng</a>","synthetic":true,"types":["sgx_rand::os::SgxRng"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"sgx_rand/read/struct.ReadRng.html\" title=\"struct sgx_rand::read::ReadRng\">ReadRng</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_rand::read::ReadRng"]}];
implementors["sgx_tcrypto"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"sgx_tcrypto/struct.SgxShaHandle.html\" title=\"struct sgx_tcrypto::SgxShaHandle\">SgxShaHandle</a>","synthetic":true,"types":["sgx_tcrypto::crypto::SgxShaHandle"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"sgx_tcrypto/struct.SgxSha1Handle.html\" title=\"struct sgx_tcrypto::SgxSha1Handle\">SgxSha1Handle</a>","synthetic":true,"types":["sgx_tcrypto::crypto::SgxSha1Handle"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"sgx_tcrypto/struct.SgxCmacHandle.html\" title=\"struct sgx_tcrypto::SgxCmacHandle\">SgxCmacHandle</a>","synthetic":true,"types":["sgx_tcrypto::crypto::SgxCmacHandle"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"sgx_tcrypto/struct.SgxHmacHandle.html\" title=\"struct sgx_tcrypto::SgxHmacHandle\">SgxHmacHandle</a>","synthetic":true,"types":["sgx_tcrypto::crypto::SgxHmacHandle"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"sgx_tcrypto/struct.SgxEccHandle.html\" title=\"struct sgx_tcrypto::SgxEccHandle\">SgxEccHandle</a>","synthetic":true,"types":["sgx_tcrypto::crypto::SgxEccHandle"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"sgx_tcrypto/struct.SgxRsaPrivKey.html\" title=\"struct sgx_tcrypto::SgxRsaPrivKey\">SgxRsaPrivKey</a>","synthetic":true,"types":["sgx_tcrypto::crypto::SgxRsaPrivKey"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"sgx_tcrypto/struct.SgxRsaPubKey.html\" title=\"struct sgx_tcrypto::SgxRsaPubKey\">SgxRsaPubKey</a>","synthetic":true,"types":["sgx_tcrypto::crypto::SgxRsaPubKey"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"sgx_tcrypto/struct.SgxAesHandle.html\" title=\"struct sgx_tcrypto::SgxAesHandle\">SgxAesHandle</a>","synthetic":true,"types":["sgx_tcrypto::crypto::SgxAesHandle"]}];
implementors["sgx_tprotected_fs"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tprotected_fs/struct.SgxFileStream.html\" title=\"struct sgx_tprotected_fs::SgxFileStream\">SgxFileStream</a>","synthetic":true,"types":["sgx_tprotected_fs::fs::SgxFileStream"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_tprotected_fs/enum.SeekFrom.html\" title=\"enum sgx_tprotected_fs::SeekFrom\">SeekFrom</a>","synthetic":true,"types":["sgx_tprotected_fs::fs::SeekFrom"]}];
implementors["sgx_trts"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_trts/enclave/struct.global_data_t.html\" title=\"struct sgx_trts::enclave::global_data_t\">global_data_t</a>","synthetic":true,"types":["sgx_trts::enclave::global_data_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_trts/enclave/struct.thread_data_t.html\" title=\"struct sgx_trts::enclave::thread_data_t\">thread_data_t</a>","synthetic":true,"types":["sgx_trts::enclave::thread_data_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_trts/enclave/struct.SgxGlobalData.html\" title=\"struct sgx_trts::enclave::SgxGlobalData\">SgxGlobalData</a>","synthetic":true,"types":["sgx_trts::enclave::SgxGlobalData"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_trts/enclave/struct.SgxThreadData.html\" title=\"struct sgx_trts::enclave::SgxThreadData\">SgxThreadData</a>","synthetic":true,"types":["sgx_trts::enclave::SgxThreadData"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_trts/enclave/enum.SgxThreadPolicy.html\" title=\"enum sgx_trts::enclave::SgxThreadPolicy\">SgxThreadPolicy</a>","synthetic":true,"types":["sgx_trts::enclave::SgxThreadPolicy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_trts/c_str/struct.CString.html\" title=\"struct sgx_trts::c_str::CString\">CString</a>","synthetic":true,"types":["sgx_trts::c_str::CString"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_trts/c_str/struct.CStr.html\" title=\"struct sgx_trts::c_str::CStr\">CStr</a>","synthetic":true,"types":["sgx_trts::c_str::CStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_trts/c_str/struct.NulError.html\" title=\"struct sgx_trts::c_str::NulError\">NulError</a>","synthetic":true,"types":["sgx_trts::c_str::NulError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_trts/c_str/struct.FromBytesWithNulError.html\" title=\"struct sgx_trts::c_str::FromBytesWithNulError\">FromBytesWithNulError</a>","synthetic":true,"types":["sgx_trts::c_str::FromBytesWithNulError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_trts/c_str/struct.IntoStringError.html\" title=\"struct sgx_trts::c_str::IntoStringError\">IntoStringError</a>","synthetic":true,"types":["sgx_trts::c_str::IntoStringError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_trts/cpu_feature/enum.Feature.html\" title=\"enum sgx_trts::cpu_feature::Feature\">Feature</a>","synthetic":true,"types":["sgx_trts::cpu_feature::Feature"]}];
implementors["sgx_tstd"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/thread/struct.LocalKey.html\" title=\"struct sgx_tstd::thread::LocalKey\">LocalKey</a>&lt;T&gt;","synthetic":true,"types":["sgx_tstd::thread::local::LocalKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/thread/struct.AccessError.html\" title=\"struct sgx_tstd::thread::AccessError\">AccessError</a>","synthetic":true,"types":["sgx_tstd::thread::local::AccessError"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"sgx_tstd/thread/struct.__StaticLocalKeyInner.html\" title=\"struct sgx_tstd::thread::__StaticLocalKeyInner\">Key</a>&lt;T&gt;","synthetic":true,"types":["sgx_tstd::thread::local::statik::Key"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"sgx_tstd/thread/struct.__FastLocalKeyInner.html\" title=\"struct sgx_tstd::thread::__FastLocalKeyInner\">Key</a>&lt;T&gt;","synthetic":true,"types":["sgx_tstd::thread::local::fast::Key"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"sgx_tstd/thread/struct.__OsLocalKeyInner.html\" title=\"struct sgx_tstd::thread::__OsLocalKeyInner\">Key</a>&lt;T&gt;","synthetic":true,"types":["sgx_tstd::thread::local::os::Key"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/thread/struct.Builder.html\" title=\"struct sgx_tstd::thread::Builder\">Builder</a>","synthetic":true,"types":["sgx_tstd::thread::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/thread/struct.ThreadId.html\" title=\"struct sgx_tstd::thread::ThreadId\">ThreadId</a>","synthetic":true,"types":["sgx_tstd::thread::ThreadId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/thread/struct.SgxThread.html\" title=\"struct sgx_tstd::thread::SgxThread\">SgxThread</a>","synthetic":true,"types":["sgx_tstd::thread::SgxThread"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/thread/struct.JoinHandle.html\" title=\"struct sgx_tstd::thread::JoinHandle\">JoinHandle</a>&lt;T&gt;","synthetic":true,"types":["sgx_tstd::thread::JoinHandle"]},{"text":"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/struct.HashMap.html\" title=\"struct sgx_tstd::collections::HashMap\">HashMap</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::collections::hash::map::HashMap"]},{"text":"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/struct.HashSet.html\" title=\"struct sgx_tstd::collections::HashSet\">HashSet</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::collections::hash::set::HashSet"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.Iter.html\" title=\"struct sgx_tstd::collections::hash_map::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::map::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.IterMut.html\" title=\"struct sgx_tstd::collections::hash_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::map::IterMut"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.IntoIter.html\" title=\"struct sgx_tstd::collections::hash_map::IntoIter\">IntoIter</a>&lt;K, V&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::map::IntoIter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.Keys.html\" title=\"struct sgx_tstd::collections::hash_map::Keys\">Keys</a>&lt;'a, K, V&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::map::Keys"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.Values.html\" title=\"struct sgx_tstd::collections::hash_map::Values\">Values</a>&lt;'a, K, V&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::map::Values"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.Drain.html\" title=\"struct sgx_tstd::collections::hash_map::Drain\">Drain</a>&lt;'a, K, V&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::map::Drain"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.ValuesMut.html\" title=\"struct sgx_tstd::collections::hash_map::ValuesMut\">ValuesMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::map::ValuesMut"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.RawEntryBuilderMut.html\" title=\"struct sgx_tstd::collections::hash_map::RawEntryBuilderMut\">RawEntryBuilderMut</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::map::RawEntryBuilderMut"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.RawOccupiedEntryMut.html\" title=\"struct sgx_tstd::collections::hash_map::RawOccupiedEntryMut\">RawOccupiedEntryMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::map::RawOccupiedEntryMut"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.RawVacantEntryMut.html\" title=\"struct sgx_tstd::collections::hash_map::RawVacantEntryMut\">RawVacantEntryMut</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::map::RawVacantEntryMut"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.RawEntryBuilder.html\" title=\"struct sgx_tstd::collections::hash_map::RawEntryBuilder\">RawEntryBuilder</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::map::RawEntryBuilder"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.OccupiedEntry.html\" title=\"struct sgx_tstd::collections::hash_map::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::collections::hash::map::OccupiedEntry"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.VacantEntry.html\" title=\"struct sgx_tstd::collections::hash_map::VacantEntry\">VacantEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::collections::hash::map::VacantEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.RandomState.html\" title=\"struct sgx_tstd::collections::hash_map::RandomState\">RandomState</a>","synthetic":true,"types":["sgx_tstd::collections::hash::map::RandomState"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_map/struct.DefaultHasher.html\" title=\"struct sgx_tstd::collections::hash_map::DefaultHasher\">DefaultHasher</a>","synthetic":true,"types":["sgx_tstd::collections::hash::map::DefaultHasher"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"enum\" href=\"sgx_tstd/collections/hash_map/enum.RawEntryMut.html\" title=\"enum sgx_tstd::collections::hash_map::RawEntryMut\">RawEntryMut</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::map::RawEntryMut"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"enum\" href=\"sgx_tstd/collections/hash_map/enum.Entry.html\" title=\"enum sgx_tstd::collections::hash_map::Entry\">Entry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::collections::hash::map::Entry"]},{"text":"impl&lt;'a, K&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_set/struct.Iter.html\" title=\"struct sgx_tstd::collections::hash_set::Iter\">Iter</a>&lt;'a, K&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::set::Iter"]},{"text":"impl&lt;K&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_set/struct.IntoIter.html\" title=\"struct sgx_tstd::collections::hash_set::IntoIter\">IntoIter</a>&lt;K&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::set::IntoIter"]},{"text":"impl&lt;'a, K&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_set/struct.Drain.html\" title=\"struct sgx_tstd::collections::hash_set::Drain\">Drain</a>&lt;'a, K&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::set::Drain"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_set/struct.Intersection.html\" title=\"struct sgx_tstd::collections::hash_set::Intersection\">Intersection</a>&lt;'a, T, S&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::set::Intersection"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_set/struct.Difference.html\" title=\"struct sgx_tstd::collections::hash_set::Difference\">Difference</a>&lt;'a, T, S&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::set::Difference"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_set/struct.SymmetricDifference.html\" title=\"struct sgx_tstd::collections::hash_set::SymmetricDifference\">SymmetricDifference</a>&lt;'a, T, S&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::set::SymmetricDifference"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/collections/hash_set/struct.Union.html\" title=\"struct sgx_tstd::collections::hash_set::Union\">Union</a>&lt;'a, T, S&gt;","synthetic":true,"types":["sgx_tstd::collections::hash::set::Union"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/env/struct.Vars.html\" title=\"struct sgx_tstd::env::Vars\">Vars</a>","synthetic":true,"types":["sgx_tstd::env::Vars"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/env/struct.VarsOs.html\" title=\"struct sgx_tstd::env::VarsOs\">VarsOs</a>","synthetic":true,"types":["sgx_tstd::env::VarsOs"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/env/struct.SplitPaths.html\" title=\"struct sgx_tstd::env::SplitPaths\">SplitPaths</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::env::SplitPaths"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/env/struct.JoinPathsError.html\" title=\"struct sgx_tstd::env::JoinPathsError\">JoinPathsError</a>","synthetic":true,"types":["sgx_tstd::env::JoinPathsError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_tstd/env/enum.VarError.html\" title=\"enum sgx_tstd::env::VarError\">VarError</a>","synthetic":true,"types":["sgx_tstd::env::VarError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/error/struct.Chain.html\" title=\"struct sgx_tstd::error::Chain\">Chain</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::error::Chain"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/error/struct.ErrorIter.html\" title=\"struct sgx_tstd::error::ErrorIter\">ErrorIter</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::error::ErrorIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/ffi/struct.OsString.html\" title=\"struct sgx_tstd::ffi::OsString\">OsString</a>","synthetic":true,"types":["sgx_tstd::ffi::os_str::OsString"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/ffi/struct.OsStr.html\" title=\"struct sgx_tstd::ffi::OsStr\">OsStr</a>","synthetic":true,"types":["sgx_tstd::ffi::os_str::OsStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/sgxfs/struct.SgxFile.html\" title=\"struct sgx_tstd::sgxfs::SgxFile\">SgxFile</a>","synthetic":true,"types":["sgx_tstd::sgxfs::SgxFile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/sgxfs/struct.OpenOptions.html\" title=\"struct sgx_tstd::sgxfs::OpenOptions\">OpenOptions</a>","synthetic":true,"types":["sgx_tstd::sgxfs::OpenOptions"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.IntoInnerError.html\" title=\"struct sgx_tstd::io::IntoInnerError\">IntoInnerError</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::io::buffered::IntoInnerError"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.BufReader.html\" title=\"struct sgx_tstd::io::BufReader\">BufReader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::io::buffered::BufReader"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.BufWriter.html\" title=\"struct sgx_tstd::io::BufWriter\">BufWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::io::buffered::BufWriter"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.LineWriter.html\" title=\"struct sgx_tstd::io::LineWriter\">LineWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::io::buffered::LineWriter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Cursor.html\" title=\"struct sgx_tstd::io::Cursor\">Cursor</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::io::cursor::Cursor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Error.html\" title=\"struct sgx_tstd::io::Error\">Error</a>","synthetic":true,"types":["sgx_tstd::io::error::Error"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Lazy.html\" title=\"struct sgx_tstd::io::Lazy\">Lazy</a>&lt;T&gt;","synthetic":true,"types":["sgx_tstd::io::lazy::Lazy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Stderr.html\" title=\"struct sgx_tstd::io::Stderr\">Stderr</a>","synthetic":true,"types":["sgx_tstd::io::stdio::Stderr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Stdin.html\" title=\"struct sgx_tstd::io::Stdin\">Stdin</a>","synthetic":true,"types":["sgx_tstd::io::stdio::Stdin"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Stdout.html\" title=\"struct sgx_tstd::io::Stdout\">Stdout</a>","synthetic":true,"types":["sgx_tstd::io::stdio::Stdout"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.StderrLock.html\" title=\"struct sgx_tstd::io::StderrLock\">StderrLock</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::io::stdio::StderrLock"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.StdinLock.html\" title=\"struct sgx_tstd::io::StdinLock\">StdinLock</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::io::stdio::StdinLock"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.StdoutLock.html\" title=\"struct sgx_tstd::io::StdoutLock\">StdoutLock</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::io::stdio::StdoutLock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Empty.html\" title=\"struct sgx_tstd::io::Empty\">Empty</a>","synthetic":true,"types":["sgx_tstd::io::util::Empty"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Repeat.html\" title=\"struct sgx_tstd::io::Repeat\">Repeat</a>","synthetic":true,"types":["sgx_tstd::io::util::Repeat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Sink.html\" title=\"struct sgx_tstd::io::Sink\">Sink</a>","synthetic":true,"types":["sgx_tstd::io::util::Sink"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.IoSliceMut.html\" title=\"struct sgx_tstd::io::IoSliceMut\">IoSliceMut</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::io::IoSliceMut"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.IoSlice.html\" title=\"struct sgx_tstd::io::IoSlice\">IoSlice</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::io::IoSlice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Initializer.html\" title=\"struct sgx_tstd::io::Initializer\">Initializer</a>","synthetic":true,"types":["sgx_tstd::io::Initializer"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Chain.html\" title=\"struct sgx_tstd::io::Chain\">Chain</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::io::Chain"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Take.html\" title=\"struct sgx_tstd::io::Take\">Take</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::io::Take"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Bytes.html\" title=\"struct sgx_tstd::io::Bytes\">Bytes</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::io::Bytes"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Split.html\" title=\"struct sgx_tstd::io::Split\">Split</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::io::Split"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/io/struct.Lines.html\" title=\"struct sgx_tstd::io::Lines\">Lines</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::io::Lines"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_tstd/io/enum.ErrorKind.html\" title=\"enum sgx_tstd::io::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["sgx_tstd::io::error::ErrorKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_tstd/io/enum.SeekFrom.html\" title=\"enum sgx_tstd::io::SeekFrom\">SeekFrom</a>","synthetic":true,"types":["sgx_tstd::io::SeekFrom"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/net/struct.Ipv4Addr.html\" title=\"struct sgx_tstd::net::Ipv4Addr\">Ipv4Addr</a>","synthetic":true,"types":["sgx_tstd::net::ip::Ipv4Addr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/net/struct.Ipv6Addr.html\" title=\"struct sgx_tstd::net::Ipv6Addr\">Ipv6Addr</a>","synthetic":true,"types":["sgx_tstd::net::ip::Ipv6Addr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/net/struct.SocketAddrV4.html\" title=\"struct sgx_tstd::net::SocketAddrV4\">SocketAddrV4</a>","synthetic":true,"types":["sgx_tstd::net::addr::SocketAddrV4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/net/struct.SocketAddrV6.html\" title=\"struct sgx_tstd::net::SocketAddrV6\">SocketAddrV6</a>","synthetic":true,"types":["sgx_tstd::net::addr::SocketAddrV6"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/net/struct.TcpStream.html\" title=\"struct sgx_tstd::net::TcpStream\">TcpStream</a>","synthetic":true,"types":["sgx_tstd::net::tcp::TcpStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/net/struct.TcpListener.html\" title=\"struct sgx_tstd::net::TcpListener\">TcpListener</a>","synthetic":true,"types":["sgx_tstd::net::tcp::TcpListener"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/net/struct.UdpSocket.html\" title=\"struct sgx_tstd::net::UdpSocket\">UdpSocket</a>","synthetic":true,"types":["sgx_tstd::net::udp::UdpSocket"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/net/struct.AddrParseError.html\" title=\"struct sgx_tstd::net::AddrParseError\">AddrParseError</a>","synthetic":true,"types":["sgx_tstd::net::parser::AddrParseError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_tstd/net/enum.IpAddr.html\" title=\"enum sgx_tstd::net::IpAddr\">IpAddr</a>","synthetic":true,"types":["sgx_tstd::net::ip::IpAddr"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_tstd/net/enum.Ipv6MulticastScope.html\" title=\"enum sgx_tstd::net::Ipv6MulticastScope\">Ipv6MulticastScope</a>","synthetic":true,"types":["sgx_tstd::net::ip::Ipv6MulticastScope"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_tstd/net/enum.SocketAddr.html\" title=\"enum sgx_tstd::net::SocketAddr\">SocketAddr</a>","synthetic":true,"types":["sgx_tstd::net::addr::SocketAddr"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_tstd/net/enum.Shutdown.html\" title=\"enum sgx_tstd::net::Shutdown\">Shutdown</a>","synthetic":true,"types":["sgx_tstd::net::Shutdown"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/os/unix/net/struct.SocketAddr.html\" title=\"struct sgx_tstd::os::unix::net::SocketAddr\">SocketAddr</a>","synthetic":true,"types":["sgx_tstd::sys::ext::net::SocketAddr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/os/unix/net/struct.UnixStream.html\" title=\"struct sgx_tstd::os::unix::net::UnixStream\">UnixStream</a>","synthetic":true,"types":["sgx_tstd::sys::ext::net::UnixStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/os/unix/net/struct.UnixListener.html\" title=\"struct sgx_tstd::os::unix::net::UnixListener\">UnixListener</a>","synthetic":true,"types":["sgx_tstd::sys::ext::net::UnixListener"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/os/unix/net/struct.Incoming.html\" title=\"struct sgx_tstd::os::unix::net::Incoming\">Incoming</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::sys::ext::net::Incoming"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/os/unix/net/struct.UnixDatagram.html\" title=\"struct sgx_tstd::os::unix::net::UnixDatagram\">UnixDatagram</a>","synthetic":true,"types":["sgx_tstd::sys::ext::net::UnixDatagram"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/os/raw/struct.stat.html\" title=\"struct sgx_tstd::os::raw::stat\">stat</a>","synthetic":true,"types":["sgx_tstd::os::raw::arch::stat"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/panic/struct.AssertUnwindSafe.html\" title=\"struct sgx_tstd::panic::AssertUnwindSafe\">AssertUnwindSafe</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::panic::AssertUnwindSafe"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/path/struct.PrefixComponent.html\" title=\"struct sgx_tstd::path::PrefixComponent\">PrefixComponent</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::path::PrefixComponent"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/path/struct.Components.html\" title=\"struct sgx_tstd::path::Components\">Components</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::path::Components"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/path/struct.Iter.html\" title=\"struct sgx_tstd::path::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::path::Iter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/path/struct.Ancestors.html\" title=\"struct sgx_tstd::path::Ancestors\">Ancestors</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::path::Ancestors"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/path/struct.PathBuf.html\" title=\"struct sgx_tstd::path::PathBuf\">PathBuf</a>","synthetic":true,"types":["sgx_tstd::path::PathBuf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/path/struct.Path.html\" title=\"struct sgx_tstd::path::Path\">Path</a>","synthetic":true,"types":["sgx_tstd::path::Path"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/path/struct.StripPrefixError.html\" title=\"struct sgx_tstd::path::StripPrefixError\">StripPrefixError</a>","synthetic":true,"types":["sgx_tstd::path::StripPrefixError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/path/struct.Display.html\" title=\"struct sgx_tstd::path::Display\">Display</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::path::Display"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"sgx_tstd/path/enum.Prefix.html\" title=\"enum sgx_tstd::path::Prefix\">Prefix</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::path::Prefix"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"sgx_tstd/path/enum.Component.html\" title=\"enum sgx_tstd::path::Component\">Component</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::path::Component"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.Barrier.html\" title=\"struct sgx_tstd::sync::Barrier\">Barrier</a>","synthetic":true,"types":["sgx_tstd::sync::barrier::Barrier"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.BarrierWaitResult.html\" title=\"struct sgx_tstd::sync::BarrierWaitResult\">BarrierWaitResult</a>","synthetic":true,"types":["sgx_tstd::sync::barrier::BarrierWaitResult"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxCondvar.html\" title=\"struct sgx_tstd::sync::SgxCondvar\">SgxCondvar</a>","synthetic":true,"types":["sgx_tstd::sync::condvar::SgxCondvar"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxThreadCondvar.html\" title=\"struct sgx_tstd::sync::SgxThreadCondvar\">SgxThreadCondvar</a>","synthetic":true,"types":["sgx_tstd::sync::condvar::SgxThreadCondvar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.WaitTimeoutResult.html\" title=\"struct sgx_tstd::sync::WaitTimeoutResult\">WaitTimeoutResult</a>","synthetic":true,"types":["sgx_tstd::sync::condvar::WaitTimeoutResult"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxMutex.html\" title=\"struct sgx_tstd::sync::SgxMutex\">SgxMutex</a>&lt;T&gt;","synthetic":true,"types":["sgx_tstd::sync::mutex::SgxMutex"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"sgx_tstd/marker/trait.Sized.html\" title=\"trait sgx_tstd::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxMutexGuard.html\" title=\"struct sgx_tstd::sync::SgxMutexGuard\">SgxMutexGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["sgx_tstd::sync::mutex::SgxMutexGuard"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxThreadMutex.html\" title=\"struct sgx_tstd::sync::SgxThreadMutex\">SgxThreadMutex</a>","synthetic":true,"types":["sgx_tstd::sync::mutex::SgxThreadMutex"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxReentrantMutex.html\" title=\"struct sgx_tstd::sync::SgxReentrantMutex\">SgxReentrantMutex</a>&lt;T&gt;","synthetic":true,"types":["sgx_tstd::sync::remutex::SgxReentrantMutex"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxReentrantMutexGuard.html\" title=\"struct sgx_tstd::sync::SgxReentrantMutexGuard\">SgxReentrantMutexGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["sgx_tstd::sync::remutex::SgxReentrantMutexGuard"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxReentrantThreadMutex.html\" title=\"struct sgx_tstd::sync::SgxReentrantThreadMutex\">SgxReentrantThreadMutex</a>","synthetic":true,"types":["sgx_tstd::sync::remutex::SgxReentrantThreadMutex"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.Once.html\" title=\"struct sgx_tstd::sync::Once\">Once</a>","synthetic":true,"types":["sgx_tstd::sync::once::Once"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.OnceState.html\" title=\"struct sgx_tstd::sync::OnceState\">OnceState</a>","synthetic":true,"types":["sgx_tstd::sync::once::OnceState"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxRwLock.html\" title=\"struct sgx_tstd::sync::SgxRwLock\">SgxRwLock</a>&lt;T&gt;","synthetic":true,"types":["sgx_tstd::sync::rwlock::SgxRwLock"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"sgx_tstd/marker/trait.Sized.html\" title=\"trait sgx_tstd::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxRwLockReadGuard.html\" title=\"struct sgx_tstd::sync::SgxRwLockReadGuard\">SgxRwLockReadGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["sgx_tstd::sync::rwlock::SgxRwLockReadGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"sgx_tstd/marker/trait.Sized.html\" title=\"trait sgx_tstd::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxRwLockWriteGuard.html\" title=\"struct sgx_tstd::sync::SgxRwLockWriteGuard\">SgxRwLockWriteGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["sgx_tstd::sync::rwlock::SgxRwLockWriteGuard"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxThreadRwLock.html\" title=\"struct sgx_tstd::sync::SgxThreadRwLock\">SgxThreadRwLock</a>","synthetic":true,"types":["sgx_tstd::sync::rwlock::SgxThreadRwLock"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxSpinlock.html\" title=\"struct sgx_tstd::sync::SgxSpinlock\">SgxSpinlock</a>","synthetic":true,"types":["sgx_tstd::sync::spinlock::SgxSpinlock"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxSpinlockGuard.html\" title=\"struct sgx_tstd::sync::SgxSpinlockGuard\">SgxSpinlockGuard</a>&lt;'a&gt;","synthetic":true,"types":["sgx_tstd::sync::spinlock::SgxSpinlockGuard"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.SgxThreadSpinlock.html\" title=\"struct sgx_tstd::sync::SgxThreadSpinlock\">SgxThreadSpinlock</a>","synthetic":true,"types":["sgx_tstd::sync::spinlock::SgxThreadSpinlock"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/struct.PoisonError.html\" title=\"struct sgx_tstd::sync::PoisonError\">PoisonError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::sys_common::poison::PoisonError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"sgx_tstd/sync/enum.TryLockError.html\" title=\"enum sgx_tstd::sync::TryLockError\">TryLockError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::sys_common::poison::TryLockError"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/mpsc/struct.Receiver.html\" title=\"struct sgx_tstd::sync::mpsc::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["sgx_tstd::sync::mpsc::Receiver"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/mpsc/struct.Iter.html\" title=\"struct sgx_tstd::sync::mpsc::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["sgx_tstd::sync::mpsc::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/mpsc/struct.TryIter.html\" title=\"struct sgx_tstd::sync::mpsc::TryIter\">TryIter</a>&lt;'a, T&gt;","synthetic":true,"types":["sgx_tstd::sync::mpsc::TryIter"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/mpsc/struct.IntoIter.html\" title=\"struct sgx_tstd::sync::mpsc::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["sgx_tstd::sync::mpsc::IntoIter"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/mpsc/struct.Sender.html\" title=\"struct sgx_tstd::sync::mpsc::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["sgx_tstd::sync::mpsc::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/mpsc/struct.SyncSender.html\" title=\"struct sgx_tstd::sync::mpsc::SyncSender\">SyncSender</a>&lt;T&gt;","synthetic":true,"types":["sgx_tstd::sync::mpsc::SyncSender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/mpsc/struct.SendError.html\" title=\"struct sgx_tstd::sync::mpsc::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::sync::mpsc::SendError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/sync/mpsc/struct.RecvError.html\" title=\"struct sgx_tstd::sync::mpsc::RecvError\">RecvError</a>","synthetic":true,"types":["sgx_tstd::sync::mpsc::RecvError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_tstd/sync/mpsc/enum.TryRecvError.html\" title=\"enum sgx_tstd::sync::mpsc::TryRecvError\">TryRecvError</a>","synthetic":true,"types":["sgx_tstd::sync::mpsc::TryRecvError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_tstd/sync/mpsc/enum.RecvTimeoutError.html\" title=\"enum sgx_tstd::sync::mpsc::RecvTimeoutError\">RecvTimeoutError</a>","synthetic":true,"types":["sgx_tstd::sync::mpsc::RecvTimeoutError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"sgx_tstd/sync/mpsc/enum.TrySendError.html\" title=\"enum sgx_tstd::sync::mpsc::TrySendError\">TrySendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["sgx_tstd::sync::mpsc::TrySendError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/time/struct.Instant.html\" title=\"struct sgx_tstd::time::Instant\">Instant</a>","synthetic":true,"types":["sgx_tstd::time::Instant"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/time/struct.SystemTime.html\" title=\"struct sgx_tstd::time::SystemTime\">SystemTime</a>","synthetic":true,"types":["sgx_tstd::time::SystemTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/time/struct.SystemTimeError.html\" title=\"struct sgx_tstd::time::SystemTimeError\">SystemTimeError</a>","synthetic":true,"types":["sgx_tstd::time::SystemTimeError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/untrusted/fs/struct.File.html\" title=\"struct sgx_tstd::untrusted::fs::File\">File</a>","synthetic":true,"types":["sgx_tstd::fs::File"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/untrusted/fs/struct.Metadata.html\" title=\"struct sgx_tstd::untrusted::fs::Metadata\">Metadata</a>","synthetic":true,"types":["sgx_tstd::fs::Metadata"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/untrusted/fs/struct.ReadDir.html\" title=\"struct sgx_tstd::untrusted::fs::ReadDir\">ReadDir</a>","synthetic":true,"types":["sgx_tstd::fs::ReadDir"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/untrusted/fs/struct.DirEntry.html\" title=\"struct sgx_tstd::untrusted::fs::DirEntry\">DirEntry</a>","synthetic":true,"types":["sgx_tstd::fs::DirEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/untrusted/fs/struct.OpenOptions.html\" title=\"struct sgx_tstd::untrusted::fs::OpenOptions\">OpenOptions</a>","synthetic":true,"types":["sgx_tstd::fs::OpenOptions"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/untrusted/fs/struct.Permissions.html\" title=\"struct sgx_tstd::untrusted::fs::Permissions\">Permissions</a>","synthetic":true,"types":["sgx_tstd::fs::Permissions"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/untrusted/fs/struct.FileType.html\" title=\"struct sgx_tstd::untrusted::fs::FileType\">FileType</a>","synthetic":true,"types":["sgx_tstd::fs::FileType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_tstd/untrusted/fs/struct.DirBuilder.html\" title=\"struct sgx_tstd::untrusted::fs::DirBuilder\">DirBuilder</a>","synthetic":true,"types":["sgx_tstd::fs::DirBuilder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_tstd/backtrace/enum.PrintFormat.html\" title=\"enum sgx_tstd::backtrace::PrintFormat\">PrintFormat</a>","synthetic":true,"types":["sgx_tstd::sys_common::backtrace::PrintFormat"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"sgx_tstd/backtrace/struct.Backtrace.html\" title=\"struct sgx_tstd::backtrace::Backtrace\">Backtrace</a>","synthetic":true,"types":["sgx_tstd::backtrace::Backtrace"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_tstd/backtrace/enum.BacktraceStatus.html\" title=\"enum sgx_tstd::backtrace::BacktraceStatus\">BacktraceStatus</a>","synthetic":true,"types":["sgx_tstd::backtrace::BacktraceStatus"]}];
implementors["sgx_types"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_attributes_t.html\" title=\"struct sgx_types::sgx_attributes_t\">sgx_attributes_t</a>","synthetic":true,"types":["sgx_types::types::sgx_attributes_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_misc_attribute_t.html\" title=\"struct sgx_types::sgx_misc_attribute_t\">sgx_misc_attribute_t</a>","synthetic":true,"types":["sgx_types::types::sgx_misc_attribute_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_dh_msg1_t.html\" title=\"struct sgx_types::sgx_dh_msg1_t\">sgx_dh_msg1_t</a>","synthetic":true,"types":["sgx_types::types::sgx_dh_msg1_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_dh_msg2_t.html\" title=\"struct sgx_types::sgx_dh_msg2_t\">sgx_dh_msg2_t</a>","synthetic":true,"types":["sgx_types::types::sgx_dh_msg2_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_dh_msg3_body_t.html\" title=\"struct sgx_types::sgx_dh_msg3_body_t\">sgx_dh_msg3_body_t</a>","synthetic":true,"types":["sgx_types::types::sgx_dh_msg3_body_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_dh_msg3_t.html\" title=\"struct sgx_types::sgx_dh_msg3_t\">sgx_dh_msg3_t</a>","synthetic":true,"types":["sgx_types::types::sgx_dh_msg3_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_dh_session_enclave_identity_t.html\" title=\"struct sgx_types::sgx_dh_session_enclave_identity_t\">sgx_dh_session_enclave_identity_t</a>","synthetic":true,"types":["sgx_types::types::sgx_dh_session_enclave_identity_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_dh_session_t.html\" title=\"struct sgx_types::sgx_dh_session_t\">sgx_dh_session_t</a>","synthetic":true,"types":["sgx_types::types::sgx_dh_session_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.ecc_param_t.html\" title=\"struct sgx_types::ecc_param_t\">ecc_param_t</a>","synthetic":true,"types":["sgx_types::types::ecc_param_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_cpu_svn_t.html\" title=\"struct sgx_types::sgx_cpu_svn_t\">sgx_cpu_svn_t</a>","synthetic":true,"types":["sgx_types::types::sgx_cpu_svn_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_key_id_t.html\" title=\"struct sgx_types::sgx_key_id_t\">sgx_key_id_t</a>","synthetic":true,"types":["sgx_types::types::sgx_key_id_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_key_request_t.html\" title=\"struct sgx_types::sgx_key_request_t\">sgx_key_request_t</a>","synthetic":true,"types":["sgx_types::types::sgx_key_request_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ra_msg1_t.html\" title=\"struct sgx_types::sgx_ra_msg1_t\">sgx_ra_msg1_t</a>","synthetic":true,"types":["sgx_types::types::sgx_ra_msg1_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ra_msg2_t.html\" title=\"struct sgx_types::sgx_ra_msg2_t\">sgx_ra_msg2_t</a>","synthetic":true,"types":["sgx_types::types::sgx_ra_msg2_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ps_sec_prop_desc_t.html\" title=\"struct sgx_types::sgx_ps_sec_prop_desc_t\">sgx_ps_sec_prop_desc_t</a>","synthetic":true,"types":["sgx_types::types::sgx_ps_sec_prop_desc_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ra_msg3_t.html\" title=\"struct sgx_types::sgx_ra_msg3_t\">sgx_ra_msg3_t</a>","synthetic":true,"types":["sgx_types::types::sgx_ra_msg3_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_spid_t.html\" title=\"struct sgx_types::sgx_spid_t\">sgx_spid_t</a>","synthetic":true,"types":["sgx_types::types::sgx_spid_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_basename_t.html\" title=\"struct sgx_types::sgx_basename_t\">sgx_basename_t</a>","synthetic":true,"types":["sgx_types::types::sgx_basename_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_quote_nonce_t.html\" title=\"struct sgx_types::sgx_quote_nonce_t\">sgx_quote_nonce_t</a>","synthetic":true,"types":["sgx_types::types::sgx_quote_nonce_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_update_info_bit_t.html\" title=\"struct sgx_types::sgx_update_info_bit_t\">sgx_update_info_bit_t</a>","synthetic":true,"types":["sgx_types::types::sgx_update_info_bit_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_quote_t.html\" title=\"struct sgx_types::sgx_quote_t\">sgx_quote_t</a>","synthetic":true,"types":["sgx_types::types::sgx_quote_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_platform_info_t.html\" title=\"struct sgx_types::sgx_platform_info_t\">sgx_platform_info_t</a>","synthetic":true,"types":["sgx_types::types::sgx_platform_info_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_att_key_id_t.html\" title=\"struct sgx_types::sgx_att_key_id_t\">sgx_att_key_id_t</a>","synthetic":true,"types":["sgx_types::types::sgx_att_key_id_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ql_att_key_id_t.html\" title=\"struct sgx_types::sgx_ql_att_key_id_t\">sgx_ql_att_key_id_t</a>","synthetic":true,"types":["sgx_types::types::sgx_ql_att_key_id_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_att_key_id_ext_t.html\" title=\"struct sgx_types::sgx_att_key_id_ext_t\">sgx_att_key_id_ext_t</a>","synthetic":true,"types":["sgx_types::types::sgx_att_key_id_ext_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_qe_report_info_t.html\" title=\"struct sgx_types::sgx_qe_report_info_t\">sgx_qe_report_info_t</a>","synthetic":true,"types":["sgx_types::types::sgx_qe_report_info_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_measurement_t.html\" title=\"struct sgx_types::sgx_measurement_t\">sgx_measurement_t</a>","synthetic":true,"types":["sgx_types::types::sgx_measurement_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_report_data_t.html\" title=\"struct sgx_types::sgx_report_data_t\">sgx_report_data_t</a>","synthetic":true,"types":["sgx_types::types::sgx_report_data_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_target_info_t.html\" title=\"struct sgx_types::sgx_target_info_t\">sgx_target_info_t</a>","synthetic":true,"types":["sgx_types::types::sgx_target_info_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_report_body_t.html\" title=\"struct sgx_types::sgx_report_body_t\">sgx_report_body_t</a>","synthetic":true,"types":["sgx_types::types::sgx_report_body_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_report_t.html\" title=\"struct sgx_types::sgx_report_t\">sgx_report_t</a>","synthetic":true,"types":["sgx_types::types::sgx_report_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ec256_dh_shared_t.html\" title=\"struct sgx_types::sgx_ec256_dh_shared_t\">sgx_ec256_dh_shared_t</a>","synthetic":true,"types":["sgx_types::types::sgx_ec256_dh_shared_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ec256_private_t.html\" title=\"struct sgx_types::sgx_ec256_private_t\">sgx_ec256_private_t</a>","synthetic":true,"types":["sgx_types::types::sgx_ec256_private_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ec256_public_t.html\" title=\"struct sgx_types::sgx_ec256_public_t\">sgx_ec256_public_t</a>","synthetic":true,"types":["sgx_types::types::sgx_ec256_public_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ec256_signature_t.html\" title=\"struct sgx_types::sgx_ec256_signature_t\">sgx_ec256_signature_t</a>","synthetic":true,"types":["sgx_types::types::sgx_ec256_signature_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_rsa3072_public_key_t.html\" title=\"struct sgx_types::sgx_rsa3072_public_key_t\">sgx_rsa3072_public_key_t</a>","synthetic":true,"types":["sgx_types::types::sgx_rsa3072_public_key_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_rsa3072_key_t.html\" title=\"struct sgx_types::sgx_rsa3072_key_t\">sgx_rsa3072_key_t</a>","synthetic":true,"types":["sgx_types::types::sgx_rsa3072_key_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_rsa3072_signature_t.html\" title=\"struct sgx_types::sgx_rsa3072_signature_t\">sgx_rsa3072_signature_t</a>","synthetic":true,"types":["sgx_types::types::sgx_rsa3072_signature_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.rsa_params_t.html\" title=\"struct sgx_types::rsa_params_t\">rsa_params_t</a>","synthetic":true,"types":["sgx_types::types::rsa_params_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_thread_queue_t.html\" title=\"struct sgx_types::sgx_thread_queue_t\">sgx_thread_queue_t</a>","synthetic":true,"types":["sgx_types::types::sgx_thread_queue_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_thread_mutex_t.html\" title=\"struct sgx_types::sgx_thread_mutex_t\">sgx_thread_mutex_t</a>","synthetic":true,"types":["sgx_types::types::sgx_thread_mutex_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_thread_mutex_attr_t.html\" title=\"struct sgx_types::sgx_thread_mutex_attr_t\">sgx_thread_mutex_attr_t</a>","synthetic":true,"types":["sgx_types::types::sgx_thread_mutex_attr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_thread_cond_attr_t.html\" title=\"struct sgx_types::sgx_thread_cond_attr_t\">sgx_thread_cond_attr_t</a>","synthetic":true,"types":["sgx_types::types::sgx_thread_cond_attr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_thread_cond_t.html\" title=\"struct sgx_types::sgx_thread_cond_t\">sgx_thread_cond_t</a>","synthetic":true,"types":["sgx_types::types::sgx_thread_cond_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_cpu_context_t.html\" title=\"struct sgx_types::sgx_cpu_context_t\">sgx_cpu_context_t</a>","synthetic":true,"types":["sgx_types::types::sgx_cpu_context_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_exception_info_t.html\" title=\"struct sgx_types::sgx_exception_info_t\">sgx_exception_info_t</a>","synthetic":true,"types":["sgx_types::types::sgx_exception_info_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_aes_gcm_data_t.html\" title=\"struct sgx_types::sgx_aes_gcm_data_t\">sgx_aes_gcm_data_t</a>","synthetic":true,"types":["sgx_types::types::sgx_aes_gcm_data_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_sealed_data_t.html\" title=\"struct sgx_types::sgx_sealed_data_t\">sgx_sealed_data_t</a>","synthetic":true,"types":["sgx_types::types::sgx_sealed_data_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ps_cap_t.html\" title=\"struct sgx_types::sgx_ps_cap_t\">sgx_ps_cap_t</a>","synthetic":true,"types":["sgx_types::types::sgx_ps_cap_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_kss_config_t.html\" title=\"struct sgx_types::sgx_kss_config_t\">sgx_kss_config_t</a>","synthetic":true,"types":["sgx_types::types::sgx_kss_config_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_uswitchless_worker_stats_t.html\" title=\"struct sgx_types::sgx_uswitchless_worker_stats_t\">sgx_uswitchless_worker_stats_t</a>","synthetic":true,"types":["sgx_types::types::sgx_uswitchless_worker_stats_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_uswitchless_config_t.html\" title=\"struct sgx_types::sgx_uswitchless_config_t\">sgx_uswitchless_config_t</a>","synthetic":true,"types":["sgx_types::types::sgx_uswitchless_config_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_pce_info_t.html\" title=\"struct sgx_types::sgx_pce_info_t\">sgx_pce_info_t</a>","synthetic":true,"types":["sgx_types::types::sgx_pce_info_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ql_qe3_id_t.html\" title=\"struct sgx_types::sgx_ql_qe3_id_t\">sgx_ql_qe3_id_t</a>","synthetic":true,"types":["sgx_types::types::sgx_ql_qe3_id_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ql_pck_cert_id_t.html\" title=\"struct sgx_types::sgx_ql_pck_cert_id_t\">sgx_ql_pck_cert_id_t</a>","synthetic":true,"types":["sgx_types::types::sgx_ql_pck_cert_id_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ql_config_t.html\" title=\"struct sgx_types::sgx_ql_config_t\">sgx_ql_config_t</a>","synthetic":true,"types":["sgx_types::types::sgx_ql_config_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ql_qve_collateral_t.html\" title=\"struct sgx_types::sgx_ql_qve_collateral_t\">sgx_ql_qve_collateral_t</a>","synthetic":true,"types":["sgx_types::types::sgx_ql_qve_collateral_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ql_ppid_rsa3072_encrypted_cert_info_t.html\" title=\"struct sgx_types::sgx_ql_ppid_rsa3072_encrypted_cert_info_t\">sgx_ql_ppid_rsa3072_encrypted_cert_info_t</a>","synthetic":true,"types":["sgx_types::types::sgx_ql_ppid_rsa3072_encrypted_cert_info_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ql_auth_data_t.html\" title=\"struct sgx_types::sgx_ql_auth_data_t\">sgx_ql_auth_data_t</a>","synthetic":true,"types":["sgx_types::types::sgx_ql_auth_data_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ql_certification_data_t.html\" title=\"struct sgx_types::sgx_ql_certification_data_t\">sgx_ql_certification_data_t</a>","synthetic":true,"types":["sgx_types::types::sgx_ql_certification_data_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ql_ecdsa_sig_data_t.html\" title=\"struct sgx_types::sgx_ql_ecdsa_sig_data_t\">sgx_ql_ecdsa_sig_data_t</a>","synthetic":true,"types":["sgx_types::types::sgx_ql_ecdsa_sig_data_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_quote_header_t.html\" title=\"struct sgx_types::sgx_quote_header_t\">sgx_quote_header_t</a>","synthetic":true,"types":["sgx_types::types::sgx_quote_header_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_quote3_t.html\" title=\"struct sgx_types::sgx_quote3_t\">sgx_quote3_t</a>","synthetic":true,"types":["sgx_types::types::sgx_quote3_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ql_qe_report_info_t.html\" title=\"struct sgx_types::sgx_ql_qe_report_info_t\">sgx_ql_qe_report_info_t</a>","synthetic":true,"types":["sgx_types::types::sgx_ql_qe_report_info_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ql_qv_supplemental_t.html\" title=\"struct sgx_types::sgx_ql_qv_supplemental_t\">sgx_ql_qv_supplemental_t</a>","synthetic":true,"types":["sgx_types::types::sgx_ql_qv_supplemental_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.align_req_t.html\" title=\"struct sgx_types::align_req_t\">align_req_t</a>","synthetic":true,"types":["sgx_types::types::align_req_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_align_key_128bit_t.html\" title=\"struct sgx_types::sgx_align_key_128bit_t\">sgx_align_key_128bit_t</a>","synthetic":true,"types":["sgx_types::types::sgx_align_key_128bit_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_align_mac_128bit_t.html\" title=\"struct sgx_types::sgx_align_mac_128bit_t\">sgx_align_mac_128bit_t</a>","synthetic":true,"types":["sgx_types::types::sgx_align_mac_128bit_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_align_key_256bit_t.html\" title=\"struct sgx_types::sgx_align_key_256bit_t\">sgx_align_key_256bit_t</a>","synthetic":true,"types":["sgx_types::types::sgx_align_key_256bit_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_align_mac_256bit_t.html\" title=\"struct sgx_types::sgx_align_mac_256bit_t\">sgx_align_mac_256bit_t</a>","synthetic":true,"types":["sgx_types::types::sgx_align_mac_256bit_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_align_ec256_dh_shared_t.html\" title=\"struct sgx_types::sgx_align_ec256_dh_shared_t\">sgx_align_ec256_dh_shared_t</a>","synthetic":true,"types":["sgx_types::types::sgx_align_ec256_dh_shared_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_align_ec256_private_t.html\" title=\"struct sgx_types::sgx_align_ec256_private_t\">sgx_align_ec256_private_t</a>","synthetic":true,"types":["sgx_types::types::sgx_align_ec256_private_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_dh_session_role_t.html\" title=\"enum sgx_types::sgx_dh_session_role_t\">sgx_dh_session_role_t</a>","synthetic":true,"types":["sgx_types::types::sgx_dh_session_role_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_ra_key_type_t.html\" title=\"enum sgx_types::sgx_ra_key_type_t\">sgx_ra_key_type_t</a>","synthetic":true,"types":["sgx_types::types::sgx_ra_key_type_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_quote_sign_type_t.html\" title=\"enum sgx_types::sgx_quote_sign_type_t\">sgx_quote_sign_type_t</a>","synthetic":true,"types":["sgx_types::types::sgx_quote_sign_type_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_generic_ecresult_t.html\" title=\"enum sgx_types::sgx_generic_ecresult_t\">sgx_generic_ecresult_t</a>","synthetic":true,"types":["sgx_types::types::sgx_generic_ecresult_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_rsa_result_t.html\" title=\"enum sgx_types::sgx_rsa_result_t\">sgx_rsa_result_t</a>","synthetic":true,"types":["sgx_types::types::sgx_rsa_result_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_rsa_key_type_t.html\" title=\"enum sgx_types::sgx_rsa_key_type_t\">sgx_rsa_key_type_t</a>","synthetic":true,"types":["sgx_types::types::sgx_rsa_key_type_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_exception_vector_t.html\" title=\"enum sgx_types::sgx_exception_vector_t\">sgx_exception_vector_t</a>","synthetic":true,"types":["sgx_types::types::sgx_exception_vector_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_exception_type_t.html\" title=\"enum sgx_types::sgx_exception_type_t\">sgx_exception_type_t</a>","synthetic":true,"types":["sgx_types::types::sgx_exception_type_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_device_status_t.html\" title=\"enum sgx_types::sgx_device_status_t\">sgx_device_status_t</a>","synthetic":true,"types":["sgx_types::types::sgx_device_status_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_uswitchless_worker_type_t.html\" title=\"enum sgx_types::sgx_uswitchless_worker_type_t\">sgx_uswitchless_worker_type_t</a>","synthetic":true,"types":["sgx_types::types::sgx_uswitchless_worker_type_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_uswitchless_worker_event_t.html\" title=\"enum sgx_types::sgx_uswitchless_worker_event_t\">sgx_uswitchless_worker_event_t</a>","synthetic":true,"types":["sgx_types::types::sgx_uswitchless_worker_event_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_ql_request_policy_t.html\" title=\"enum sgx_types::sgx_ql_request_policy_t\">sgx_ql_request_policy_t</a>","synthetic":true,"types":["sgx_types::types::sgx_ql_request_policy_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_ql_config_version_t.html\" title=\"enum sgx_types::sgx_ql_config_version_t\">sgx_ql_config_version_t</a>","synthetic":true,"types":["sgx_types::types::sgx_ql_config_version_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_ql_attestation_algorithm_id_t.html\" title=\"enum sgx_types::sgx_ql_attestation_algorithm_id_t\">sgx_ql_attestation_algorithm_id_t</a>","synthetic":true,"types":["sgx_types::types::sgx_ql_attestation_algorithm_id_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_ql_cert_key_type_t.html\" title=\"enum sgx_types::sgx_ql_cert_key_type_t\">sgx_ql_cert_key_type_t</a>","synthetic":true,"types":["sgx_types::types::sgx_ql_cert_key_type_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_ql_path_type_t.html\" title=\"enum sgx_types::sgx_ql_path_type_t\">sgx_ql_path_type_t</a>","synthetic":true,"types":["sgx_types::types::sgx_ql_path_type_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_ql_qv_result_t.html\" title=\"enum sgx_types::sgx_ql_qv_result_t\">sgx_ql_qv_result_t</a>","synthetic":true,"types":["sgx_types::types::sgx_ql_qv_result_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_qv_path_type_t.html\" title=\"enum sgx_types::sgx_qv_path_type_t\">sgx_qv_path_type_t</a>","synthetic":true,"types":["sgx_types::types::sgx_qv_path_type_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_status_t.html\" title=\"enum sgx_types::sgx_status_t\">sgx_status_t</a>","synthetic":true,"types":["sgx_types::error::sgx_status_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_pce_error_t.html\" title=\"enum sgx_types::sgx_pce_error_t\">sgx_pce_error_t</a>","synthetic":true,"types":["sgx_types::error::sgx_pce_error_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_quote3_error_t.html\" title=\"enum sgx_types::sgx_quote3_error_t\">sgx_quote3_error_t</a>","synthetic":true,"types":["sgx_types::error::sgx_quote3_error_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_qcnl_error_t.html\" title=\"enum sgx_types::sgx_qcnl_error_t\">sgx_qcnl_error_t</a>","synthetic":true,"types":["sgx_types::error::sgx_qcnl_error_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/metadata/struct.tcs_t.html\" title=\"struct sgx_types::metadata::tcs_t\">tcs_t</a>","synthetic":true,"types":["sgx_types::metadata::tcs_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/metadata/struct.css_header_t.html\" title=\"struct sgx_types::metadata::css_header_t\">css_header_t</a>","synthetic":true,"types":["sgx_types::metadata::css_header_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/metadata/struct.css_key_t.html\" title=\"struct sgx_types::metadata::css_key_t\">css_key_t</a>","synthetic":true,"types":["sgx_types::metadata::css_key_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/metadata/struct.css_body_t.html\" title=\"struct sgx_types::metadata::css_body_t\">css_body_t</a>","synthetic":true,"types":["sgx_types::metadata::css_body_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/metadata/struct.css_buffer_t.html\" title=\"struct sgx_types::metadata::css_buffer_t\">css_buffer_t</a>","synthetic":true,"types":["sgx_types::metadata::css_buffer_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/metadata/struct.enclave_css_t.html\" title=\"struct sgx_types::metadata::enclave_css_t\">enclave_css_t</a>","synthetic":true,"types":["sgx_types::metadata::enclave_css_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/metadata/struct.data_directory_t.html\" title=\"struct sgx_types::metadata::data_directory_t\">data_directory_t</a>","synthetic":true,"types":["sgx_types::metadata::data_directory_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/metadata/struct.layout_entry_t.html\" title=\"struct sgx_types::metadata::layout_entry_t\">layout_entry_t</a>","synthetic":true,"types":["sgx_types::metadata::layout_entry_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/metadata/struct.layout_group_t.html\" title=\"struct sgx_types::metadata::layout_group_t\">layout_group_t</a>","synthetic":true,"types":["sgx_types::metadata::layout_group_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/metadata/struct.patch_entry_t.html\" title=\"struct sgx_types::metadata::patch_entry_t\">patch_entry_t</a>","synthetic":true,"types":["sgx_types::metadata::patch_entry_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_types/metadata/struct.metadata_t.html\" title=\"struct sgx_types::metadata::metadata_t\">metadata_t</a>","synthetic":true,"types":["sgx_types::metadata::metadata_t"]},{"text":"impl Freeze for <a class=\"union\" href=\"sgx_types/metadata/union.layout_t.html\" title=\"union sgx_types::metadata::layout_t\">layout_t</a>","synthetic":true,"types":["sgx_types::metadata::layout_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_types/metadata/enum.dir_index_t.html\" title=\"enum sgx_types::metadata::dir_index_t\">dir_index_t</a>","synthetic":true,"types":["sgx_types::metadata::dir_index_t"]}];
implementors["sgx_unwind"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"sgx_unwind/struct._Unwind_Exception.html\" title=\"struct sgx_unwind::_Unwind_Exception\">_Unwind_Exception</a>","synthetic":true,"types":["sgx_unwind::libunwind::_Unwind_Exception"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_unwind/enum._Unwind_Reason_Code.html\" title=\"enum sgx_unwind::_Unwind_Reason_Code\">_Unwind_Reason_Code</a>","synthetic":true,"types":["sgx_unwind::libunwind::_Unwind_Reason_Code"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_unwind/enum._Unwind_Context.html\" title=\"enum sgx_unwind::_Unwind_Context\">_Unwind_Context</a>","synthetic":true,"types":["sgx_unwind::libunwind::_Unwind_Context"]},{"text":"impl Freeze for <a class=\"enum\" href=\"sgx_unwind/enum._Unwind_Action.html\" title=\"enum sgx_unwind::_Unwind_Action\">_Unwind_Action</a>","synthetic":true,"types":["sgx_unwind::libunwind::_Unwind_Action"]}];
implementors["smallvec"] = [{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"smallvec/struct.Drain.html\" title=\"struct smallvec::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["smallvec::Drain"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"smallvec/struct.SmallVec.html\" title=\"struct smallvec::SmallVec\">SmallVec</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["smallvec::SmallVec"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"smallvec/struct.IntoIter.html\" title=\"struct smallvec::IntoIter\">IntoIter</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["smallvec::IntoIter"]}];
implementors["snap"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"snap/struct.Encoder.html\" title=\"struct snap::Encoder\">Encoder</a>","synthetic":true,"types":["snap::compress::Encoder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"snap/struct.Decoder.html\" title=\"struct snap::Decoder\">Decoder</a>","synthetic":true,"types":["snap::decompress::Decoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"snap/struct.IntoInnerError.html\" title=\"struct snap::IntoInnerError\">IntoInnerError</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["snap::error::IntoInnerError"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"snap/struct.Reader.html\" title=\"struct snap::Reader\">Reader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["snap::frame::Reader"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"snap/struct.Writer.html\" title=\"struct snap::Writer\">Writer</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["snap::frame::Writer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"snap/enum.Error.html\" title=\"enum snap::Error\">Error</a>","synthetic":true,"types":["snap::error::Error"]}];
implementors["spin"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"spin/struct.Mutex.html\" title=\"struct spin::Mutex\">Mutex</a>&lt;T&gt;","synthetic":true,"types":["spin::mutex::Mutex"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"spin/struct.MutexGuard.html\" title=\"struct spin::MutexGuard\">MutexGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["spin::mutex::MutexGuard"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"spin/struct.RwLock.html\" title=\"struct spin::RwLock\">RwLock</a>&lt;T&gt;","synthetic":true,"types":["spin::rw_lock::RwLock"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"spin/struct.RwLockReadGuard.html\" title=\"struct spin::RwLockReadGuard\">RwLockReadGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["spin::rw_lock::RwLockReadGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"spin/struct.RwLockWriteGuard.html\" title=\"struct spin::RwLockWriteGuard\">RwLockWriteGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["spin::rw_lock::RwLockWriteGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"spin/struct.RwLockUpgradeableGuard.html\" title=\"struct spin::RwLockUpgradeableGuard\">RwLockUpgradeableGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["spin::rw_lock::RwLockUpgradeableGuard"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"spin/struct.Once.html\" title=\"struct spin::Once\">Once</a>&lt;T&gt;","synthetic":true,"types":["spin::once::Once"]}];
implementors["stream_cipher"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"stream_cipher/struct.InvalidKeyNonceLength.html\" title=\"struct stream_cipher::InvalidKeyNonceLength\">InvalidKeyNonceLength</a>","synthetic":true,"types":["stream_cipher::errors::InvalidKeyNonceLength"]},{"text":"impl Freeze for <a class=\"struct\" href=\"stream_cipher/struct.LoopError.html\" title=\"struct stream_cipher::LoopError\">LoopError</a>","synthetic":true,"types":["stream_cipher::errors::LoopError"]}];
implementors["syn"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Attribute.html\" title=\"struct syn::Attribute\">Attribute</a>","synthetic":true,"types":["syn::attr::Attribute"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.MetaList.html\" title=\"struct syn::MetaList\">MetaList</a>","synthetic":true,"types":["syn::attr::MetaList"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.MetaNameValue.html\" title=\"struct syn::MetaNameValue\">MetaNameValue</a>","synthetic":true,"types":["syn::attr::MetaNameValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Field.html\" title=\"struct syn::Field\">Field</a>","synthetic":true,"types":["syn::data::Field"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldsNamed.html\" title=\"struct syn::FieldsNamed\">FieldsNamed</a>","synthetic":true,"types":["syn::data::FieldsNamed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldsUnnamed.html\" title=\"struct syn::FieldsUnnamed\">FieldsUnnamed</a>","synthetic":true,"types":["syn::data::FieldsUnnamed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Variant.html\" title=\"struct syn::Variant\">Variant</a>","synthetic":true,"types":["syn::data::Variant"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisCrate.html\" title=\"struct syn::VisCrate\">VisCrate</a>","synthetic":true,"types":["syn::data::VisCrate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisPublic.html\" title=\"struct syn::VisPublic\">VisPublic</a>","synthetic":true,"types":["syn::data::VisPublic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisRestricted.html\" title=\"struct syn::VisRestricted\">VisRestricted</a>","synthetic":true,"types":["syn::data::VisRestricted"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Arm.html\" title=\"struct syn::Arm\">Arm</a>","synthetic":true,"types":["syn::expr::Arm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldValue.html\" title=\"struct syn::FieldValue\">FieldValue</a>","synthetic":true,"types":["syn::expr::FieldValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Label.html\" title=\"struct syn::Label\">Label</a>","synthetic":true,"types":["syn::expr::Label"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.MethodTurbofish.html\" title=\"struct syn::MethodTurbofish\">MethodTurbofish</a>","synthetic":true,"types":["syn::expr::MethodTurbofish"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprArray.html\" title=\"struct syn::ExprArray\">ExprArray</a>","synthetic":true,"types":["syn::expr::ExprArray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAssign.html\" title=\"struct syn::ExprAssign\">ExprAssign</a>","synthetic":true,"types":["syn::expr::ExprAssign"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAssignOp.html\" title=\"struct syn::ExprAssignOp\">ExprAssignOp</a>","synthetic":true,"types":["syn::expr::ExprAssignOp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAsync.html\" title=\"struct syn::ExprAsync\">ExprAsync</a>","synthetic":true,"types":["syn::expr::ExprAsync"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAwait.html\" title=\"struct syn::ExprAwait\">ExprAwait</a>","synthetic":true,"types":["syn::expr::ExprAwait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBinary.html\" title=\"struct syn::ExprBinary\">ExprBinary</a>","synthetic":true,"types":["syn::expr::ExprBinary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBlock.html\" title=\"struct syn::ExprBlock\">ExprBlock</a>","synthetic":true,"types":["syn::expr::ExprBlock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBox.html\" title=\"struct syn::ExprBox\">ExprBox</a>","synthetic":true,"types":["syn::expr::ExprBox"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBreak.html\" title=\"struct syn::ExprBreak\">ExprBreak</a>","synthetic":true,"types":["syn::expr::ExprBreak"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprCall.html\" title=\"struct syn::ExprCall\">ExprCall</a>","synthetic":true,"types":["syn::expr::ExprCall"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprCast.html\" title=\"struct syn::ExprCast\">ExprCast</a>","synthetic":true,"types":["syn::expr::ExprCast"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprClosure.html\" title=\"struct syn::ExprClosure\">ExprClosure</a>","synthetic":true,"types":["syn::expr::ExprClosure"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprContinue.html\" title=\"struct syn::ExprContinue\">ExprContinue</a>","synthetic":true,"types":["syn::expr::ExprContinue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprField.html\" title=\"struct syn::ExprField\">ExprField</a>","synthetic":true,"types":["syn::expr::ExprField"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprForLoop.html\" title=\"struct syn::ExprForLoop\">ExprForLoop</a>","synthetic":true,"types":["syn::expr::ExprForLoop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprGroup.html\" title=\"struct syn::ExprGroup\">ExprGroup</a>","synthetic":true,"types":["syn::expr::ExprGroup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprIf.html\" title=\"struct syn::ExprIf\">ExprIf</a>","synthetic":true,"types":["syn::expr::ExprIf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprIndex.html\" title=\"struct syn::ExprIndex\">ExprIndex</a>","synthetic":true,"types":["syn::expr::ExprIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLet.html\" title=\"struct syn::ExprLet\">ExprLet</a>","synthetic":true,"types":["syn::expr::ExprLet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLit.html\" title=\"struct syn::ExprLit\">ExprLit</a>","synthetic":true,"types":["syn::expr::ExprLit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLoop.html\" title=\"struct syn::ExprLoop\">ExprLoop</a>","synthetic":true,"types":["syn::expr::ExprLoop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMacro.html\" title=\"struct syn::ExprMacro\">ExprMacro</a>","synthetic":true,"types":["syn::expr::ExprMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMatch.html\" title=\"struct syn::ExprMatch\">ExprMatch</a>","synthetic":true,"types":["syn::expr::ExprMatch"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMethodCall.html\" title=\"struct syn::ExprMethodCall\">ExprMethodCall</a>","synthetic":true,"types":["syn::expr::ExprMethodCall"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprParen.html\" title=\"struct syn::ExprParen\">ExprParen</a>","synthetic":true,"types":["syn::expr::ExprParen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprPath.html\" title=\"struct syn::ExprPath\">ExprPath</a>","synthetic":true,"types":["syn::expr::ExprPath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprRange.html\" title=\"struct syn::ExprRange\">ExprRange</a>","synthetic":true,"types":["syn::expr::ExprRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprReference.html\" title=\"struct syn::ExprReference\">ExprReference</a>","synthetic":true,"types":["syn::expr::ExprReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprRepeat.html\" title=\"struct syn::ExprRepeat\">ExprRepeat</a>","synthetic":true,"types":["syn::expr::ExprRepeat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprReturn.html\" title=\"struct syn::ExprReturn\">ExprReturn</a>","synthetic":true,"types":["syn::expr::ExprReturn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprStruct.html\" title=\"struct syn::ExprStruct\">ExprStruct</a>","synthetic":true,"types":["syn::expr::ExprStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTry.html\" title=\"struct syn::ExprTry\">ExprTry</a>","synthetic":true,"types":["syn::expr::ExprTry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTryBlock.html\" title=\"struct syn::ExprTryBlock\">ExprTryBlock</a>","synthetic":true,"types":["syn::expr::ExprTryBlock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTuple.html\" title=\"struct syn::ExprTuple\">ExprTuple</a>","synthetic":true,"types":["syn::expr::ExprTuple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprType.html\" title=\"struct syn::ExprType\">ExprType</a>","synthetic":true,"types":["syn::expr::ExprType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprUnary.html\" title=\"struct syn::ExprUnary\">ExprUnary</a>","synthetic":true,"types":["syn::expr::ExprUnary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprUnsafe.html\" title=\"struct syn::ExprUnsafe\">ExprUnsafe</a>","synthetic":true,"types":["syn::expr::ExprUnsafe"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprWhile.html\" title=\"struct syn::ExprWhile\">ExprWhile</a>","synthetic":true,"types":["syn::expr::ExprWhile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprYield.html\" title=\"struct syn::ExprYield\">ExprYield</a>","synthetic":true,"types":["syn::expr::ExprYield"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Index.html\" title=\"struct syn::Index\">Index</a>","synthetic":true,"types":["syn::expr::Index"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.BoundLifetimes.html\" title=\"struct syn::BoundLifetimes\">BoundLifetimes</a>","synthetic":true,"types":["syn::generics::BoundLifetimes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ConstParam.html\" title=\"struct syn::ConstParam\">ConstParam</a>","synthetic":true,"types":["syn::generics::ConstParam"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Generics.html\" title=\"struct syn::Generics\">Generics</a>","synthetic":true,"types":["syn::generics::Generics"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LifetimeDef.html\" title=\"struct syn::LifetimeDef\">LifetimeDef</a>","synthetic":true,"types":["syn::generics::LifetimeDef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateEq.html\" title=\"struct syn::PredicateEq\">PredicateEq</a>","synthetic":true,"types":["syn::generics::PredicateEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateLifetime.html\" title=\"struct syn::PredicateLifetime\">PredicateLifetime</a>","synthetic":true,"types":["syn::generics::PredicateLifetime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateType.html\" title=\"struct syn::PredicateType\">PredicateType</a>","synthetic":true,"types":["syn::generics::PredicateType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitBound.html\" title=\"struct syn::TraitBound\">TraitBound</a>","synthetic":true,"types":["syn::generics::TraitBound"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeParam.html\" title=\"struct syn::TypeParam\">TypeParam</a>","synthetic":true,"types":["syn::generics::TypeParam"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.WhereClause.html\" title=\"struct syn::WhereClause\">WhereClause</a>","synthetic":true,"types":["syn::generics::WhereClause"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.ImplGenerics.html\" title=\"struct syn::ImplGenerics\">ImplGenerics</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::ImplGenerics"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.Turbofish.html\" title=\"struct syn::Turbofish\">Turbofish</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::Turbofish"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.TypeGenerics.html\" title=\"struct syn::TypeGenerics\">TypeGenerics</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::TypeGenerics"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemFn.html\" title=\"struct syn::ForeignItemFn\">ForeignItemFn</a>","synthetic":true,"types":["syn::item::ForeignItemFn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemMacro.html\" title=\"struct syn::ForeignItemMacro\">ForeignItemMacro</a>","synthetic":true,"types":["syn::item::ForeignItemMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemStatic.html\" title=\"struct syn::ForeignItemStatic\">ForeignItemStatic</a>","synthetic":true,"types":["syn::item::ForeignItemStatic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemType.html\" title=\"struct syn::ForeignItemType\">ForeignItemType</a>","synthetic":true,"types":["syn::item::ForeignItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemConst.html\" title=\"struct syn::ImplItemConst\">ImplItemConst</a>","synthetic":true,"types":["syn::item::ImplItemConst"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemMacro.html\" title=\"struct syn::ImplItemMacro\">ImplItemMacro</a>","synthetic":true,"types":["syn::item::ImplItemMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemMethod.html\" title=\"struct syn::ImplItemMethod\">ImplItemMethod</a>","synthetic":true,"types":["syn::item::ImplItemMethod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemType.html\" title=\"struct syn::ImplItemType\">ImplItemType</a>","synthetic":true,"types":["syn::item::ImplItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemConst.html\" title=\"struct syn::ItemConst\">ItemConst</a>","synthetic":true,"types":["syn::item::ItemConst"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemEnum.html\" title=\"struct syn::ItemEnum\">ItemEnum</a>","synthetic":true,"types":["syn::item::ItemEnum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemExternCrate.html\" title=\"struct syn::ItemExternCrate\">ItemExternCrate</a>","synthetic":true,"types":["syn::item::ItemExternCrate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemFn.html\" title=\"struct syn::ItemFn\">ItemFn</a>","synthetic":true,"types":["syn::item::ItemFn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemForeignMod.html\" title=\"struct syn::ItemForeignMod\">ItemForeignMod</a>","synthetic":true,"types":["syn::item::ItemForeignMod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemImpl.html\" title=\"struct syn::ItemImpl\">ItemImpl</a>","synthetic":true,"types":["syn::item::ItemImpl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemMacro.html\" title=\"struct syn::ItemMacro\">ItemMacro</a>","synthetic":true,"types":["syn::item::ItemMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemMacro2.html\" title=\"struct syn::ItemMacro2\">ItemMacro2</a>","synthetic":true,"types":["syn::item::ItemMacro2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemMod.html\" title=\"struct syn::ItemMod\">ItemMod</a>","synthetic":true,"types":["syn::item::ItemMod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemStatic.html\" title=\"struct syn::ItemStatic\">ItemStatic</a>","synthetic":true,"types":["syn::item::ItemStatic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemStruct.html\" title=\"struct syn::ItemStruct\">ItemStruct</a>","synthetic":true,"types":["syn::item::ItemStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemTrait.html\" title=\"struct syn::ItemTrait\">ItemTrait</a>","synthetic":true,"types":["syn::item::ItemTrait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemTraitAlias.html\" title=\"struct syn::ItemTraitAlias\">ItemTraitAlias</a>","synthetic":true,"types":["syn::item::ItemTraitAlias"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemType.html\" title=\"struct syn::ItemType\">ItemType</a>","synthetic":true,"types":["syn::item::ItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemUnion.html\" title=\"struct syn::ItemUnion\">ItemUnion</a>","synthetic":true,"types":["syn::item::ItemUnion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemUse.html\" title=\"struct syn::ItemUse\">ItemUse</a>","synthetic":true,"types":["syn::item::ItemUse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Receiver.html\" title=\"struct syn::Receiver\">Receiver</a>","synthetic":true,"types":["syn::item::Receiver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Signature.html\" title=\"struct syn::Signature\">Signature</a>","synthetic":true,"types":["syn::item::Signature"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemConst.html\" title=\"struct syn::TraitItemConst\">TraitItemConst</a>","synthetic":true,"types":["syn::item::TraitItemConst"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemMacro.html\" title=\"struct syn::TraitItemMacro\">TraitItemMacro</a>","synthetic":true,"types":["syn::item::TraitItemMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemMethod.html\" title=\"struct syn::TraitItemMethod\">TraitItemMethod</a>","synthetic":true,"types":["syn::item::TraitItemMethod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemType.html\" title=\"struct syn::TraitItemType\">TraitItemType</a>","synthetic":true,"types":["syn::item::TraitItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseGlob.html\" title=\"struct syn::UseGlob\">UseGlob</a>","synthetic":true,"types":["syn::item::UseGlob"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseGroup.html\" title=\"struct syn::UseGroup\">UseGroup</a>","synthetic":true,"types":["syn::item::UseGroup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseName.html\" title=\"struct syn::UseName\">UseName</a>","synthetic":true,"types":["syn::item::UseName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UsePath.html\" title=\"struct syn::UsePath\">UsePath</a>","synthetic":true,"types":["syn::item::UsePath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseRename.html\" title=\"struct syn::UseRename\">UseRename</a>","synthetic":true,"types":["syn::item::UseRename"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.File.html\" title=\"struct syn::File\">File</a>","synthetic":true,"types":["syn::file::File"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Lifetime.html\" title=\"struct syn::Lifetime\">Lifetime</a>","synthetic":true,"types":["syn::lifetime::Lifetime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitBool.html\" title=\"struct syn::LitBool\">LitBool</a>","synthetic":true,"types":["syn::lit::LitBool"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitByte.html\" title=\"struct syn::LitByte\">LitByte</a>","synthetic":true,"types":["syn::lit::LitByte"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitByteStr.html\" title=\"struct syn::LitByteStr\">LitByteStr</a>","synthetic":true,"types":["syn::lit::LitByteStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitChar.html\" title=\"struct syn::LitChar\">LitChar</a>","synthetic":true,"types":["syn::lit::LitChar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitFloat.html\" title=\"struct syn::LitFloat\">LitFloat</a>","synthetic":true,"types":["syn::lit::LitFloat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitInt.html\" title=\"struct syn::LitInt\">LitInt</a>","synthetic":true,"types":["syn::lit::LitInt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitStr.html\" title=\"struct syn::LitStr\">LitStr</a>","synthetic":true,"types":["syn::lit::LitStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Macro.html\" title=\"struct syn::Macro\">Macro</a>","synthetic":true,"types":["syn::mac::Macro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataEnum.html\" title=\"struct syn::DataEnum\">DataEnum</a>","synthetic":true,"types":["syn::derive::DataEnum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataStruct.html\" title=\"struct syn::DataStruct\">DataStruct</a>","synthetic":true,"types":["syn::derive::DataStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataUnion.html\" title=\"struct syn::DataUnion\">DataUnion</a>","synthetic":true,"types":["syn::derive::DataUnion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DeriveInput.html\" title=\"struct syn::DeriveInput\">DeriveInput</a>","synthetic":true,"types":["syn::derive::DeriveInput"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Block.html\" title=\"struct syn::Block\">Block</a>","synthetic":true,"types":["syn::stmt::Block"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Local.html\" title=\"struct syn::Local\">Local</a>","synthetic":true,"types":["syn::stmt::Local"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Abi.html\" title=\"struct syn::Abi\">Abi</a>","synthetic":true,"types":["syn::ty::Abi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.BareFnArg.html\" title=\"struct syn::BareFnArg\">BareFnArg</a>","synthetic":true,"types":["syn::ty::BareFnArg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeArray.html\" title=\"struct syn::TypeArray\">TypeArray</a>","synthetic":true,"types":["syn::ty::TypeArray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeBareFn.html\" title=\"struct syn::TypeBareFn\">TypeBareFn</a>","synthetic":true,"types":["syn::ty::TypeBareFn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeGroup.html\" title=\"struct syn::TypeGroup\">TypeGroup</a>","synthetic":true,"types":["syn::ty::TypeGroup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeImplTrait.html\" title=\"struct syn::TypeImplTrait\">TypeImplTrait</a>","synthetic":true,"types":["syn::ty::TypeImplTrait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeInfer.html\" title=\"struct syn::TypeInfer\">TypeInfer</a>","synthetic":true,"types":["syn::ty::TypeInfer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeMacro.html\" title=\"struct syn::TypeMacro\">TypeMacro</a>","synthetic":true,"types":["syn::ty::TypeMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeNever.html\" title=\"struct syn::TypeNever\">TypeNever</a>","synthetic":true,"types":["syn::ty::TypeNever"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeParen.html\" title=\"struct syn::TypeParen\">TypeParen</a>","synthetic":true,"types":["syn::ty::TypeParen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypePath.html\" title=\"struct syn::TypePath\">TypePath</a>","synthetic":true,"types":["syn::ty::TypePath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypePtr.html\" title=\"struct syn::TypePtr\">TypePtr</a>","synthetic":true,"types":["syn::ty::TypePtr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeReference.html\" title=\"struct syn::TypeReference\">TypeReference</a>","synthetic":true,"types":["syn::ty::TypeReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeSlice.html\" title=\"struct syn::TypeSlice\">TypeSlice</a>","synthetic":true,"types":["syn::ty::TypeSlice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeTraitObject.html\" title=\"struct syn::TypeTraitObject\">TypeTraitObject</a>","synthetic":true,"types":["syn::ty::TypeTraitObject"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeTuple.html\" title=\"struct syn::TypeTuple\">TypeTuple</a>","synthetic":true,"types":["syn::ty::TypeTuple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Variadic.html\" title=\"struct syn::Variadic\">Variadic</a>","synthetic":true,"types":["syn::ty::Variadic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldPat.html\" title=\"struct syn::FieldPat\">FieldPat</a>","synthetic":true,"types":["syn::pat::FieldPat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatBox.html\" title=\"struct syn::PatBox\">PatBox</a>","synthetic":true,"types":["syn::pat::PatBox"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatIdent.html\" title=\"struct syn::PatIdent\">PatIdent</a>","synthetic":true,"types":["syn::pat::PatIdent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatLit.html\" title=\"struct syn::PatLit\">PatLit</a>","synthetic":true,"types":["syn::pat::PatLit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatMacro.html\" title=\"struct syn::PatMacro\">PatMacro</a>","synthetic":true,"types":["syn::pat::PatMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatOr.html\" title=\"struct syn::PatOr\">PatOr</a>","synthetic":true,"types":["syn::pat::PatOr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatPath.html\" title=\"struct syn::PatPath\">PatPath</a>","synthetic":true,"types":["syn::pat::PatPath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatRange.html\" title=\"struct syn::PatRange\">PatRange</a>","synthetic":true,"types":["syn::pat::PatRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatReference.html\" title=\"struct syn::PatReference\">PatReference</a>","synthetic":true,"types":["syn::pat::PatReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatRest.html\" title=\"struct syn::PatRest\">PatRest</a>","synthetic":true,"types":["syn::pat::PatRest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatSlice.html\" title=\"struct syn::PatSlice\">PatSlice</a>","synthetic":true,"types":["syn::pat::PatSlice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatStruct.html\" title=\"struct syn::PatStruct\">PatStruct</a>","synthetic":true,"types":["syn::pat::PatStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatTuple.html\" title=\"struct syn::PatTuple\">PatTuple</a>","synthetic":true,"types":["syn::pat::PatTuple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatTupleStruct.html\" title=\"struct syn::PatTupleStruct\">PatTupleStruct</a>","synthetic":true,"types":["syn::pat::PatTupleStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatType.html\" title=\"struct syn::PatType\">PatType</a>","synthetic":true,"types":["syn::pat::PatType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatWild.html\" title=\"struct syn::PatWild\">PatWild</a>","synthetic":true,"types":["syn::pat::PatWild"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.AngleBracketedGenericArguments.html\" title=\"struct syn::AngleBracketedGenericArguments\">AngleBracketedGenericArguments</a>","synthetic":true,"types":["syn::path::AngleBracketedGenericArguments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Binding.html\" title=\"struct syn::Binding\">Binding</a>","synthetic":true,"types":["syn::path::Binding"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Constraint.html\" title=\"struct syn::Constraint\">Constraint</a>","synthetic":true,"types":["syn::path::Constraint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ParenthesizedGenericArguments.html\" title=\"struct syn::ParenthesizedGenericArguments\">ParenthesizedGenericArguments</a>","synthetic":true,"types":["syn::path::ParenthesizedGenericArguments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Path.html\" title=\"struct syn::Path\">Path</a>","synthetic":true,"types":["syn::path::Path"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PathSegment.html\" title=\"struct syn::PathSegment\">PathSegment</a>","synthetic":true,"types":["syn::path::PathSegment"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.QSelf.html\" title=\"struct syn::QSelf\">QSelf</a>","synthetic":true,"types":["syn::path::QSelf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Error.html\" title=\"struct syn::Error\">Error</a>","synthetic":true,"types":["syn::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.AttrStyle.html\" title=\"enum syn::AttrStyle\">AttrStyle</a>","synthetic":true,"types":["syn::attr::AttrStyle"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Meta.html\" title=\"enum syn::Meta\">Meta</a>","synthetic":true,"types":["syn::attr::Meta"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.NestedMeta.html\" title=\"enum syn::NestedMeta\">NestedMeta</a>","synthetic":true,"types":["syn::attr::NestedMeta"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Fields.html\" title=\"enum syn::Fields\">Fields</a>","synthetic":true,"types":["syn::data::Fields"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Visibility.html\" title=\"enum syn::Visibility\">Visibility</a>","synthetic":true,"types":["syn::data::Visibility"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericMethodArgument.html\" title=\"enum syn::GenericMethodArgument\">GenericMethodArgument</a>","synthetic":true,"types":["syn::expr::GenericMethodArgument"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.RangeLimits.html\" title=\"enum syn::RangeLimits\">RangeLimits</a>","synthetic":true,"types":["syn::expr::RangeLimits"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Expr.html\" title=\"enum syn::Expr\">Expr</a>","synthetic":true,"types":["syn::expr::Expr"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Member.html\" title=\"enum syn::Member\">Member</a>","synthetic":true,"types":["syn::expr::Member"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericParam.html\" title=\"enum syn::GenericParam\">GenericParam</a>","synthetic":true,"types":["syn::generics::GenericParam"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.TraitBoundModifier.html\" title=\"enum syn::TraitBoundModifier\">TraitBoundModifier</a>","synthetic":true,"types":["syn::generics::TraitBoundModifier"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.TypeParamBound.html\" title=\"enum syn::TypeParamBound\">TypeParamBound</a>","synthetic":true,"types":["syn::generics::TypeParamBound"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.WherePredicate.html\" title=\"enum syn::WherePredicate\">WherePredicate</a>","synthetic":true,"types":["syn::generics::WherePredicate"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.FnArg.html\" title=\"enum syn::FnArg\">FnArg</a>","synthetic":true,"types":["syn::item::FnArg"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.ForeignItem.html\" title=\"enum syn::ForeignItem\">ForeignItem</a>","synthetic":true,"types":["syn::item::ForeignItem"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.ImplItem.html\" title=\"enum syn::ImplItem\">ImplItem</a>","synthetic":true,"types":["syn::item::ImplItem"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Item.html\" title=\"enum syn::Item\">Item</a>","synthetic":true,"types":["syn::item::Item"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.TraitItem.html\" title=\"enum syn::TraitItem\">TraitItem</a>","synthetic":true,"types":["syn::item::TraitItem"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.UseTree.html\" title=\"enum syn::UseTree\">UseTree</a>","synthetic":true,"types":["syn::item::UseTree"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Lit.html\" title=\"enum syn::Lit\">Lit</a>","synthetic":true,"types":["syn::lit::Lit"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.StrStyle.html\" title=\"enum syn::StrStyle\">StrStyle</a>","synthetic":true,"types":["syn::lit::StrStyle"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.MacroDelimiter.html\" title=\"enum syn::MacroDelimiter\">MacroDelimiter</a>","synthetic":true,"types":["syn::mac::MacroDelimiter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Data.html\" title=\"enum syn::Data\">Data</a>","synthetic":true,"types":["syn::derive::Data"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.BinOp.html\" title=\"enum syn::BinOp\">BinOp</a>","synthetic":true,"types":["syn::op::BinOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.UnOp.html\" title=\"enum syn::UnOp\">UnOp</a>","synthetic":true,"types":["syn::op::UnOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Stmt.html\" title=\"enum syn::Stmt\">Stmt</a>","synthetic":true,"types":["syn::stmt::Stmt"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.ReturnType.html\" title=\"enum syn::ReturnType\">ReturnType</a>","synthetic":true,"types":["syn::ty::ReturnType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Type.html\" title=\"enum syn::Type\">Type</a>","synthetic":true,"types":["syn::ty::Type"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Pat.html\" title=\"enum syn::Pat\">Pat</a>","synthetic":true,"types":["syn::pat::Pat"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericArgument.html\" title=\"enum syn::GenericArgument\">GenericArgument</a>","synthetic":true,"types":["syn::path::GenericArgument"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.PathArguments.html\" title=\"enum syn::PathArguments\">PathArguments</a>","synthetic":true,"types":["syn::path::PathArguments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Underscore.html\" title=\"struct syn::token::Underscore\">Underscore</a>","synthetic":true,"types":["syn::token::Underscore"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Abstract.html\" title=\"struct syn::token::Abstract\">Abstract</a>","synthetic":true,"types":["syn::token::Abstract"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.As.html\" title=\"struct syn::token::As\">As</a>","synthetic":true,"types":["syn::token::As"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Async.html\" title=\"struct syn::token::Async\">Async</a>","synthetic":true,"types":["syn::token::Async"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Auto.html\" title=\"struct syn::token::Auto\">Auto</a>","synthetic":true,"types":["syn::token::Auto"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Await.html\" title=\"struct syn::token::Await\">Await</a>","synthetic":true,"types":["syn::token::Await"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Become.html\" title=\"struct syn::token::Become\">Become</a>","synthetic":true,"types":["syn::token::Become"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Box.html\" title=\"struct syn::token::Box\">Box</a>","synthetic":true,"types":["syn::token::Box"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Break.html\" title=\"struct syn::token::Break\">Break</a>","synthetic":true,"types":["syn::token::Break"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Const.html\" title=\"struct syn::token::Const\">Const</a>","synthetic":true,"types":["syn::token::Const"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Continue.html\" title=\"struct syn::token::Continue\">Continue</a>","synthetic":true,"types":["syn::token::Continue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Crate.html\" title=\"struct syn::token::Crate\">Crate</a>","synthetic":true,"types":["syn::token::Crate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Default.html\" title=\"struct syn::token::Default\">Default</a>","synthetic":true,"types":["syn::token::Default"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Do.html\" title=\"struct syn::token::Do\">Do</a>","synthetic":true,"types":["syn::token::Do"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dyn.html\" title=\"struct syn::token::Dyn\">Dyn</a>","synthetic":true,"types":["syn::token::Dyn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Else.html\" title=\"struct syn::token::Else\">Else</a>","synthetic":true,"types":["syn::token::Else"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Enum.html\" title=\"struct syn::token::Enum\">Enum</a>","synthetic":true,"types":["syn::token::Enum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Extern.html\" title=\"struct syn::token::Extern\">Extern</a>","synthetic":true,"types":["syn::token::Extern"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Final.html\" title=\"struct syn::token::Final\">Final</a>","synthetic":true,"types":["syn::token::Final"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Fn.html\" title=\"struct syn::token::Fn\">Fn</a>","synthetic":true,"types":["syn::token::Fn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.For.html\" title=\"struct syn::token::For\">For</a>","synthetic":true,"types":["syn::token::For"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.If.html\" title=\"struct syn::token::If\">If</a>","synthetic":true,"types":["syn::token::If"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Impl.html\" title=\"struct syn::token::Impl\">Impl</a>","synthetic":true,"types":["syn::token::Impl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.In.html\" title=\"struct syn::token::In\">In</a>","synthetic":true,"types":["syn::token::In"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Let.html\" title=\"struct syn::token::Let\">Let</a>","synthetic":true,"types":["syn::token::Let"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Loop.html\" title=\"struct syn::token::Loop\">Loop</a>","synthetic":true,"types":["syn::token::Loop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Macro.html\" title=\"struct syn::token::Macro\">Macro</a>","synthetic":true,"types":["syn::token::Macro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Match.html\" title=\"struct syn::token::Match\">Match</a>","synthetic":true,"types":["syn::token::Match"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Mod.html\" title=\"struct syn::token::Mod\">Mod</a>","synthetic":true,"types":["syn::token::Mod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Move.html\" title=\"struct syn::token::Move\">Move</a>","synthetic":true,"types":["syn::token::Move"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Mut.html\" title=\"struct syn::token::Mut\">Mut</a>","synthetic":true,"types":["syn::token::Mut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Override.html\" title=\"struct syn::token::Override\">Override</a>","synthetic":true,"types":["syn::token::Override"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Priv.html\" title=\"struct syn::token::Priv\">Priv</a>","synthetic":true,"types":["syn::token::Priv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Pub.html\" title=\"struct syn::token::Pub\">Pub</a>","synthetic":true,"types":["syn::token::Pub"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ref.html\" title=\"struct syn::token::Ref\">Ref</a>","synthetic":true,"types":["syn::token::Ref"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Return.html\" title=\"struct syn::token::Return\">Return</a>","synthetic":true,"types":["syn::token::Return"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SelfType.html\" title=\"struct syn::token::SelfType\">SelfType</a>","synthetic":true,"types":["syn::token::SelfType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SelfValue.html\" title=\"struct syn::token::SelfValue\">SelfValue</a>","synthetic":true,"types":["syn::token::SelfValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Static.html\" title=\"struct syn::token::Static\">Static</a>","synthetic":true,"types":["syn::token::Static"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Struct.html\" title=\"struct syn::token::Struct\">Struct</a>","synthetic":true,"types":["syn::token::Struct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Super.html\" title=\"struct syn::token::Super\">Super</a>","synthetic":true,"types":["syn::token::Super"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Trait.html\" title=\"struct syn::token::Trait\">Trait</a>","synthetic":true,"types":["syn::token::Trait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Try.html\" title=\"struct syn::token::Try\">Try</a>","synthetic":true,"types":["syn::token::Try"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Type.html\" title=\"struct syn::token::Type\">Type</a>","synthetic":true,"types":["syn::token::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Typeof.html\" title=\"struct syn::token::Typeof\">Typeof</a>","synthetic":true,"types":["syn::token::Typeof"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Union.html\" title=\"struct syn::token::Union\">Union</a>","synthetic":true,"types":["syn::token::Union"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Unsafe.html\" title=\"struct syn::token::Unsafe\">Unsafe</a>","synthetic":true,"types":["syn::token::Unsafe"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Unsized.html\" title=\"struct syn::token::Unsized\">Unsized</a>","synthetic":true,"types":["syn::token::Unsized"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Use.html\" title=\"struct syn::token::Use\">Use</a>","synthetic":true,"types":["syn::token::Use"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Virtual.html\" title=\"struct syn::token::Virtual\">Virtual</a>","synthetic":true,"types":["syn::token::Virtual"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Where.html\" title=\"struct syn::token::Where\">Where</a>","synthetic":true,"types":["syn::token::Where"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.While.html\" title=\"struct syn::token::While\">While</a>","synthetic":true,"types":["syn::token::While"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Yield.html\" title=\"struct syn::token::Yield\">Yield</a>","synthetic":true,"types":["syn::token::Yield"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Add.html\" title=\"struct syn::token::Add\">Add</a>","synthetic":true,"types":["syn::token::Add"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AddEq.html\" title=\"struct syn::token::AddEq\">AddEq</a>","synthetic":true,"types":["syn::token::AddEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.And.html\" title=\"struct syn::token::And\">And</a>","synthetic":true,"types":["syn::token::And"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AndAnd.html\" title=\"struct syn::token::AndAnd\">AndAnd</a>","synthetic":true,"types":["syn::token::AndAnd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AndEq.html\" title=\"struct syn::token::AndEq\">AndEq</a>","synthetic":true,"types":["syn::token::AndEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.At.html\" title=\"struct syn::token::At\">At</a>","synthetic":true,"types":["syn::token::At"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Bang.html\" title=\"struct syn::token::Bang\">Bang</a>","synthetic":true,"types":["syn::token::Bang"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Caret.html\" title=\"struct syn::token::Caret\">Caret</a>","synthetic":true,"types":["syn::token::Caret"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.CaretEq.html\" title=\"struct syn::token::CaretEq\">CaretEq</a>","synthetic":true,"types":["syn::token::CaretEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Colon.html\" title=\"struct syn::token::Colon\">Colon</a>","synthetic":true,"types":["syn::token::Colon"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Colon2.html\" title=\"struct syn::token::Colon2\">Colon2</a>","synthetic":true,"types":["syn::token::Colon2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Comma.html\" title=\"struct syn::token::Comma\">Comma</a>","synthetic":true,"types":["syn::token::Comma"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Div.html\" title=\"struct syn::token::Div\">Div</a>","synthetic":true,"types":["syn::token::Div"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.DivEq.html\" title=\"struct syn::token::DivEq\">DivEq</a>","synthetic":true,"types":["syn::token::DivEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dollar.html\" title=\"struct syn::token::Dollar\">Dollar</a>","synthetic":true,"types":["syn::token::Dollar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot.html\" title=\"struct syn::token::Dot\">Dot</a>","synthetic":true,"types":["syn::token::Dot"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot2.html\" title=\"struct syn::token::Dot2\">Dot2</a>","synthetic":true,"types":["syn::token::Dot2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot3.html\" title=\"struct syn::token::Dot3\">Dot3</a>","synthetic":true,"types":["syn::token::Dot3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.DotDotEq.html\" title=\"struct syn::token::DotDotEq\">DotDotEq</a>","synthetic":true,"types":["syn::token::DotDotEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Eq.html\" title=\"struct syn::token::Eq\">Eq</a>","synthetic":true,"types":["syn::token::Eq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.EqEq.html\" title=\"struct syn::token::EqEq\">EqEq</a>","synthetic":true,"types":["syn::token::EqEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ge.html\" title=\"struct syn::token::Ge\">Ge</a>","synthetic":true,"types":["syn::token::Ge"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Gt.html\" title=\"struct syn::token::Gt\">Gt</a>","synthetic":true,"types":["syn::token::Gt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Le.html\" title=\"struct syn::token::Le\">Le</a>","synthetic":true,"types":["syn::token::Le"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Lt.html\" title=\"struct syn::token::Lt\">Lt</a>","synthetic":true,"types":["syn::token::Lt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.MulEq.html\" title=\"struct syn::token::MulEq\">MulEq</a>","synthetic":true,"types":["syn::token::MulEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ne.html\" title=\"struct syn::token::Ne\">Ne</a>","synthetic":true,"types":["syn::token::Ne"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Or.html\" title=\"struct syn::token::Or\">Or</a>","synthetic":true,"types":["syn::token::Or"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.OrEq.html\" title=\"struct syn::token::OrEq\">OrEq</a>","synthetic":true,"types":["syn::token::OrEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.OrOr.html\" title=\"struct syn::token::OrOr\">OrOr</a>","synthetic":true,"types":["syn::token::OrOr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Pound.html\" title=\"struct syn::token::Pound\">Pound</a>","synthetic":true,"types":["syn::token::Pound"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Question.html\" title=\"struct syn::token::Question\">Question</a>","synthetic":true,"types":["syn::token::Question"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.RArrow.html\" title=\"struct syn::token::RArrow\">RArrow</a>","synthetic":true,"types":["syn::token::RArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.LArrow.html\" title=\"struct syn::token::LArrow\">LArrow</a>","synthetic":true,"types":["syn::token::LArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Rem.html\" title=\"struct syn::token::Rem\">Rem</a>","synthetic":true,"types":["syn::token::Rem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.RemEq.html\" title=\"struct syn::token::RemEq\">RemEq</a>","synthetic":true,"types":["syn::token::RemEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.FatArrow.html\" title=\"struct syn::token::FatArrow\">FatArrow</a>","synthetic":true,"types":["syn::token::FatArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Semi.html\" title=\"struct syn::token::Semi\">Semi</a>","synthetic":true,"types":["syn::token::Semi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Shl.html\" title=\"struct syn::token::Shl\">Shl</a>","synthetic":true,"types":["syn::token::Shl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.ShlEq.html\" title=\"struct syn::token::ShlEq\">ShlEq</a>","synthetic":true,"types":["syn::token::ShlEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Shr.html\" title=\"struct syn::token::Shr\">Shr</a>","synthetic":true,"types":["syn::token::Shr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.ShrEq.html\" title=\"struct syn::token::ShrEq\">ShrEq</a>","synthetic":true,"types":["syn::token::ShrEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Star.html\" title=\"struct syn::token::Star\">Star</a>","synthetic":true,"types":["syn::token::Star"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Sub.html\" title=\"struct syn::token::Sub\">Sub</a>","synthetic":true,"types":["syn::token::Sub"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SubEq.html\" title=\"struct syn::token::SubEq\">SubEq</a>","synthetic":true,"types":["syn::token::SubEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Tilde.html\" title=\"struct syn::token::Tilde\">Tilde</a>","synthetic":true,"types":["syn::token::Tilde"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Brace.html\" title=\"struct syn::token::Brace\">Brace</a>","synthetic":true,"types":["syn::token::Brace"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Bracket.html\" title=\"struct syn::token::Bracket\">Bracket</a>","synthetic":true,"types":["syn::token::Bracket"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Paren.html\" title=\"struct syn::token::Paren\">Paren</a>","synthetic":true,"types":["syn::token::Paren"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Group.html\" title=\"struct syn::token::Group\">Group</a>","synthetic":true,"types":["syn::token::Group"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/buffer/struct.TokenBuffer.html\" title=\"struct syn::buffer::TokenBuffer\">TokenBuffer</a>","synthetic":true,"types":["syn::buffer::TokenBuffer"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/buffer/struct.Cursor.html\" title=\"struct syn::buffer::Cursor\">Cursor</a>&lt;'a&gt;","synthetic":true,"types":["syn::buffer::Cursor"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Punctuated.html\" title=\"struct syn::punctuated::Punctuated\">Punctuated</a>&lt;T, P&gt;","synthetic":true,"types":["syn::punctuated::Punctuated"]},{"text":"impl&lt;'a, T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Pairs.html\" title=\"struct syn::punctuated::Pairs\">Pairs</a>&lt;'a, T, P&gt;","synthetic":true,"types":["syn::punctuated::Pairs"]},{"text":"impl&lt;'a, T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.PairsMut.html\" title=\"struct syn::punctuated::PairsMut\">PairsMut</a>&lt;'a, T, P&gt;","synthetic":true,"types":["syn::punctuated::PairsMut"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IntoPairs.html\" title=\"struct syn::punctuated::IntoPairs\">IntoPairs</a>&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["syn::punctuated::IntoPairs"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IntoIter.html\" title=\"struct syn::punctuated::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["syn::punctuated::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Iter.html\" title=\"struct syn::punctuated::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["syn::punctuated::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IterMut.html\" title=\"struct syn::punctuated::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["syn::punctuated::IterMut"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"enum\" href=\"syn/punctuated/enum.Pair.html\" title=\"enum syn::punctuated::Pair\">Pair</a>&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["syn::punctuated::Pair"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"syn/parse/struct.Lookahead1.html\" title=\"struct syn::parse::Lookahead1\">Lookahead1</a>&lt;'a&gt;","synthetic":true,"types":["syn::lookahead::Lookahead1"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"syn/parse/struct.ParseBuffer.html\" title=\"struct syn::parse::ParseBuffer\">ParseBuffer</a>&lt;'a&gt;","synthetic":true,"types":["syn::parse::ParseBuffer"]},{"text":"impl&lt;'c, 'a&gt; Freeze for <a class=\"struct\" href=\"syn/parse/struct.StepCursor.html\" title=\"struct syn::parse::StepCursor\">StepCursor</a>&lt;'c, 'a&gt;","synthetic":true,"types":["syn::parse::StepCursor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/parse/struct.Nothing.html\" title=\"struct syn::parse::Nothing\">Nothing</a>","synthetic":true,"types":["syn::parse::Nothing"]}];
implementors["teaclave_attestation"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_attestation/struct.AttestationServiceConfig.html\" title=\"struct teaclave_attestation::AttestationServiceConfig\">AttestationServiceConfig</a>","synthetic":true,"types":["teaclave_attestation::AttestationServiceConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_attestation/struct.DcapConfig.html\" title=\"struct teaclave_attestation::DcapConfig\">DcapConfig</a>","synthetic":true,"types":["teaclave_attestation::DcapConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_attestation/struct.AttestedTlsConfig.html\" title=\"struct teaclave_attestation::AttestedTlsConfig\">AttestedTlsConfig</a>","synthetic":true,"types":["teaclave_attestation::AttestedTlsConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_attestation/struct.RemoteAttestation.html\" title=\"struct teaclave_attestation::RemoteAttestation\">RemoteAttestation</a>","synthetic":true,"types":["teaclave_attestation::attestation::RemoteAttestation"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_attestation/enum.AttestationError.html\" title=\"enum teaclave_attestation::AttestationError\">AttestationError</a>","synthetic":true,"types":["teaclave_attestation::AttestationError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_attestation/enum.AttestationConfig.html\" title=\"enum teaclave_attestation::AttestationConfig\">AttestationConfig</a>","synthetic":true,"types":["teaclave_attestation::AttestationConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_attestation/report/struct.SgxEnclaveReport.html\" title=\"struct teaclave_attestation::report::SgxEnclaveReport\">SgxEnclaveReport</a>","synthetic":true,"types":["teaclave_attestation::report::SgxEnclaveReport"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_attestation/report/struct.SgxQuote.html\" title=\"struct teaclave_attestation::report::SgxQuote\">SgxQuote</a>","synthetic":true,"types":["teaclave_attestation::report::SgxQuote"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_attestation/report/struct.AttestationReport.html\" title=\"struct teaclave_attestation::report::AttestationReport\">AttestationReport</a>","synthetic":true,"types":["teaclave_attestation::report::AttestationReport"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_attestation/report/enum.SgxQuoteVersion.html\" title=\"enum teaclave_attestation::report::SgxQuoteVersion\">SgxQuoteVersion</a>","synthetic":true,"types":["teaclave_attestation::report::SgxQuoteVersion"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_attestation/report/enum.SgxEpidQuoteSigType.html\" title=\"enum teaclave_attestation::report::SgxEpidQuoteSigType\">SgxEpidQuoteSigType</a>","synthetic":true,"types":["teaclave_attestation::report::SgxEpidQuoteSigType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_attestation/report/enum.SgxEcdsaQuoteAkType.html\" title=\"enum teaclave_attestation::report::SgxEcdsaQuoteAkType\">SgxEcdsaQuoteAkType</a>","synthetic":true,"types":["teaclave_attestation::report::SgxEcdsaQuoteAkType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_attestation/report/enum.SgxQuoteStatus.html\" title=\"enum teaclave_attestation::report::SgxQuoteStatus\">SgxQuoteStatus</a>","synthetic":true,"types":["teaclave_attestation::report::SgxQuoteStatus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_attestation/verifier/struct.AttestationReportVerifier.html\" title=\"struct teaclave_attestation::verifier::AttestationReportVerifier\">AttestationReportVerifier</a>","synthetic":true,"types":["teaclave_attestation::verifier::AttestationReportVerifier"]}];
implementors["teaclave_binder"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_binder/ipc/struct.ECallReceiver.html\" title=\"struct teaclave_binder::ipc::ECallReceiver\">ECallReceiver</a>","synthetic":true,"types":["teaclave_binder::ipc::enclave::ECallReceiver"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_binder/ipc/enum.IpcError.html\" title=\"enum teaclave_binder::ipc::IpcError\">IpcError</a>","synthetic":true,"types":["teaclave_binder::ipc::IpcError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_binder/proto/struct.StartServiceInput.html\" title=\"struct teaclave_binder::proto::StartServiceInput\">StartServiceInput</a>","synthetic":true,"types":["teaclave_binder::proto::StartServiceInput"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_binder/proto/struct.StartServiceOutput.html\" title=\"struct teaclave_binder::proto::StartServiceOutput\">StartServiceOutput</a>","synthetic":true,"types":["teaclave_binder::proto::StartServiceOutput"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_binder/proto/struct.InitEnclaveInput.html\" title=\"struct teaclave_binder::proto::InitEnclaveInput\">InitEnclaveInput</a>","synthetic":true,"types":["teaclave_binder::proto::InitEnclaveInput"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_binder/proto/struct.InitEnclaveOutput.html\" title=\"struct teaclave_binder::proto::InitEnclaveOutput\">InitEnclaveOutput</a>","synthetic":true,"types":["teaclave_binder::proto::InitEnclaveOutput"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_binder/proto/struct.FinalizeEnclaveInput.html\" title=\"struct teaclave_binder::proto::FinalizeEnclaveInput\">FinalizeEnclaveInput</a>","synthetic":true,"types":["teaclave_binder::proto::FinalizeEnclaveInput"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_binder/proto/struct.FinalizeEnclaveOutput.html\" title=\"struct teaclave_binder::proto::FinalizeEnclaveOutput\">FinalizeEnclaveOutput</a>","synthetic":true,"types":["teaclave_binder::proto::FinalizeEnclaveOutput"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_binder/proto/struct.RunTestInput.html\" title=\"struct teaclave_binder::proto::RunTestInput\">RunTestInput</a>","synthetic":true,"types":["teaclave_binder::proto::RunTestInput"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_binder/proto/struct.RunTestOutput.html\" title=\"struct teaclave_binder::proto::RunTestOutput\">RunTestOutput</a>","synthetic":true,"types":["teaclave_binder::proto::RunTestOutput"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_binder/proto/enum.ECallCommand.html\" title=\"enum teaclave_binder::proto::ECallCommand\">ECallCommand</a>","synthetic":true,"types":["teaclave_binder::proto::ECallCommand"]}];
implementors["teaclave_config"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_config/struct.RuntimeConfig.html\" title=\"struct teaclave_config::RuntimeConfig\">RuntimeConfig</a>","synthetic":true,"types":["teaclave_config::runtime::RuntimeConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_config/build/struct.BuildConfig.html\" title=\"struct teaclave_config::build::BuildConfig\">BuildConfig</a>","synthetic":true,"types":["teaclave_config::build::BuildConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_config/build/struct.Inbounds.html\" title=\"struct teaclave_config::build::Inbounds\">Inbounds</a>","synthetic":true,"types":["teaclave_config::build::Inbounds"]}];
implementors["teaclave_crypto"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_crypto/struct.AesGcm256Key.html\" title=\"struct teaclave_crypto::AesGcm256Key\">AesGcm256Key</a>","synthetic":true,"types":["teaclave_crypto::AesGcm256Key"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_crypto/struct.AesGcm128Key.html\" title=\"struct teaclave_crypto::AesGcm128Key\">AesGcm128Key</a>","synthetic":true,"types":["teaclave_crypto::AesGcm128Key"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_crypto/struct.TeaclaveFile128Key.html\" title=\"struct teaclave_crypto::TeaclaveFile128Key\">TeaclaveFile128Key</a>","synthetic":true,"types":["teaclave_crypto::TeaclaveFile128Key"]}];
implementors["teaclave_executor"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_executor/struct.BuiltinFunctionExecutor.html\" title=\"struct teaclave_executor::BuiltinFunctionExecutor\">BuiltinFunctionExecutor</a>","synthetic":true,"types":["teaclave_executor::builtin::BuiltinFunctionExecutor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_executor/struct.MesaPy.html\" title=\"struct teaclave_executor::MesaPy\">MesaPy</a>","synthetic":true,"types":["teaclave_executor::mesapy::MesaPy"]}];
implementors["teaclave_function"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_function/struct.Echo.html\" title=\"struct teaclave_function::Echo\">Echo</a>","synthetic":true,"types":["teaclave_function::echo::Echo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_function/struct.GbdtPredict.html\" title=\"struct teaclave_function::GbdtPredict\">GbdtPredict</a>","synthetic":true,"types":["teaclave_function::gbdt_predict::GbdtPredict"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_function/struct.GbdtTrain.html\" title=\"struct teaclave_function::GbdtTrain\">GbdtTrain</a>","synthetic":true,"types":["teaclave_function::gbdt_train::GbdtTrain"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_function/struct.LogisticRegressionPredict.html\" title=\"struct teaclave_function::LogisticRegressionPredict\">LogisticRegressionPredict</a>","synthetic":true,"types":["teaclave_function::logistic_regression_predict::LogisticRegressionPredict"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_function/struct.LogisticRegressionTrain.html\" title=\"struct teaclave_function::LogisticRegressionTrain\">LogisticRegressionTrain</a>","synthetic":true,"types":["teaclave_function::logistic_regression_train::LogisticRegressionTrain"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_function/struct.OnlineDecrypt.html\" title=\"struct teaclave_function::OnlineDecrypt\">OnlineDecrypt</a>","synthetic":true,"types":["teaclave_function::online_decrypt::OnlineDecrypt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_function/struct.OrderedSetIntersect.html\" title=\"struct teaclave_function::OrderedSetIntersect\">OrderedSetIntersect</a>","synthetic":true,"types":["teaclave_function::ordered_set_intersect::OrderedSetIntersect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_function/struct.PrivateJoinAndCompute.html\" title=\"struct teaclave_function::PrivateJoinAndCompute\">PrivateJoinAndCompute</a>","synthetic":true,"types":["teaclave_function::private_join_and_compute::PrivateJoinAndCompute"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_function/struct.RsaSign.html\" title=\"struct teaclave_function::RsaSign\">RsaSign</a>","synthetic":true,"types":["teaclave_function::rsa_sign::RsaSign"]}];
implementors["teaclave_proto"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_access_control_service/struct.AuthorizeDataRequest.html\" title=\"struct teaclave_proto::teaclave_access_control_service::AuthorizeDataRequest\">AuthorizeDataRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_access_control_service::AuthorizeDataRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_access_control_service/struct.AuthorizeDataResponse.html\" title=\"struct teaclave_proto::teaclave_access_control_service::AuthorizeDataResponse\">AuthorizeDataResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_access_control_service::AuthorizeDataResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_access_control_service/struct.AuthorizeFunctionRequest.html\" title=\"struct teaclave_proto::teaclave_access_control_service::AuthorizeFunctionRequest\">AuthorizeFunctionRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_access_control_service::AuthorizeFunctionRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_access_control_service/struct.AuthorizeFunctionResponse.html\" title=\"struct teaclave_proto::teaclave_access_control_service::AuthorizeFunctionResponse\">AuthorizeFunctionResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_access_control_service::AuthorizeFunctionResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_access_control_service/struct.AuthorizeTaskRequest.html\" title=\"struct teaclave_proto::teaclave_access_control_service::AuthorizeTaskRequest\">AuthorizeTaskRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_access_control_service::AuthorizeTaskRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_access_control_service/struct.AuthorizeTaskResponse.html\" title=\"struct teaclave_proto::teaclave_access_control_service::AuthorizeTaskResponse\">AuthorizeTaskResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_access_control_service::AuthorizeTaskResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_access_control_service/struct.AuthorizeStagedTaskRequest.html\" title=\"struct teaclave_proto::teaclave_access_control_service::AuthorizeStagedTaskRequest\">AuthorizeStagedTaskRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_access_control_service::AuthorizeStagedTaskRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_access_control_service/struct.AuthorizeStagedTaskResponse.html\" title=\"struct teaclave_proto::teaclave_access_control_service::AuthorizeStagedTaskResponse\">AuthorizeStagedTaskResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_access_control_service::AuthorizeStagedTaskResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_authentication_service/struct.UserRegisterRequest.html\" title=\"struct teaclave_proto::teaclave_authentication_service::UserRegisterRequest\">UserRegisterRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_authentication_service::UserRegisterRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_authentication_service/struct.UserRegisterResponse.html\" title=\"struct teaclave_proto::teaclave_authentication_service::UserRegisterResponse\">UserRegisterResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_authentication_service::UserRegisterResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_authentication_service/struct.UserLoginRequest.html\" title=\"struct teaclave_proto::teaclave_authentication_service::UserLoginRequest\">UserLoginRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_authentication_service::UserLoginRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_authentication_service/struct.UserLoginResponse.html\" title=\"struct teaclave_proto::teaclave_authentication_service::UserLoginResponse\">UserLoginResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_authentication_service::UserLoginResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_authentication_service/struct.UserAuthenticateRequest.html\" title=\"struct teaclave_proto::teaclave_authentication_service::UserAuthenticateRequest\">UserAuthenticateRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_authentication_service::UserAuthenticateRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_authentication_service/struct.UserAuthenticateResponse.html\" title=\"struct teaclave_proto::teaclave_authentication_service::UserAuthenticateResponse\">UserAuthenticateResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_authentication_service::UserAuthenticateResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_common/struct.UserCredential.html\" title=\"struct teaclave_proto::teaclave_common::UserCredential\">UserCredential</a>","synthetic":true,"types":["teaclave_proto::teaclave_common::UserCredential"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.RegisterInputFileRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service::RegisterInputFileRequest\">RegisterInputFileRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::RegisterInputFileRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.UpdateInputFileRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service::UpdateInputFileRequest\">UpdateInputFileRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::UpdateInputFileRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.RegisterInputFileResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service::RegisterInputFileResponse\">RegisterInputFileResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::RegisterInputFileResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.UpdateInputFileResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service::UpdateInputFileResponse\">UpdateInputFileResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::UpdateInputFileResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.RegisterOutputFileRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service::RegisterOutputFileRequest\">RegisterOutputFileRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::RegisterOutputFileRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.UpdateOutputFileRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service::UpdateOutputFileRequest\">UpdateOutputFileRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::UpdateOutputFileRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.RegisterOutputFileResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service::RegisterOutputFileResponse\">RegisterOutputFileResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::RegisterOutputFileResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.UpdateOutputFileResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service::UpdateOutputFileResponse\">UpdateOutputFileResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::UpdateOutputFileResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.RegisterFusionOutputRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service::RegisterFusionOutputRequest\">RegisterFusionOutputRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::RegisterFusionOutputRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.RegisterFusionOutputResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service::RegisterFusionOutputResponse\">RegisterFusionOutputResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::RegisterFusionOutputResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.RegisterInputFromOutputRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service::RegisterInputFromOutputRequest\">RegisterInputFromOutputRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::RegisterInputFromOutputRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.RegisterInputFromOutputResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service::RegisterInputFromOutputResponse\">RegisterInputFromOutputResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::RegisterInputFromOutputResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.GetInputFileRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service::GetInputFileRequest\">GetInputFileRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::GetInputFileRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.GetInputFileResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service::GetInputFileResponse\">GetInputFileResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::GetInputFileResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.GetOutputFileRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service::GetOutputFileRequest\">GetOutputFileRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::GetOutputFileRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.GetOutputFileResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service::GetOutputFileResponse\">GetOutputFileResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::GetOutputFileResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.RegisterFunctionRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service::RegisterFunctionRequest\">RegisterFunctionRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::RegisterFunctionRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.RegisterFunctionResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service::RegisterFunctionResponse\">RegisterFunctionResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::RegisterFunctionResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.GetFunctionRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service::GetFunctionRequest\">GetFunctionRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::GetFunctionRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.GetFunctionResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service::GetFunctionResponse\">GetFunctionResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::GetFunctionResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.CreateTaskRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service::CreateTaskRequest\">CreateTaskRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::CreateTaskRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.CreateTaskResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service::CreateTaskResponse\">CreateTaskResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::CreateTaskResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.GetTaskRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service::GetTaskRequest\">GetTaskRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::GetTaskRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.GetTaskResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service::GetTaskResponse\">GetTaskResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::GetTaskResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.AssignDataRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service::AssignDataRequest\">AssignDataRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::AssignDataRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.AssignDataResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service::AssignDataResponse\">AssignDataResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::AssignDataResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.ApproveTaskRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service::ApproveTaskRequest\">ApproveTaskRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::ApproveTaskRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.ApproveTaskResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service::ApproveTaskResponse\">ApproveTaskResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::ApproveTaskResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.InvokeTaskRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service::InvokeTaskRequest\">InvokeTaskRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::InvokeTaskRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service/struct.InvokeTaskResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service::InvokeTaskResponse\">InvokeTaskResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service::InvokeTaskResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_scheduler_service/struct.SubscribeRequest.html\" title=\"struct teaclave_proto::teaclave_scheduler_service::SubscribeRequest\">SubscribeRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_scheduler_service::SubscribeRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_scheduler_service/struct.SubscribeResponse.html\" title=\"struct teaclave_proto::teaclave_scheduler_service::SubscribeResponse\">SubscribeResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_scheduler_service::SubscribeResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_scheduler_service/struct.PullTaskRequest.html\" title=\"struct teaclave_proto::teaclave_scheduler_service::PullTaskRequest\">PullTaskRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_scheduler_service::PullTaskRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_scheduler_service/struct.PullTaskResponse.html\" title=\"struct teaclave_proto::teaclave_scheduler_service::PullTaskResponse\">PullTaskResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_scheduler_service::PullTaskResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_scheduler_service/struct.UpdateTaskResultRequest.html\" title=\"struct teaclave_proto::teaclave_scheduler_service::UpdateTaskResultRequest\">UpdateTaskResultRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_scheduler_service::UpdateTaskResultRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_scheduler_service/struct.UpdateTaskResultResponse.html\" title=\"struct teaclave_proto::teaclave_scheduler_service::UpdateTaskResultResponse\">UpdateTaskResultResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_scheduler_service::UpdateTaskResultResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_scheduler_service/struct.UpdateTaskStatusRequest.html\" title=\"struct teaclave_proto::teaclave_scheduler_service::UpdateTaskStatusRequest\">UpdateTaskStatusRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_scheduler_service::UpdateTaskStatusRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_scheduler_service/struct.UpdateTaskStatusResponse.html\" title=\"struct teaclave_proto::teaclave_scheduler_service::UpdateTaskStatusResponse\">UpdateTaskStatusResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_scheduler_service::UpdateTaskStatusResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_scheduler_service/struct.PublishTaskRequest.html\" title=\"struct teaclave_proto::teaclave_scheduler_service::PublishTaskRequest\">PublishTaskRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_scheduler_service::PublishTaskRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_scheduler_service/struct.PublishTaskResponse.html\" title=\"struct teaclave_proto::teaclave_scheduler_service::PublishTaskResponse\">PublishTaskResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_scheduler_service::PublishTaskResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_storage_service/struct.GetRequest.html\" title=\"struct teaclave_proto::teaclave_storage_service::GetRequest\">GetRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_storage_service::GetRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_storage_service/struct.GetResponse.html\" title=\"struct teaclave_proto::teaclave_storage_service::GetResponse\">GetResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_storage_service::GetResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_storage_service/struct.PutRequest.html\" title=\"struct teaclave_proto::teaclave_storage_service::PutRequest\">PutRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_storage_service::PutRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_storage_service/struct.PutResponse.html\" title=\"struct teaclave_proto::teaclave_storage_service::PutResponse\">PutResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_storage_service::PutResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_storage_service/struct.DeleteRequest.html\" title=\"struct teaclave_proto::teaclave_storage_service::DeleteRequest\">DeleteRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_storage_service::DeleteRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_storage_service/struct.DeleteResponse.html\" title=\"struct teaclave_proto::teaclave_storage_service::DeleteResponse\">DeleteResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_storage_service::DeleteResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_storage_service/struct.EnqueueRequest.html\" title=\"struct teaclave_proto::teaclave_storage_service::EnqueueRequest\">EnqueueRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_storage_service::EnqueueRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_storage_service/struct.EnqueueResponse.html\" title=\"struct teaclave_proto::teaclave_storage_service::EnqueueResponse\">EnqueueResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_storage_service::EnqueueResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_storage_service/struct.DequeueRequest.html\" title=\"struct teaclave_proto::teaclave_storage_service::DequeueRequest\">DequeueRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_storage_service::DequeueRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_storage_service/struct.DequeueResponse.html\" title=\"struct teaclave_proto::teaclave_storage_service::DequeueResponse\">DequeueResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_storage_service::DequeueResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_authentication_service_proto/struct.UserRegisterRequest.html\" title=\"struct teaclave_proto::teaclave_authentication_service_proto::UserRegisterRequest\">UserRegisterRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_authentication_service_proto::UserRegisterRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_authentication_service_proto/struct.UserRegisterResponse.html\" title=\"struct teaclave_proto::teaclave_authentication_service_proto::UserRegisterResponse\">UserRegisterResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_authentication_service_proto::UserRegisterResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_authentication_service_proto/struct.UserLoginRequest.html\" title=\"struct teaclave_proto::teaclave_authentication_service_proto::UserLoginRequest\">UserLoginRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_authentication_service_proto::UserLoginRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_authentication_service_proto/struct.UserLoginResponse.html\" title=\"struct teaclave_proto::teaclave_authentication_service_proto::UserLoginResponse\">UserLoginResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_authentication_service_proto::UserLoginResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_authentication_service_proto/struct.UserAuthenticateRequest.html\" title=\"struct teaclave_proto::teaclave_authentication_service_proto::UserAuthenticateRequest\">UserAuthenticateRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_authentication_service_proto::UserAuthenticateRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_authentication_service_proto/struct.UserAuthenticateResponse.html\" title=\"struct teaclave_proto::teaclave_authentication_service_proto::UserAuthenticateResponse\">UserAuthenticateResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_authentication_service_proto::UserAuthenticateResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_authentication_service_proto/struct.TeaclaveAuthenticationApiClient.html\" title=\"struct teaclave_proto::teaclave_authentication_service_proto::TeaclaveAuthenticationApiClient\">TeaclaveAuthenticationApiClient</a>","synthetic":true,"types":["teaclave_proto::teaclave_authentication_service_proto::TeaclaveAuthenticationApiClient"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_authentication_service_proto/struct.TeaclaveAuthenticationInternalClient.html\" title=\"struct teaclave_proto::teaclave_authentication_service_proto::TeaclaveAuthenticationInternalClient\">TeaclaveAuthenticationInternalClient</a>","synthetic":true,"types":["teaclave_proto::teaclave_authentication_service_proto::TeaclaveAuthenticationInternalClient"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_proto/teaclave_authentication_service_proto/enum.TeaclaveAuthenticationApiRequest.html\" title=\"enum teaclave_proto::teaclave_authentication_service_proto::TeaclaveAuthenticationApiRequest\">TeaclaveAuthenticationApiRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_authentication_service_proto::TeaclaveAuthenticationApiRequest"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_proto/teaclave_authentication_service_proto/enum.TeaclaveAuthenticationApiResponse.html\" title=\"enum teaclave_proto::teaclave_authentication_service_proto::TeaclaveAuthenticationApiResponse\">TeaclaveAuthenticationApiResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_authentication_service_proto::TeaclaveAuthenticationApiResponse"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_proto/teaclave_authentication_service_proto/enum.TeaclaveAuthenticationInternalRequest.html\" title=\"enum teaclave_proto::teaclave_authentication_service_proto::TeaclaveAuthenticationInternalRequest\">TeaclaveAuthenticationInternalRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_authentication_service_proto::TeaclaveAuthenticationInternalRequest"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_proto/teaclave_authentication_service_proto/enum.TeaclaveAuthenticationInternalResponse.html\" title=\"enum teaclave_proto::teaclave_authentication_service_proto::TeaclaveAuthenticationInternalResponse\">TeaclaveAuthenticationInternalResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_authentication_service_proto::TeaclaveAuthenticationInternalResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_common_proto/struct.UserCredential.html\" title=\"struct teaclave_proto::teaclave_common_proto::UserCredential\">UserCredential</a>","synthetic":true,"types":["teaclave_proto::teaclave_common_proto::UserCredential"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_common_proto/struct.FileCryptoInfo.html\" title=\"struct teaclave_proto::teaclave_common_proto::FileCryptoInfo\">FileCryptoInfo</a>","synthetic":true,"types":["teaclave_proto::teaclave_common_proto::FileCryptoInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_common_proto/struct.TaskOutputs.html\" title=\"struct teaclave_proto::teaclave_common_proto::TaskOutputs\">TaskOutputs</a>","synthetic":true,"types":["teaclave_proto::teaclave_common_proto::TaskOutputs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_common_proto/struct.TaskFailure.html\" title=\"struct teaclave_proto::teaclave_common_proto::TaskFailure\">TaskFailure</a>","synthetic":true,"types":["teaclave_proto::teaclave_common_proto::TaskFailure"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_common_proto/struct.TaskResult.html\" title=\"struct teaclave_proto::teaclave_common_proto::TaskResult\">TaskResult</a>","synthetic":true,"types":["teaclave_proto::teaclave_common_proto::TaskResult"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_proto/teaclave_common_proto/enum.TaskStatus.html\" title=\"enum teaclave_proto::teaclave_common_proto::TaskStatus\">TaskStatus</a>","synthetic":true,"types":["teaclave_proto::teaclave_common_proto::TaskStatus"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_proto/teaclave_common_proto/task_result/enum.Result.html\" title=\"enum teaclave_proto::teaclave_common_proto::task_result::Result\">Result</a>","synthetic":true,"types":["teaclave_proto::teaclave_common_proto::task_result::Result"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_storage_service_proto/struct.GetRequest.html\" title=\"struct teaclave_proto::teaclave_storage_service_proto::GetRequest\">GetRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_storage_service_proto::GetRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_storage_service_proto/struct.GetResponse.html\" title=\"struct teaclave_proto::teaclave_storage_service_proto::GetResponse\">GetResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_storage_service_proto::GetResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_storage_service_proto/struct.PutRequest.html\" title=\"struct teaclave_proto::teaclave_storage_service_proto::PutRequest\">PutRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_storage_service_proto::PutRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_storage_service_proto/struct.PutResponse.html\" title=\"struct teaclave_proto::teaclave_storage_service_proto::PutResponse\">PutResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_storage_service_proto::PutResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_storage_service_proto/struct.DeleteRequest.html\" title=\"struct teaclave_proto::teaclave_storage_service_proto::DeleteRequest\">DeleteRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_storage_service_proto::DeleteRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_storage_service_proto/struct.DeleteResponse.html\" title=\"struct teaclave_proto::teaclave_storage_service_proto::DeleteResponse\">DeleteResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_storage_service_proto::DeleteResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_storage_service_proto/struct.EnqueueRequest.html\" title=\"struct teaclave_proto::teaclave_storage_service_proto::EnqueueRequest\">EnqueueRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_storage_service_proto::EnqueueRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_storage_service_proto/struct.EnqueueResponse.html\" title=\"struct teaclave_proto::teaclave_storage_service_proto::EnqueueResponse\">EnqueueResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_storage_service_proto::EnqueueResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_storage_service_proto/struct.DequeueRequest.html\" title=\"struct teaclave_proto::teaclave_storage_service_proto::DequeueRequest\">DequeueRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_storage_service_proto::DequeueRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_storage_service_proto/struct.DequeueResponse.html\" title=\"struct teaclave_proto::teaclave_storage_service_proto::DequeueResponse\">DequeueResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_storage_service_proto::DequeueResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_storage_service_proto/struct.TeaclaveStorageClient.html\" title=\"struct teaclave_proto::teaclave_storage_service_proto::TeaclaveStorageClient\">TeaclaveStorageClient</a>","synthetic":true,"types":["teaclave_proto::teaclave_storage_service_proto::TeaclaveStorageClient"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_proto/teaclave_storage_service_proto/enum.TeaclaveStorageRequest.html\" title=\"enum teaclave_proto::teaclave_storage_service_proto::TeaclaveStorageRequest\">TeaclaveStorageRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_storage_service_proto::TeaclaveStorageRequest"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_proto/teaclave_storage_service_proto/enum.TeaclaveStorageResponse.html\" title=\"enum teaclave_proto::teaclave_storage_service_proto::TeaclaveStorageResponse\">TeaclaveStorageResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_storage_service_proto::TeaclaveStorageResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.RegisterInputFileRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::RegisterInputFileRequest\">RegisterInputFileRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::RegisterInputFileRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.RegisterInputFileResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::RegisterInputFileResponse\">RegisterInputFileResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::RegisterInputFileResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.UpdateInputFileRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::UpdateInputFileRequest\">UpdateInputFileRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::UpdateInputFileRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.UpdateInputFileResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::UpdateInputFileResponse\">UpdateInputFileResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::UpdateInputFileResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.RegisterOutputFileRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::RegisterOutputFileRequest\">RegisterOutputFileRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::RegisterOutputFileRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.RegisterOutputFileResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::RegisterOutputFileResponse\">RegisterOutputFileResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::RegisterOutputFileResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.UpdateOutputFileRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::UpdateOutputFileRequest\">UpdateOutputFileRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::UpdateOutputFileRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.UpdateOutputFileResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::UpdateOutputFileResponse\">UpdateOutputFileResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::UpdateOutputFileResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.RegisterFusionOutputRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::RegisterFusionOutputRequest\">RegisterFusionOutputRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::RegisterFusionOutputRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.RegisterFusionOutputResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::RegisterFusionOutputResponse\">RegisterFusionOutputResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::RegisterFusionOutputResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.RegisterInputFromOutputRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::RegisterInputFromOutputRequest\">RegisterInputFromOutputRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::RegisterInputFromOutputRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.RegisterInputFromOutputResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::RegisterInputFromOutputResponse\">RegisterInputFromOutputResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::RegisterInputFromOutputResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.GetOutputFileRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::GetOutputFileRequest\">GetOutputFileRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::GetOutputFileRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.GetOutputFileResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::GetOutputFileResponse\">GetOutputFileResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::GetOutputFileResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.GetInputFileRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::GetInputFileRequest\">GetInputFileRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::GetInputFileRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.GetInputFileResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::GetInputFileResponse\">GetInputFileResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::GetInputFileResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.FunctionInput.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::FunctionInput\">FunctionInput</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::FunctionInput"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.FunctionOutput.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::FunctionOutput\">FunctionOutput</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::FunctionOutput"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.OwnerList.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::OwnerList\">OwnerList</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::OwnerList"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.RegisterFunctionRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::RegisterFunctionRequest\">RegisterFunctionRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::RegisterFunctionRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.RegisterFunctionResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::RegisterFunctionResponse\">RegisterFunctionResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::RegisterFunctionResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.GetFunctionRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::GetFunctionRequest\">GetFunctionRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::GetFunctionRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.GetFunctionResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::GetFunctionResponse\">GetFunctionResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::GetFunctionResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.DataMap.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::DataMap\">DataMap</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::DataMap"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.CreateTaskRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::CreateTaskRequest\">CreateTaskRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::CreateTaskRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.CreateTaskResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::CreateTaskResponse\">CreateTaskResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::CreateTaskResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.GetTaskRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::GetTaskRequest\">GetTaskRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::GetTaskRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.GetTaskResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::GetTaskResponse\">GetTaskResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::GetTaskResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.AssignDataRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::AssignDataRequest\">AssignDataRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::AssignDataRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.AssignDataResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::AssignDataResponse\">AssignDataResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::AssignDataResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.ApproveTaskRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::ApproveTaskRequest\">ApproveTaskRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::ApproveTaskRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.ApproveTaskResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::ApproveTaskResponse\">ApproveTaskResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::ApproveTaskResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.InvokeTaskRequest.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::InvokeTaskRequest\">InvokeTaskRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::InvokeTaskRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.InvokeTaskResponse.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::InvokeTaskResponse\">InvokeTaskResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::InvokeTaskResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_frontend_service_proto/struct.TeaclaveFrontendClient.html\" title=\"struct teaclave_proto::teaclave_frontend_service_proto::TeaclaveFrontendClient\">TeaclaveFrontendClient</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::TeaclaveFrontendClient"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_proto/teaclave_frontend_service_proto/enum.TeaclaveFrontendRequest.html\" title=\"enum teaclave_proto::teaclave_frontend_service_proto::TeaclaveFrontendRequest\">TeaclaveFrontendRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::TeaclaveFrontendRequest"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_proto/teaclave_frontend_service_proto/enum.TeaclaveFrontendResponse.html\" title=\"enum teaclave_proto::teaclave_frontend_service_proto::TeaclaveFrontendResponse\">TeaclaveFrontendResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_frontend_service_proto::TeaclaveFrontendResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_management_service_proto/struct.TeaclaveManagementClient.html\" title=\"struct teaclave_proto::teaclave_management_service_proto::TeaclaveManagementClient\">TeaclaveManagementClient</a>","synthetic":true,"types":["teaclave_proto::teaclave_management_service_proto::TeaclaveManagementClient"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_proto/teaclave_management_service_proto/enum.TeaclaveManagementRequest.html\" title=\"enum teaclave_proto::teaclave_management_service_proto::TeaclaveManagementRequest\">TeaclaveManagementRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_management_service_proto::TeaclaveManagementRequest"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_proto/teaclave_management_service_proto/enum.TeaclaveManagementResponse.html\" title=\"enum teaclave_proto::teaclave_management_service_proto::TeaclaveManagementResponse\">TeaclaveManagementResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_management_service_proto::TeaclaveManagementResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_access_control_service_proto/struct.AuthorizeDataRequest.html\" title=\"struct teaclave_proto::teaclave_access_control_service_proto::AuthorizeDataRequest\">AuthorizeDataRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_access_control_service_proto::AuthorizeDataRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_access_control_service_proto/struct.AuthorizeDataResponse.html\" title=\"struct teaclave_proto::teaclave_access_control_service_proto::AuthorizeDataResponse\">AuthorizeDataResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_access_control_service_proto::AuthorizeDataResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_access_control_service_proto/struct.AuthorizeFunctionRequest.html\" title=\"struct teaclave_proto::teaclave_access_control_service_proto::AuthorizeFunctionRequest\">AuthorizeFunctionRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_access_control_service_proto::AuthorizeFunctionRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_access_control_service_proto/struct.AuthorizeFunctionResponse.html\" title=\"struct teaclave_proto::teaclave_access_control_service_proto::AuthorizeFunctionResponse\">AuthorizeFunctionResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_access_control_service_proto::AuthorizeFunctionResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_access_control_service_proto/struct.AuthorizeTaskRequest.html\" title=\"struct teaclave_proto::teaclave_access_control_service_proto::AuthorizeTaskRequest\">AuthorizeTaskRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_access_control_service_proto::AuthorizeTaskRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_access_control_service_proto/struct.AuthorizeTaskResponse.html\" title=\"struct teaclave_proto::teaclave_access_control_service_proto::AuthorizeTaskResponse\">AuthorizeTaskResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_access_control_service_proto::AuthorizeTaskResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_access_control_service_proto/struct.AuthorizeStagedTaskRequest.html\" title=\"struct teaclave_proto::teaclave_access_control_service_proto::AuthorizeStagedTaskRequest\">AuthorizeStagedTaskRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_access_control_service_proto::AuthorizeStagedTaskRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_access_control_service_proto/struct.AuthorizeStagedTaskResponse.html\" title=\"struct teaclave_proto::teaclave_access_control_service_proto::AuthorizeStagedTaskResponse\">AuthorizeStagedTaskResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_access_control_service_proto::AuthorizeStagedTaskResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_access_control_service_proto/struct.TeaclaveAccessControlClient.html\" title=\"struct teaclave_proto::teaclave_access_control_service_proto::TeaclaveAccessControlClient\">TeaclaveAccessControlClient</a>","synthetic":true,"types":["teaclave_proto::teaclave_access_control_service_proto::TeaclaveAccessControlClient"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_proto/teaclave_access_control_service_proto/enum.TeaclaveAccessControlRequest.html\" title=\"enum teaclave_proto::teaclave_access_control_service_proto::TeaclaveAccessControlRequest\">TeaclaveAccessControlRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_access_control_service_proto::TeaclaveAccessControlRequest"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_proto/teaclave_access_control_service_proto/enum.TeaclaveAccessControlResponse.html\" title=\"enum teaclave_proto::teaclave_access_control_service_proto::TeaclaveAccessControlResponse\">TeaclaveAccessControlResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_access_control_service_proto::TeaclaveAccessControlResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_scheduler_service_proto/struct.SubscribeRequest.html\" title=\"struct teaclave_proto::teaclave_scheduler_service_proto::SubscribeRequest\">SubscribeRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_scheduler_service_proto::SubscribeRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_scheduler_service_proto/struct.SubscribeResponse.html\" title=\"struct teaclave_proto::teaclave_scheduler_service_proto::SubscribeResponse\">SubscribeResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_scheduler_service_proto::SubscribeResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_scheduler_service_proto/struct.PullTaskRequest.html\" title=\"struct teaclave_proto::teaclave_scheduler_service_proto::PullTaskRequest\">PullTaskRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_scheduler_service_proto::PullTaskRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_scheduler_service_proto/struct.PullTaskResponse.html\" title=\"struct teaclave_proto::teaclave_scheduler_service_proto::PullTaskResponse\">PullTaskResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_scheduler_service_proto::PullTaskResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_scheduler_service_proto/struct.UpdateTaskStatusRequest.html\" title=\"struct teaclave_proto::teaclave_scheduler_service_proto::UpdateTaskStatusRequest\">UpdateTaskStatusRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_scheduler_service_proto::UpdateTaskStatusRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_scheduler_service_proto/struct.UpdateTaskStatusResponse.html\" title=\"struct teaclave_proto::teaclave_scheduler_service_proto::UpdateTaskStatusResponse\">UpdateTaskStatusResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_scheduler_service_proto::UpdateTaskStatusResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_scheduler_service_proto/struct.UpdateTaskResultRequest.html\" title=\"struct teaclave_proto::teaclave_scheduler_service_proto::UpdateTaskResultRequest\">UpdateTaskResultRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_scheduler_service_proto::UpdateTaskResultRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_scheduler_service_proto/struct.UpdateTaskResultResponse.html\" title=\"struct teaclave_proto::teaclave_scheduler_service_proto::UpdateTaskResultResponse\">UpdateTaskResultResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_scheduler_service_proto::UpdateTaskResultResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_scheduler_service_proto/struct.PublishTaskRequest.html\" title=\"struct teaclave_proto::teaclave_scheduler_service_proto::PublishTaskRequest\">PublishTaskRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_scheduler_service_proto::PublishTaskRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_scheduler_service_proto/struct.PublishTaskResponse.html\" title=\"struct teaclave_proto::teaclave_scheduler_service_proto::PublishTaskResponse\">PublishTaskResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_scheduler_service_proto::PublishTaskResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_proto/teaclave_scheduler_service_proto/struct.TeaclaveSchedulerClient.html\" title=\"struct teaclave_proto::teaclave_scheduler_service_proto::TeaclaveSchedulerClient\">TeaclaveSchedulerClient</a>","synthetic":true,"types":["teaclave_proto::teaclave_scheduler_service_proto::TeaclaveSchedulerClient"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_proto/teaclave_scheduler_service_proto/enum.TeaclaveSchedulerRequest.html\" title=\"enum teaclave_proto::teaclave_scheduler_service_proto::TeaclaveSchedulerRequest\">TeaclaveSchedulerRequest</a>","synthetic":true,"types":["teaclave_proto::teaclave_scheduler_service_proto::TeaclaveSchedulerRequest"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_proto/teaclave_scheduler_service_proto/enum.TeaclaveSchedulerResponse.html\" title=\"enum teaclave_proto::teaclave_scheduler_service_proto::TeaclaveSchedulerResponse\">TeaclaveSchedulerResponse</a>","synthetic":true,"types":["teaclave_proto::teaclave_scheduler_service_proto::TeaclaveSchedulerResponse"]}];
implementors["teaclave_rpc"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"teaclave_rpc/struct.Request.html\" title=\"struct teaclave_rpc::Request\">Request</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["teaclave_rpc::request::Request"]},{"text":"impl&lt;U, V&gt; Freeze for <a class=\"struct\" href=\"teaclave_rpc/channel/struct.SgxTrustedTlsChannel.html\" title=\"struct teaclave_rpc::channel::SgxTrustedTlsChannel\">SgxTrustedTlsChannel</a>&lt;U, V&gt;","synthetic":true,"types":["teaclave_rpc::channel::SgxTrustedTlsChannel"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_rpc/config/struct.SgxTrustedTlsServerConfig.html\" title=\"struct teaclave_rpc::config::SgxTrustedTlsServerConfig\">SgxTrustedTlsServerConfig</a>","synthetic":true,"types":["teaclave_rpc::config::SgxTrustedTlsServerConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_rpc/config/struct.SgxTrustedTlsClientConfig.html\" title=\"struct teaclave_rpc::config::SgxTrustedTlsClientConfig\">SgxTrustedTlsClientConfig</a>","synthetic":true,"types":["teaclave_rpc::config::SgxTrustedTlsClientConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_rpc/endpoint/struct.Endpoint.html\" title=\"struct teaclave_rpc::endpoint::Endpoint\">Endpoint</a>","synthetic":true,"types":["teaclave_rpc::endpoint::Endpoint"]},{"text":"impl&lt;U, V&gt; Freeze for <a class=\"struct\" href=\"teaclave_rpc/server/struct.SgxTrustedTlsServer.html\" title=\"struct teaclave_rpc::server::SgxTrustedTlsServer\">SgxTrustedTlsServer</a>&lt;U, V&gt;","synthetic":true,"types":["teaclave_rpc::server::SgxTrustedTlsServer"]}];
implementors["teaclave_runtime"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_runtime/struct.DefaultRuntime.html\" title=\"struct teaclave_runtime::DefaultRuntime\">DefaultRuntime</a>","synthetic":true,"types":["teaclave_runtime::default::DefaultRuntime"]}];
implementors["teaclave_service_enclave_utils"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_service_enclave_utils/struct.ServiceEnclave.html\" title=\"struct teaclave_service_enclave_utils::ServiceEnclave\">ServiceEnclave</a>","synthetic":true,"types":["teaclave_service_enclave_utils::ServiceEnclave"]}];
implementors["teaclave_test_utils"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_test_utils/struct.TestCase.html\" title=\"struct teaclave_test_utils::TestCase\">TestCase</a>","synthetic":true,"types":["teaclave_test_utils::TestCase"]}];
implementors["teaclave_types"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.FileAuthTag.html\" title=\"struct teaclave_types::FileAuthTag\">FileAuthTag</a>","synthetic":true,"types":["teaclave_types::crypto::FileAuthTag"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.WorkerCapability.html\" title=\"struct teaclave_types::WorkerCapability\">WorkerCapability</a>","synthetic":true,"types":["teaclave_types::worker::WorkerCapability"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.ExecutionResult.html\" title=\"struct teaclave_types::ExecutionResult\">ExecutionResult</a>","synthetic":true,"types":["teaclave_types::worker::ExecutionResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.TeaclaveInputFile.html\" title=\"struct teaclave_types::TeaclaveInputFile\">TeaclaveInputFile</a>","synthetic":true,"types":["teaclave_types::file::TeaclaveInputFile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.TeaclaveOutputFile.html\" title=\"struct teaclave_types::TeaclaveOutputFile\">TeaclaveOutputFile</a>","synthetic":true,"types":["teaclave_types::file::TeaclaveOutputFile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.FunctionInput.html\" title=\"struct teaclave_types::FunctionInput\">FunctionInput</a>","synthetic":true,"types":["teaclave_types::function::FunctionInput"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.FunctionOutput.html\" title=\"struct teaclave_types::FunctionOutput\">FunctionOutput</a>","synthetic":true,"types":["teaclave_types::function::FunctionOutput"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.Function.html\" title=\"struct teaclave_types::Function\">Function</a>","synthetic":true,"types":["teaclave_types::function::Function"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.FunctionInputFiles.html\" title=\"struct teaclave_types::FunctionInputFiles\">FunctionInputFiles</a>","synthetic":true,"types":["teaclave_types::staged_task::FunctionInputFiles"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.FunctionOutputFiles.html\" title=\"struct teaclave_types::FunctionOutputFiles\">FunctionOutputFiles</a>","synthetic":true,"types":["teaclave_types::staged_task::FunctionOutputFiles"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.FunctionInputFile.html\" title=\"struct teaclave_types::FunctionInputFile\">FunctionInputFile</a>","synthetic":true,"types":["teaclave_types::staged_task::FunctionInputFile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.FunctionOutputFile.html\" title=\"struct teaclave_types::FunctionOutputFile\">FunctionOutputFile</a>","synthetic":true,"types":["teaclave_types::staged_task::FunctionOutputFile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.StagedTask.html\" title=\"struct teaclave_types::StagedTask\">StagedTask</a>","synthetic":true,"types":["teaclave_types::staged_task::StagedTask"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.FunctionArguments.html\" title=\"struct teaclave_types::FunctionArguments\">FunctionArguments</a>","synthetic":true,"types":["teaclave_types::staged_function::FunctionArguments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.StagedFunction.html\" title=\"struct teaclave_types::StagedFunction\">StagedFunction</a>","synthetic":true,"types":["teaclave_types::staged_function::StagedFunction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.StagedFileInfo.html\" title=\"struct teaclave_types::StagedFileInfo\">StagedFileInfo</a>","synthetic":true,"types":["teaclave_types::staged_file::StagedFileInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.StagedFiles.html\" title=\"struct teaclave_types::StagedFiles\">StagedFiles</a>","synthetic":true,"types":["teaclave_types::staged_file::StagedFiles"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.UserID.html\" title=\"struct teaclave_types::UserID\">UserID</a>","synthetic":true,"types":["teaclave_types::task::UserID"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.OwnerList.html\" title=\"struct teaclave_types::OwnerList\">OwnerList</a>","synthetic":true,"types":["teaclave_types::task::OwnerList"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.OutputsTags.html\" title=\"struct teaclave_types::OutputsTags\">OutputsTags</a>","synthetic":true,"types":["teaclave_types::task::OutputsTags"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.TaskOutputs.html\" title=\"struct teaclave_types::TaskOutputs\">TaskOutputs</a>","synthetic":true,"types":["teaclave_types::task::TaskOutputs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.TaskFailure.html\" title=\"struct teaclave_types::TaskFailure\">TaskFailure</a>","synthetic":true,"types":["teaclave_types::task::TaskFailure"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.ExternalID.html\" title=\"struct teaclave_types::ExternalID\">ExternalID</a>","synthetic":true,"types":["teaclave_types::task::ExternalID"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.TaskFileOwners.html\" title=\"struct teaclave_types::TaskFileOwners\">TaskFileOwners</a>","synthetic":true,"types":["teaclave_types::task::TaskFileOwners"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"teaclave_types/struct.TaskFiles.html\" title=\"struct teaclave_types::TaskFiles\">TaskFiles</a>&lt;T&gt;","synthetic":true,"types":["teaclave_types::task::TaskFiles"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.TaskState.html\" title=\"struct teaclave_types::TaskState\">TaskState</a>","synthetic":true,"types":["teaclave_types::task_state::TaskState"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"teaclave_types/struct.Task.html\" title=\"struct teaclave_types::Task\">Task</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["teaclave_types::task_state::Task"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.Create.html\" title=\"struct teaclave_types::Create\">Create</a>","synthetic":true,"types":["teaclave_types::task_state::Create"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.Assign.html\" title=\"struct teaclave_types::Assign\">Assign</a>","synthetic":true,"types":["teaclave_types::task_state::Assign"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.Approve.html\" title=\"struct teaclave_types::Approve\">Approve</a>","synthetic":true,"types":["teaclave_types::task_state::Approve"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.Stage.html\" title=\"struct teaclave_types::Stage\">Stage</a>","synthetic":true,"types":["teaclave_types::task_state::Stage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.Run.html\" title=\"struct teaclave_types::Run\">Run</a>","synthetic":true,"types":["teaclave_types::task_state::Run"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.Finish.html\" title=\"struct teaclave_types::Finish\">Finish</a>","synthetic":true,"types":["teaclave_types::task_state::Finish"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.Done.html\" title=\"struct teaclave_types::Done\">Done</a>","synthetic":true,"types":["teaclave_types::task_state::Done"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.FileAgentRequest.html\" title=\"struct teaclave_types::FileAgentRequest\">FileAgentRequest</a>","synthetic":true,"types":["teaclave_types::file_agent::FileAgentRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.HandleFileInfo.html\" title=\"struct teaclave_types::HandleFileInfo\">HandleFileInfo</a>","synthetic":true,"types":["teaclave_types::file_agent::HandleFileInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.EnclaveStatus.html\" title=\"struct teaclave_types::EnclaveStatus\">EnclaveStatus</a>","synthetic":true,"types":["teaclave_types::EnclaveStatus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.EnclaveMeasurement.html\" title=\"struct teaclave_types::EnclaveMeasurement\">EnclaveMeasurement</a>","synthetic":true,"types":["teaclave_types::EnclaveMeasurement"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.EnclaveAttr.html\" title=\"struct teaclave_types::EnclaveAttr\">EnclaveAttr</a>","synthetic":true,"types":["teaclave_types::EnclaveAttr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_types/struct.EnclaveInfo.html\" title=\"struct teaclave_types::EnclaveInfo\">EnclaveInfo</a>","synthetic":true,"types":["teaclave_types::EnclaveInfo"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_types/enum.FileCrypto.html\" title=\"enum teaclave_types::FileCrypto\">FileCrypto</a>","synthetic":true,"types":["teaclave_types::crypto::FileCrypto"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_types/enum.ExecutorType.html\" title=\"enum teaclave_types::ExecutorType\">ExecutorType</a>","synthetic":true,"types":["teaclave_types::worker::ExecutorType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_types/enum.Executor.html\" title=\"enum teaclave_types::Executor\">Executor</a>","synthetic":true,"types":["teaclave_types::worker::Executor"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_types/enum.TaskStatus.html\" title=\"enum teaclave_types::TaskStatus\">TaskStatus</a>","synthetic":true,"types":["teaclave_types::task::TaskStatus"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_types/enum.TaskResult.html\" title=\"enum teaclave_types::TaskResult\">TaskResult</a>","synthetic":true,"types":["teaclave_types::task::TaskResult"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_types/enum.HandleFileCommand.html\" title=\"enum teaclave_types::HandleFileCommand\">HandleFileCommand</a>","synthetic":true,"types":["teaclave_types::file_agent::HandleFileCommand"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_types/enum.TeeServiceError.html\" title=\"enum teaclave_types::TeeServiceError\">TeeServiceError</a>","synthetic":true,"types":["teaclave_types::TeeServiceError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"teaclave_types/enum.TeaclaveServiceResponseError.html\" title=\"enum teaclave_types::TeaclaveServiceResponseError\">TeaclaveServiceResponseError</a>","synthetic":true,"types":["teaclave_types::TeaclaveServiceResponseError"]}];
implementors["teaclave_worker"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"teaclave_worker/struct.Worker.html\" title=\"struct teaclave_worker::Worker\">Worker</a>","synthetic":true,"types":["teaclave_worker::worker::Worker"]}];
implementors["termcolor"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.StandardStream.html\" title=\"struct termcolor::StandardStream\">StandardStream</a>","synthetic":true,"types":["termcolor::StandardStream"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"termcolor/struct.StandardStreamLock.html\" title=\"struct termcolor::StandardStreamLock\">StandardStreamLock</a>&lt;'a&gt;","synthetic":true,"types":["termcolor::StandardStreamLock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.BufferedStandardStream.html\" title=\"struct termcolor::BufferedStandardStream\">BufferedStandardStream</a>","synthetic":true,"types":["termcolor::BufferedStandardStream"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"termcolor/struct.BufferWriter.html\" title=\"struct termcolor::BufferWriter\">BufferWriter</a>","synthetic":true,"types":["termcolor::BufferWriter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.Buffer.html\" title=\"struct termcolor::Buffer\">Buffer</a>","synthetic":true,"types":["termcolor::Buffer"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"termcolor/struct.NoColor.html\" title=\"struct termcolor::NoColor\">NoColor</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["termcolor::NoColor"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"termcolor/struct.Ansi.html\" title=\"struct termcolor::Ansi\">Ansi</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["termcolor::Ansi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.ColorSpec.html\" title=\"struct termcolor::ColorSpec\">ColorSpec</a>","synthetic":true,"types":["termcolor::ColorSpec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.ParseColorError.html\" title=\"struct termcolor::ParseColorError\">ParseColorError</a>","synthetic":true,"types":["termcolor::ParseColorError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"termcolor/enum.ColorChoice.html\" title=\"enum termcolor::ColorChoice\">ColorChoice</a>","synthetic":true,"types":["termcolor::ColorChoice"]},{"text":"impl Freeze for <a class=\"enum\" href=\"termcolor/enum.Color.html\" title=\"enum termcolor::Color\">Color</a>","synthetic":true,"types":["termcolor::Color"]},{"text":"impl Freeze for <a class=\"enum\" href=\"termcolor/enum.ParseColorErrorKind.html\" title=\"enum termcolor::ParseColorErrorKind\">ParseColorErrorKind</a>","synthetic":true,"types":["termcolor::ParseColorErrorKind"]}];
implementors["thread_local"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"thread_local/struct.CachedIntoIter.html\" title=\"struct thread_local::CachedIntoIter\">CachedIntoIter</a>&lt;T&gt;","synthetic":true,"types":["thread_local::cached::CachedIntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"thread_local/struct.CachedIterMut.html\" title=\"struct thread_local::CachedIterMut\">CachedIterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["thread_local::cached::CachedIterMut"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"thread_local/struct.CachedThreadLocal.html\" title=\"struct thread_local::CachedThreadLocal\">CachedThreadLocal</a>&lt;T&gt;","synthetic":true,"types":["thread_local::cached::CachedThreadLocal"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"thread_local/struct.ThreadLocal.html\" title=\"struct thread_local::ThreadLocal\">ThreadLocal</a>&lt;T&gt;","synthetic":true,"types":["thread_local::ThreadLocal"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"thread_local/struct.IterMut.html\" title=\"struct thread_local::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["thread_local::IterMut"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"thread_local/struct.IntoIter.html\" title=\"struct thread_local::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["thread_local::IntoIter"]}];
implementors["threadpool"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"threadpool/struct.Builder.html\" title=\"struct threadpool::Builder\">Builder</a>","synthetic":true,"types":["threadpool::Builder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"threadpool/struct.ThreadPoolSharedData.html\" title=\"struct threadpool::ThreadPoolSharedData\">ThreadPoolSharedData</a>","synthetic":true,"types":["threadpool::ThreadPoolSharedData"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"threadpool/struct.ThreadPool.html\" title=\"struct threadpool::ThreadPool\">ThreadPool</a>","synthetic":true,"types":["threadpool::ThreadPool"]}];
implementors["toml"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"toml/struct.Spanned.html\" title=\"struct toml::Spanned\">Spanned</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["toml::spanned::Spanned"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.Map.html\" title=\"struct toml::map::Map\">Map</a>&lt;K, V&gt;","synthetic":true,"types":["toml::map::Map"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.VacantEntry.html\" title=\"struct toml::map::VacantEntry\">VacantEntry</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::VacantEntry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.OccupiedEntry.html\" title=\"struct toml::map::OccupiedEntry\">OccupiedEntry</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::OccupiedEntry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.Iter.html\" title=\"struct toml::map::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::Iter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.IterMut.html\" title=\"struct toml::map::IterMut\">IterMut</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::IterMut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"toml/map/struct.IntoIter.html\" title=\"struct toml::map::IntoIter\">IntoIter</a>","synthetic":true,"types":["toml::map::IntoIter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.Keys.html\" title=\"struct toml::map::Keys\">Keys</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::Keys"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.Values.html\" title=\"struct toml::map::Values\">Values</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::Values"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"toml/map/enum.Entry.html\" title=\"enum toml::map::Entry\">Entry</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::Entry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"toml/value/struct.Datetime.html\" title=\"struct toml::value::Datetime\">Datetime</a>","synthetic":true,"types":["toml::datetime::Datetime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"toml/value/struct.DatetimeParseError.html\" title=\"struct toml::value::DatetimeParseError\">DatetimeParseError</a>","synthetic":true,"types":["toml::datetime::DatetimeParseError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"toml/value/enum.Value.html\" title=\"enum toml::value::Value\">Value</a>","synthetic":true,"types":["toml::value::Value"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/ser/struct.Serializer.html\" title=\"struct toml::ser::Serializer\">Serializer</a>&lt;'a&gt;","synthetic":true,"types":["toml::ser::Serializer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"toml/ser/enum.Error.html\" title=\"enum toml::ser::Error\">Error</a>","synthetic":true,"types":["toml::ser::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"toml/de/struct.Error.html\" title=\"struct toml::de::Error\">Error</a>","synthetic":true,"types":["toml::de::Error"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/de/struct.Deserializer.html\" title=\"struct toml::de::Deserializer\">Deserializer</a>&lt;'a&gt;","synthetic":true,"types":["toml::de::Deserializer"]}];
implementors["typenum"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/struct.Greater.html\" title=\"struct typenum::Greater\">Greater</a>","synthetic":true,"types":["typenum::Greater"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/struct.Less.html\" title=\"struct typenum::Less\">Less</a>","synthetic":true,"types":["typenum::Less"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/struct.Equal.html\" title=\"struct typenum::Equal\">Equal</a>","synthetic":true,"types":["typenum::Equal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>","synthetic":true,"types":["typenum::bit::B0"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>","synthetic":true,"types":["typenum::bit::B1"]},{"text":"impl&lt;U&gt; Freeze for <a class=\"struct\" href=\"typenum/int/struct.PInt.html\" title=\"struct typenum::int::PInt\">PInt</a>&lt;U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["typenum::int::PInt"]},{"text":"impl&lt;U&gt; Freeze for <a class=\"struct\" href=\"typenum/int/struct.NInt.html\" title=\"struct typenum::int::NInt\">NInt</a>&lt;U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["typenum::int::NInt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>","synthetic":true,"types":["typenum::int::Z0"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>","synthetic":true,"types":["typenum::uint::UTerm"]},{"text":"impl&lt;U, B&gt; Freeze for <a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;U, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["typenum::uint::UInt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/array/struct.ATerm.html\" title=\"struct typenum::array::ATerm\">ATerm</a>","synthetic":true,"types":["typenum::array::ATerm"]},{"text":"impl&lt;V, A&gt; Freeze for <a class=\"struct\" href=\"typenum/array/struct.TArr.html\" title=\"struct typenum::array::TArr\">TArr</a>&lt;V, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":["typenum::array::TArr"]}];
implementors["unicode_bidi"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"unicode_bidi/struct.IsolatingRunSequence.html\" title=\"struct unicode_bidi::IsolatingRunSequence\">IsolatingRunSequence</a>","synthetic":true,"types":["unicode_bidi::prepare::IsolatingRunSequence"]},{"text":"impl Freeze for <a class=\"struct\" href=\"unicode_bidi/struct.ParagraphInfo.html\" title=\"struct unicode_bidi::ParagraphInfo\">ParagraphInfo</a>","synthetic":true,"types":["unicode_bidi::ParagraphInfo"]},{"text":"impl&lt;'text&gt; Freeze for <a class=\"struct\" href=\"unicode_bidi/struct.InitialInfo.html\" title=\"struct unicode_bidi::InitialInfo\">InitialInfo</a>&lt;'text&gt;","synthetic":true,"types":["unicode_bidi::InitialInfo"]},{"text":"impl&lt;'text&gt; Freeze for <a class=\"struct\" href=\"unicode_bidi/struct.BidiInfo.html\" title=\"struct unicode_bidi::BidiInfo\">BidiInfo</a>&lt;'text&gt;","synthetic":true,"types":["unicode_bidi::BidiInfo"]},{"text":"impl Freeze for <a class=\"enum\" href=\"unicode_bidi/enum.BidiClass.html\" title=\"enum unicode_bidi::BidiClass\">BidiClass</a>","synthetic":true,"types":["unicode_bidi::char_data::tables::BidiClass"]},{"text":"impl Freeze for <a class=\"struct\" href=\"unicode_bidi/level/struct.Level.html\" title=\"struct unicode_bidi::level::Level\">Level</a>","synthetic":true,"types":["unicode_bidi::level::Level"]},{"text":"impl Freeze for <a class=\"enum\" href=\"unicode_bidi/level/enum.Error.html\" title=\"enum unicode_bidi::level::Error\">Error</a>","synthetic":true,"types":["unicode_bidi::level::Error"]}];
implementors["unicode_normalization"] = [{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"unicode_normalization/struct.Decompositions.html\" title=\"struct unicode_normalization::Decompositions\">Decompositions</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["unicode_normalization::decompose::Decompositions"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"unicode_normalization/struct.Recompositions.html\" title=\"struct unicode_normalization::Recompositions\">Recompositions</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["unicode_normalization::recompose::Recompositions"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"unicode_normalization/struct.StreamSafe.html\" title=\"struct unicode_normalization::StreamSafe\">StreamSafe</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["unicode_normalization::stream_safe::StreamSafe"]},{"text":"impl Freeze for <a class=\"enum\" href=\"unicode_normalization/enum.IsNormalized.html\" title=\"enum unicode_normalization::IsNormalized\">IsNormalized</a>","synthetic":true,"types":["unicode_normalization::quick_check::IsNormalized"]}];
implementors["untrusted"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"untrusted/struct.Input.html\" title=\"struct untrusted::Input\">Input</a>&lt;'a&gt;","synthetic":true,"types":["untrusted::Input"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"untrusted/struct.Reader.html\" title=\"struct untrusted::Reader\">Reader</a>&lt;'a&gt;","synthetic":true,"types":["untrusted::Reader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"untrusted/struct.Mark.html\" title=\"struct untrusted::Mark\">Mark</a>","synthetic":true,"types":["untrusted::Mark"]},{"text":"impl Freeze for <a class=\"struct\" href=\"untrusted/struct.EndOfInput.html\" title=\"struct untrusted::EndOfInput\">EndOfInput</a>","synthetic":true,"types":["untrusted::EndOfInput"]}];
implementors["url"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"url/struct.OpaqueOrigin.html\" title=\"struct url::OpaqueOrigin\">OpaqueOrigin</a>","synthetic":true,"types":["url::origin::OpaqueOrigin"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"url/struct.PathSegmentsMut.html\" title=\"struct url::PathSegmentsMut\">PathSegmentsMut</a>&lt;'a&gt;","synthetic":true,"types":["url::path_segments::PathSegmentsMut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"url/struct.Url.html\" title=\"struct url::Url\">Url</a>","synthetic":true,"types":["url::Url"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"url/struct.ParseOptions.html\" title=\"struct url::ParseOptions\">ParseOptions</a>&lt;'a&gt;","synthetic":true,"types":["url::ParseOptions"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"url/struct.UrlQuery.html\" title=\"struct url::UrlQuery\">UrlQuery</a>&lt;'a&gt;","synthetic":true,"types":["url::UrlQuery"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"enum\" href=\"url/enum.Host.html\" title=\"enum url::Host\">Host</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["url::host::Host"]},{"text":"impl Freeze for <a class=\"enum\" href=\"url/enum.Origin.html\" title=\"enum url::Origin\">Origin</a>","synthetic":true,"types":["url::origin::Origin"]},{"text":"impl Freeze for <a class=\"enum\" href=\"url/enum.ParseError.html\" title=\"enum url::ParseError\">ParseError</a>","synthetic":true,"types":["url::parser::ParseError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"url/enum.SyntaxViolation.html\" title=\"enum url::SyntaxViolation\">SyntaxViolation</a>","synthetic":true,"types":["url::parser::SyntaxViolation"]},{"text":"impl Freeze for <a class=\"enum\" href=\"url/enum.Position.html\" title=\"enum url::Position\">Position</a>","synthetic":true,"types":["url::slicing::Position"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"url/form_urlencoded/struct.Parse.html\" title=\"struct url::form_urlencoded::Parse\">Parse</a>&lt;'a&gt;","synthetic":true,"types":["url::form_urlencoded::Parse"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"url/form_urlencoded/struct.ParseIntoOwned.html\" title=\"struct url::form_urlencoded::ParseIntoOwned\">ParseIntoOwned</a>&lt;'a&gt;","synthetic":true,"types":["url::form_urlencoded::ParseIntoOwned"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"url/form_urlencoded/struct.ByteSerialize.html\" title=\"struct url::form_urlencoded::ByteSerialize\">ByteSerialize</a>&lt;'a&gt;","synthetic":true,"types":["url::form_urlencoded::ByteSerialize"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"url/form_urlencoded/struct.Serializer.html\" title=\"struct url::form_urlencoded::Serializer\">Serializer</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["url::form_urlencoded::Serializer"]}];
implementors["uuid"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"uuid/struct.Uuid.html\" title=\"struct uuid::Uuid\">Uuid</a>","synthetic":true,"types":["uuid::Uuid"]},{"text":"impl Freeze for <a class=\"enum\" href=\"uuid/enum.Version.html\" title=\"enum uuid::Version\">Version</a>","synthetic":true,"types":["uuid::Version"]},{"text":"impl Freeze for <a class=\"enum\" href=\"uuid/enum.Variant.html\" title=\"enum uuid::Variant\">Variant</a>","synthetic":true,"types":["uuid::Variant"]},{"text":"impl Freeze for <a class=\"struct\" href=\"uuid/builder/struct.Builder.html\" title=\"struct uuid::builder::Builder\">Builder</a>","synthetic":true,"types":["uuid::builder::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"uuid/error/struct.Error.html\" title=\"struct uuid::error::Error\">Error</a>","synthetic":true,"types":["uuid::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"uuid/adapter/struct.Hyphenated.html\" title=\"struct uuid::adapter::Hyphenated\">Hyphenated</a>","synthetic":true,"types":["uuid::adapter::Hyphenated"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"uuid/adapter/struct.HyphenatedRef.html\" title=\"struct uuid::adapter::HyphenatedRef\">HyphenatedRef</a>&lt;'a&gt;","synthetic":true,"types":["uuid::adapter::HyphenatedRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"uuid/adapter/struct.Simple.html\" title=\"struct uuid::adapter::Simple\">Simple</a>","synthetic":true,"types":["uuid::adapter::Simple"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"uuid/adapter/struct.SimpleRef.html\" title=\"struct uuid::adapter::SimpleRef\">SimpleRef</a>&lt;'a&gt;","synthetic":true,"types":["uuid::adapter::SimpleRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"uuid/adapter/struct.Urn.html\" title=\"struct uuid::adapter::Urn\">Urn</a>","synthetic":true,"types":["uuid::adapter::Urn"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"uuid/adapter/struct.UrnRef.html\" title=\"struct uuid::adapter::UrnRef\">UrnRef</a>&lt;'a&gt;","synthetic":true,"types":["uuid::adapter::UrnRef"]}];
implementors["webpki"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"webpki/struct.DNSNameRef.html\" title=\"struct webpki::DNSNameRef\">DNSNameRef</a>&lt;'a&gt;","synthetic":true,"types":["webpki::name::DNSNameRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"webpki/struct.InvalidDNSNameError.html\" title=\"struct webpki::InvalidDNSNameError\">InvalidDNSNameError</a>","synthetic":true,"types":["webpki::name::InvalidDNSNameError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"webpki/struct.DNSName.html\" title=\"struct webpki::DNSName\">DNSName</a>","synthetic":true,"types":["webpki::name::DNSName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"webpki/struct.SignatureAlgorithm.html\" title=\"struct webpki::SignatureAlgorithm\">SignatureAlgorithm</a>","synthetic":true,"types":["webpki::signed_data::SignatureAlgorithm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"webpki/struct.Time.html\" title=\"struct webpki::Time\">Time</a>","synthetic":true,"types":["webpki::time::Time"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"webpki/struct.EndEntityCert.html\" title=\"struct webpki::EndEntityCert\">EndEntityCert</a>&lt;'a&gt;","synthetic":true,"types":["webpki::EndEntityCert"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"webpki/struct.TrustAnchor.html\" title=\"struct webpki::TrustAnchor\">TrustAnchor</a>&lt;'a&gt;","synthetic":true,"types":["webpki::TrustAnchor"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"webpki/struct.TLSServerTrustAnchors.html\" title=\"struct webpki::TLSServerTrustAnchors\">TLSServerTrustAnchors</a>&lt;'a&gt;","synthetic":true,"types":["webpki::TLSServerTrustAnchors"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"webpki/struct.TLSClientTrustAnchors.html\" title=\"struct webpki::TLSClientTrustAnchors\">TLSClientTrustAnchors</a>&lt;'a&gt;","synthetic":true,"types":["webpki::TLSClientTrustAnchors"]},{"text":"impl Freeze for <a class=\"enum\" href=\"webpki/enum.Error.html\" title=\"enum webpki::Error\">Error</a>","synthetic":true,"types":["webpki::error::Error"]}];
implementors["yasna"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"yasna/struct.DERWriter.html\" title=\"struct yasna::DERWriter\">DERWriter</a>&lt;'a&gt;","synthetic":true,"types":["yasna::writer::DERWriter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"yasna/struct.DERWriterSeq.html\" title=\"struct yasna::DERWriterSeq\">DERWriterSeq</a>&lt;'a&gt;","synthetic":true,"types":["yasna::writer::DERWriterSeq"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"yasna/struct.DERWriterSet.html\" title=\"struct yasna::DERWriterSet\">DERWriterSet</a>&lt;'a&gt;","synthetic":true,"types":["yasna::writer::DERWriterSet"]},{"text":"impl&lt;'a, 'b&gt; Freeze for <a class=\"struct\" href=\"yasna/struct.BERReader.html\" title=\"struct yasna::BERReader\">BERReader</a>&lt;'a, 'b&gt;","synthetic":true,"types":["yasna::reader::BERReader"]},{"text":"impl&lt;'a, 'b&gt; Freeze for <a class=\"struct\" href=\"yasna/struct.BERReaderSeq.html\" title=\"struct yasna::BERReaderSeq\">BERReaderSeq</a>&lt;'a, 'b&gt;","synthetic":true,"types":["yasna::reader::BERReaderSeq"]},{"text":"impl&lt;'a, 'b&gt; Freeze for <a class=\"struct\" href=\"yasna/struct.BERReaderSet.html\" title=\"struct yasna::BERReaderSet\">BERReaderSet</a>&lt;'a, 'b&gt;","synthetic":true,"types":["yasna::reader::BERReaderSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"yasna/struct.ASN1Error.html\" title=\"struct yasna::ASN1Error\">ASN1Error</a>","synthetic":true,"types":["yasna::reader::error::ASN1Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"yasna/struct.Tag.html\" title=\"struct yasna::Tag\">Tag</a>","synthetic":true,"types":["yasna::Tag"]},{"text":"impl Freeze for <a class=\"enum\" href=\"yasna/enum.BERMode.html\" title=\"enum yasna::BERMode\">BERMode</a>","synthetic":true,"types":["yasna::reader::BERMode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"yasna/enum.ASN1ErrorKind.html\" title=\"enum yasna::ASN1ErrorKind\">ASN1ErrorKind</a>","synthetic":true,"types":["yasna::reader::error::ASN1ErrorKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"yasna/enum.PCBit.html\" title=\"enum yasna::PCBit\">PCBit</a>","synthetic":true,"types":["yasna::PCBit"]},{"text":"impl Freeze for <a class=\"enum\" href=\"yasna/enum.TagClass.html\" title=\"enum yasna::TagClass\">TagClass</a>","synthetic":true,"types":["yasna::TagClass"]},{"text":"impl Freeze for <a class=\"struct\" href=\"yasna/models/struct.ObjectIdentifier.html\" title=\"struct yasna::models::ObjectIdentifier\">ObjectIdentifier</a>","synthetic":true,"types":["yasna::models::oid::ObjectIdentifier"]},{"text":"impl Freeze for <a class=\"struct\" href=\"yasna/models/struct.ParseOidError.html\" title=\"struct yasna::models::ParseOidError\">ParseOidError</a>","synthetic":true,"types":["yasna::models::oid::ParseOidError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"yasna/models/struct.UTCTime.html\" title=\"struct yasna::models::UTCTime\">UTCTime</a>","synthetic":true,"types":["yasna::models::time::UTCTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"yasna/models/struct.GeneralizedTime.html\" title=\"struct yasna::models::GeneralizedTime\">GeneralizedTime</a>","synthetic":true,"types":["yasna::models::time::GeneralizedTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"yasna/models/struct.TaggedDerValue.html\" title=\"struct yasna::models::TaggedDerValue\">TaggedDerValue</a>","synthetic":true,"types":["yasna::models::der::TaggedDerValue"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()